%!PS-Adobe-2.0
%%Title: An Implementation of F<
%%Creator: PrintMonitor
%%CreationDate: Sunday, February 21, 1993
%%Pages: (atend)
%%BoundingBox: ? ? ? ?
%%PageBoundingBox: 30 31 582 761
%%For: SRC
%%DocumentProcSets: "(AppleDict md)" 71 0
%% © Copyright Apple Computer, Inc. 1989-92 All Rights Reserved.
%%EndComments
%%BeginProcSet: "(AppleDict md)" 71 0
userdict/LW{save statusdict/product get(LaserWriter)anchorsearch
exch pop{dup length 0 eq{pop 1}{( Plus)eq{2}{3}ifelse}ifelse}{0}ifelse exch restore}bind put
userdict/patchOK known not{save LW dup 1 ne exch 2 ne and false<1861AEDAE118A9F95F1629C0137F8FE656811DD93DFBEA65E947502E78BA12284B8A58EF0A3
2E272778DAA2ABEC72A84102D591E11D96BA61F57877B895A752D9BEAAC3DFD7D3220E2BDE7C036467464E0E836748F1DE7AB6216866F130CE7CFCEC8CE050B870C11881EE3E9D70919>{eexec}stopped{dup type/stringtype eq{pop}if}if and exch restore userdict/patchOK 3 -1 roll put} if
userdict/downloadOK known not{userdict/downloadOK{ vmstatus exch sub exch pop 120000 gt patchOK and}bind put}if
userdict/type42known known not{userdict/type42known systemdict/resourcestatus known{42/FontType resourcestatus{pop pop true}{false}ifelse }{false}ifelse put}if
type42known not downloadOK and {userdict begin /*charpath /charpath load def/charpathflag false def/charpath{userdict/charpathflag true put userdict/*charpath get exec userdict/charpathflag false put}bind def end}if
userdict/checkload known not{userdict/checkload{{pop exec} {save 3 dict begin/mystring 6050 string def
exch/endstring exch def{currentfile mystring readline not{stop}if endstring eq{exit}if}loop end restore pop}ifelse}bind put}if
userdict/LW+{LW 2 eq}bind put
userdict/ok known not{userdict/ok{systemdict/statusdict known dup{LW 0 gt and}if}bind put}if
systemdict/currentpacking known{currentpacking true setpacking}if
/md 270 dict def md begin
/av 71 def
/T true def/F false def/mtx matrix def/s75 75 string def/sa8 8 string def/sb8 8 string def
/sc8 8 string def/sd8 8 string def/s1 ( ) def/pxs 1 def/pys 1 def
/ns false def
1 0 mtx defaultmatrix dtransform exch atan/pa exch def/nlw .24 def/ppr [-32 -29.52 762 582.48] def
/pgr [0 0 0 0] def
/pgs 1 def/por true def/xb 500 array def/so true def/tso true def/fillflag false def/pnm 1 def/fmv true def
/sfl false def/ma 0 def/invertflag false def/dbinvertflag false def/xflip false def/yflip false def/noflips true def/scaleby96 false def/fNote true def/fBitStretch true def
/4colors false def/fg (Rvd\001\001\000\000\177) def
/bdf{bind def}bind def
/xdf{exch def}bdf
/xl{neg exch neg translate}bdf
/fp{pnsh 0 ne pnsv 0 ne and}bdf
/nop{}bdf/lnop[/nop load]cvx bdf
/vrb[
{fp{fg 6 get 0 ne{gsave stroke grestore}{gsave 1 setlinewidth pnsh pnsv scale stroke grestore}ifelse}if newpath}bind
/eofill load
dup
/newpath load
2 index
dup
{clip newpath}bind
{}bind
dup
2 copy
]def
/sgd systemdict/setpagedevice known{{2 dict begin/PreRenderingEnhance exch def/Policies 1 dict dup/PreRenderingEnhance 1 put def currentdict end setpagedevice}}{{pop}}ifelse bdf
/svsc systemdict/currentcolorscreen known{{currentcolorscreen/dkspf xdf/dkrot xdf/dkfreq xdf/dyspf xdf/dyrot xdf/dyfreq xdf/dmspf xdf/dmrot xdf/dmfreq xdf
/dcspf xdf/dcrot xdf/dcfreq xdf}}{{currentscreen/spf xdf/rot xdf/freq xdf}}ifelse bdf
/doop{vrb exch get exec}bdf
/psu{/udf xdf/tso xdf /fNote xdf/fBitStretch xdf/scaleby96 xdf/yflip xdf/xflip xdf
/invertflag xdf/dbinvertflag invertflag statusdict begin version cvr 47.0 ge product (LaserWriter) eq not and end invertflag and {not}if def
xflip yflip or{/noflips false def}if
/pgs xdf 2 index .72 mul exch div/pys xdf div .72 mul/pxs xdf ppr astore pop pgr astore pop/por xdf sn and/so xdf}bdf
/tab{userdict /11x17 known{userdict begin /11x17 load exec end}{statusdict /setpage known{statusdict begin 792 1224 1 setpage end}{statusdict /setpageparams known{statusdict begin 792 1224 0 1 setpageparams end}if}ifelse}ifelse}bdf
/a3Size{userdict /a3 known{userdict begin /a3 load exec end}{statusdict /setpageparams known{statusdict begin 842 1191 0 1 setpageparams end}if}ifelse}bdf
/txpose{fNote{smalls}{bigs}ifelse pgs get exec pxs pys scale ppr aload pop por{noflips{pop exch neg exch translate pop 1 -1 scale}if
xflip yflip and{pop exch neg exch translate 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg translate}if 
xflip yflip not and{pop exch neg exch translate pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 translate}if yflip xflip not and{ppr 1 get neg ppr 0 get neg translate}if}
{noflips{translate pop pop 270 rotate 1 -1 scale}if xflip yflip and{translate pop pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg translate}if
xflip yflip not and{translate pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 translate}if yflip xflip not and{translate pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 exch translate}if}ifelse
statusdict begin/waittimeout where{pop waittimeout 300 lt{statusdict/waittimeout 300 put}if}if end 
scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy translate .96 dup scale neg exch neg exch translate}if}bdf
/fr{4 copy pgr aload pop 3 -1 roll add 3 1 roll exch add 6 2 roll 3 -1 roll
sub 3 1 roll exch sub 3 -1 roll exch div 3 1 roll div exch scale pop pop xl}bdf
/obl{{0.212557 mul}{pop 0}ifelse}bdf
/sfd{ps fg 5 -1 roll get mul 100 div 0 ps 5 -1 roll obl ps neg 0 0 6a astore makefont setfont}bdf
/fnt{findfont sfd}bdf
/bt{sa 3 1 roll 3 index and put}bdf
/sa(\000\000\000\000\000\000\000\000\000\000)def
/fs{0 1 bt 1 2 bt 2 4 bt 3 8 bt 4 16 bt 5 32 bt 6 64 bt 7 128 bt sa exch 8 exch put}bdf
/mx1 matrix def
/mx2 matrix def
/mx3 matrix def
/bu{currentpoint 4colors{currentcmykcolor}{currentrgbcolor}ifelse currentlinewidth currentlinecap currentlinejoin 
currentdash exch aload length fg 5 sfl{1}{0}ifelse put pnsv pnsh 
2t aload pop 3a aload pop mx2 aload pop mx1 aload pop mtx currentmatrix aload pop
mx3 aload pop ps pm restore/ps xdf mx3 astore pop}bdf
/bn{/pm save def mx3 setmatrix newpath 0 0 moveto ct dup 39 get 0 exch getinterval cvx exec mtx astore setmatrix mx1 astore pop mx2 astore pop 3a 
astore pop 2t astore pop/pnsh xdf/pnsv xdf gw
/sfl fg 5 get 0 ne def array astore exch setdash setlinejoin setlinecap 
setlinewidth 4colors{mysetcmykcolor}{setrgbcolor}ifelse moveto}bdf
/fc{save vmstatus exch sub 50000 lt
{(%%[|0|]%%)=print flush}if pop restore}bdf
/tc{32768 div add 3 1 roll 32768 div add 2t astore pop}bdf
/3a [0 0 0] def
/2t 2 array def
/tp{3a astore pop}bdf
/tt{mx2 currentmatrix pop currentpoint 2 copy 2t aload pop qa 2 copy translate 3a aload pop exch dup 0 eq
{pop}{1 eq{-1 1}{1 -1}ifelse scale}ifelse rotate pop neg exch neg exch translate moveto}bdf
/te{mx2 setmatrix}bdf
/th{3 -1 roll div 3 1 roll exch div 2 copy mx1 scale pop scale/sfl true def}bdf
/tu{1 1 mx1 itransform scale/sfl false def}bdf
/ts{1 1 mx1 transform scale/sfl true def}bdf
/fz{/ps xdf}bdf
/dv{dup 0 ne{div}{pop}ifelse}bdf
/pop4{pop pop pop pop}bdf
/it{sfl{mx1 itransform}if}bdf
/gm{exch it moveto}bdf/rm{it rmoveto}bdf
/lm{currentpoint sfl{mx1 transform}if exch pop sub 0 exch it rmoveto}bdf
/fm{statusdict/manualfeed known}bdf
/se{statusdict exch/manualfeed exch put}bdf
/mf{dup/ma exch def 0 gt{fm se/t1 5 st ok ma 1 gt and{/t2 0 st/t3 0 st
statusdict/manualfeedtimeout 3600 put
}if}if}bdf
/jn{/statusdict where exch pop{statusdict exch /jobname exch put}if}bdf
/pen{pnm mul/pnsh xdf pnm mul/pnsv xdf pnsh setlinewidth}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/dh{fg 6 1 put array astore dup {1 pxs div mul exch}forall astore exch pop exch pop exch setdash}bdf
/ih[currentdash]def
/rh{fg 6 0 put ih aload pop setdash}bdf
/dl{gsave nlw pys div setlinewidth 0 setgray}bdf
/dlin{exch currentpoint currentlinewidth 2 div dup
translate newpath moveto lineto currentpoint stroke grestore moveto}bdf
/lin{fg 6 get 0 ne{exch lineto currentpoint 0 doop moveto}
{exch currentpoint/pnlv xdf/pnlh xdf gsave newpath/@1 xdf/@2 xdf fp{pnlh @2 lt{pnlv @1 ge
{pnlh pnlv moveto @2 @1 lineto pnsh 0 rlineto
0 pnsv rlineto pnlh pnsh add pnlv pnsv add lineto pnsh neg 0 rlineto}
{pnlh pnlv moveto pnsh 0 rlineto @2 pnsh add @1 lineto 0 pnsv rlineto
pnsh neg 0 rlineto pnlh pnlv pnsv add lineto}ifelse}{pnlv @1 gt
{@2 @1 moveto pnsh 0 rlineto pnlh pnsh add pnlv lineto 0 pnsv rlineto
pnsh neg 0 rlineto @2 @1 pnsv add lineto}{pnlh pnlv moveto pnsh 0 rlineto
0 pnsv rlineto @2 pnsh add @1 pnsv add lineto pnsh neg 0 rlineto
0 pnsv neg rlineto}ifelse}ifelse
closepath fill}if @2 @1 grestore moveto}ifelse}bdf
/gw{/pnm fg 3 get fg 4 get div def}bdf
/lw{fg exch 4 exch put fg exch 3 exch put gw pnsv pnsh pen}bdf
/barc{/@1 xdf/@2 xdf/@3 xdf/@4 xdf/@5 xdf
/@6 xdf/@7 xdf/@8 xdf gsave
@5 @7 add 2 div @6 @8 add 2 div translate newpath 0 0 moveto
@5 @7 sub @6 @8 sub mtx currentmatrix pop scale @1{newpath}if
0 0 0.5 @4 @3 arc @4 @3 sub abs 360 ge{closepath}if
mtx setmatrix @2 doop grestore}bdf
/ar{dup 0 eq barc}bdf
/ov{0 exch 360 exch true barc}bdf
/rc{dup/@t xdf 0 eq{4 copy 3 -1 roll eq 3 1 roll eq and{pnsv 2 div sub exch pnsh 2 div sub exch 4 2 roll pnsv 2 div add exch pnsh 2 div add exch
/@t 1 def}if}if currentpoint 6 2 roll newpath 4 copy 4 2 roll exch moveto 6 -1 roll lineto lineto lineto closepath @t doop moveto}bdf
/mup{dup pnsh 2 div le exch pnsv 2 div le or}bdf
/rr{/@1 xdf 2. div/@2 xdf 2. div/@3 xdf
/@4 xdf/@5 xdf/@6 xdf/@7 xdf
@7 @5 eq @6 @4 eq @2 mup or or{@7 @6 @5 @4 @1 rc}
{@4 @6 sub 2. div dup @2 lt{/@2 xdf}{pop}ifelse
@5 @7 sub 2. div dup @2 lt{/@2 xdf}{pop}ifelse
@1 0 eq{/@2 @2 pnsh 2 div 2 copy gt{sub def}{0 pop4}ifelse}if
currentpoint newpath
@4 @6 add 2. div @7 moveto
@4 @7 @4 @5 @2 arcto pop4
@4 @5 @6 @5 @2 arcto pop4
@6 @5 @6 @7 @2 arcto pop4
@6 @7 @4 @7 @2 arcto pop4
closepath @1 doop moveto}ifelse}bdf
/pr{gsave newpath/pl{exch moveto/pl{exch lineto}def}def}bdf
/pl{exch lineto}bdf
/ep{dup 0 eq{{moveto}{exch lin}{}{(%%[|1|]%%)= flush}pathforall
pop grestore}{doop grestore}ifelse currentpoint newpath moveto}bdf
/gr{64. div setgray}bdf
/savescreen{ns not{/ns true def systemdict/currentcolorscreen known{currentcolorscreen/pkspf xdf/pkrot xdf/pkfreq xdf/pyspf xdf/pyrot xdf/pyfreq xdf/pmspf xdf/pmrot xdf/pmfreq xdf
/pcspf xdf/pcrot xdf/pcfreq xdf}{currentscreen/sspf xdf/srot xdf/sfreq xdf}ifelse}if}bdf
/restorescreen{/ns false def systemdict/setcolorscreen known{pcfreq pcrot/pcspf load pmfreq pmrot/pmspf load pyfreq pyrot/pyspf load
pkfreq pkrot/pkspf load setcolorscreen}{sfreq srot/sspf load setscreen}ifelse}bdf
/pat{savescreen sa8 
copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sa8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}setscreen exch not{gr}{pop}ifelse}bdf
/sg{restorescreen gr}bdf
/cpat{savescreen 10 2 roll 7 -1 roll sa8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sa8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}8 -1 roll sb8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sb8
exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}9 -1 roll sc8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sc8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}10 -1 roll sd8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sd8
exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}psuedo1 dsc 4{4 -1 roll 1 exch 64 div sub}repeat mysetcmykcolor pop pop}bdf
systemdict/setcolorscreen known{/psuedo1 lnop bdf/dsc/setcolorscreen load def}{/psuedo1{16{pop}repeat sa8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sa8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}}bdf
/bwsc{setscreen dup gr 0 exch 0 exch 64 exch 64 exch 64 exch}bdf/dsc/bwsc load def
}ifelse
systemdict/setcmykcolor known{/mysetcmykcolor /setcmykcolor load def}{/mysetcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf}ifelse
/dc{transform round .5 sub exch round .5 sub exch itransform}bdf
/sn{userdict/smooth4 known}bdf
/x8{3 bitshift}bdf
/x4{2 bitshift}bdf
/d4{-2 bitshift}bdf
/d8{-3 bitshift}bdf
/rb{15 add -4 bitshift 1 bitshift}bdf
/db{/@7 save def/@1 xdf/@2 xdf/@3 xdf/@4 xdf/@5 xdf/@6 @5 @3 4 add mul def
dc translate scale/xdbit 1 1 idtransform abs/ydbit exch def abs def{0 0 1 ydbit add 1 10 rc clip}if
@1 0 eq @1 4 eq or{currentrgbcolor 1 setgray ydbit 0 1 ydbit add 1 2 rc setrgbcolor}if
@1 3 eq @1 7 eq or{1 setgray}{currentrgbcolor 2 index eq exch 2 index eq and exch pop{0 setgray}if}ifelse/@9 @1 0 eq @1 1 eq @1 3 eq or or dbinvertflag xor def/@13 @6 def
@2 fBitStretch or{/@10 @4 x4 def/@11 @3 x4 def/@12 @10 rb def/@13 @12 @11 mul def/@15 1 1 dtransform abs/calcY 1 index def round cvi/@14 exch def
abs/calcX 1 index def round cvi scaleby96 not{1 add}if def/@16 @15 rb def/@17 @16 @14 mul def}if
sn @13 60000 lt and @2 fBitStretch or and{mtx currentmatrix dup 1 get exch 2 get 0. eq exch 0. eq and @17 60000 lt and fBitStretch and{@16 3 bitshift @14 @9 [calcX 0 0 calcY 0 0]{@17 string @13 string
currentfile @6 string readhexstring pop 1 index @4 @3 @5 @12 @2 smooth4
@10 @11 @12 dup string 5 index @15 @14 @16 dup string stretch}imagemask}{@12 x8 @11 @9 [@10 0 0 @11 0 0]{@13 string
currentfile @6 string readhexstring pop 1 index @4 @3 @5 @12 @2 smooth4}imagemask}ifelse}{@5 3 bitshift @3 4 add @9 [@4 0 0 @3 0 2]{currentfile @6 string readhexstring pop}imagemask}ifelse
@7 restore}bdf
systemdict/setcmykcolor known{/psuedo lnop bdf/di/colorimage load def}{/routines[{.3 mul add 1}bind{.59 mul add 2}bind{.11 mul add round cvi str exch i exch put/i i 1 add def 0 0}bind]def
/psuedo{/i 0 def 0 exch 0 exch{exch routines exch get exec}forall pop pop str}bdf/bwi{pop pop image}bdf/di/bwi load def}ifelse
/cdb{/@7 save def/@1 xdf/@2 xdf/@3 xdf/@4 xdf/@5 xdf
systemdict/setcmykcolor known not{dc}if translate scale /@6 xdf
/@18 @5 dup 60000 ge{pop 60000}if string def @6 not{/str @18 0 @18 length 3 idiv getinterval def}if @4 @3 8 [@4 0 0 @3 0 0]@6{{currentfile @18 readhexstring pop}image}{{currentfile @18 readhexstring pop psuedo}false 3 di}ifelse @7 restore}bdf
/wd 16 dict def
/mfont 14 dict def
/mdf{mfont wcheck not{/mfont 14 dict def}if mfont begin xdf end}bdf
/cf{{1 index/FID ne{def}{pop pop}ifelse}forall}bdf/rf{/@1 exch def/@2 exch def
FontDirectory @2 known{cleartomark pop}{findfont dup begin dup length @1 add dict begin
cf{/Encoding macvec def}{Encoding dup length array copy/Encoding exch def
counttomark 2 idiv{Encoding 3 1 roll put}repeat}ifelse
pop
exec currentdict end end @2 exch definefont pop}ifelse}bdf
/bmbc{exch begin wd begin
/cr xdf
save
CharTable cr 6 mul 6 getinterval{}forall
/bitheight xdf/bitwidth xdf
.96 div/width xdf
Gkernmax add/XOffset xdf Gdescent add/YOffset xdf/rowbytes xdf
rowbytes 255 eq{0 0 0 0 0 0 setcachedevice}
{Gnormsize dup scale
width 0 XOffset YOffset bitwidth XOffset add bitheight YOffset add
setcachedevice
rowbytes 0 ne{
XOffset YOffset translate newpath 0 0 moveto
bitwidth bitheight scale
sn{
/xSmt bitwidth x4 def
/ySmt bitheight x4 def
/rSmt xSmt rb def
rSmt x8 ySmt true
[xSmt 0 0 ySmt neg 0 ySmt]
{rSmt ySmt mul string CharData cr get
1 index bitwidth bitheight rowbytes rSmt tso smooth4}
}{rowbytes 3 bitshift bitheight 4 add true
[bitwidth 0 0 bitheight neg 0 bitheight 2 add]
{CharData cr get}
}ifelse
imagemask
}if
}ifelse
restore
end end
}bdf
/bb{.96 exch div/Gnormsize mdf 2 index
/Gkernmax mdf 1 index/Gdescent mdf
3 index div 4 1 roll
2 index div 1. 5 2 roll
exch div 4 1 roll
4 array astore/FontBBox mdf
}bdf
/cdf{mfont/CharData get 3 1 roll put}bdf
/bf{
mfont begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding macvec def
/MFontType 0 def
/BuildChar/bmbc load def
end
mfont definefont pop
}bdf
/wi LW 1 eq{{gsave 0 0 0 0 0 0 0 0 moveto lineto lineto lineto closepath clip stringwidth grestore}bind}{/stringwidth load}ifelse def
/aps{0 get 124 eq}bdf
/xc{s75 cvs dup}bdf
/xp{put cvn}bdf
/scs{xc 3 67 put dup 0 95 xp}bdf
/sos{xc 3 79 xp}bdf
/sbs{xc 1 66 xp}bdf
/sis{xc 2 73 xp}bdf
/sob{xc 2 79 xp}bdf
/sss{xc 4 83 xp}bdf
/dd{exch 1 index add 3 1 roll add exch}bdf
/smc{moveto dup show}bdf
/ndf2{udf{dup /FontType get 0 eq{/FDepVector get{dup /FontType get 0 eq{ndf2}{dup /df2 known{begin df2 0 null put end
}{pop}ifelse}ifelse}forall}{/df2 known{dup begin df2 0 null put end}if}ifelse}{pop}ifelse}bdf
/kwn{FontDirectory 1 index known{findfont dup ndf2 exch pop}}bdf
/gl{1 currentgray sub setgray}bdf
/newmm{dup /FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall currentdict end
dup /FDepVector 2 copy get[exch 6 index exch 6 index exch{newmm 3 1 roll}forall pop pop] put dup
}{/mfont 10 dict def mfont begin/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def/Encoding macvec def/df 1 index def/df2 1 array def/FontBBox [0 0 1 1] def/StyleCode 2 index def
/mbc{bcarray StyleCode get}def/BuildChar{exch begin	wd begin/cr exch def/cs s1 dup 0 cr put def df /MFontType known not{
df2 0 get null eq{df dup length 2 add dict begin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/StrokeWidth 1 0 FontMatrix idtransform pop dup nlw mul pys div ps div exch 0.012 mul 2 copy le{exch}if pop def/PaintType 2 def currentdict end
/q exch definefont df2 exch 0 exch put}if}if mbc exec end end}def end mfont}ifelse
3 index exch definefont exch pop}bdf
/mb{dup sbs kwn{0 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf
/mo{dup sos kwn{2 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf
/ms{dup sss kwn{4 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf
/ou{dup sos kwn{mfont/df2 known{mfont begin df2 0 null put end}if 3 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf
/su{dup sss kwn{mfont/df2 known{mfont begin df2 0 null put end}if 5 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf
/ao{/fmv true def ou}bdf/as{/fmv true def su}bdf
/vo{/fmv false def ou}bdf/vs{/fmv false def su}bdf
/c{currentrgbcolor dup 4 1 roll eq 3 1 roll eq and/gray xdf}bdf
/bcarray[{/da .03 def df setfont gsave cs wi 1 index 0 ne{exch da add exch}if grestore setcharwidth
cs 0 0 smc da 0 smc da da smc 0 da moveto show}bind dup{/da 1 ps div def df setfont gsave cs wi 1 index 0 ne{exch da add exch}if grestore setcharwidth
cs 0 0 smc da 0 smc da da smc 0 da smc c gray{gl}{1 setgray}ifelse da 2. div dup moveto show}bind
{df setfont gsave cs wi grestore setcharwidth c gray{gl}{currentrgbcolor 1 setgray}ifelse cs 0 0 smc df2 0 get setfont
gray{gl}{4 1 roll setrgbcolor}ifelse 0 0 moveto show}bind
{/da 1 ps div def/ds .05 def/da2 da 2. div def df setfont gsave cs wi 1 index 0 ne{exch ds add da2 add exch}if grestore setcharwidth
cs ds da2 add .01 add 0 smc 0 ds da2 sub translate 0 0 smc da 0 smc da da smc 0 da smc c gray{gl}{1 setgray}ifelse da 2. div dup moveto show}bind
{/da .05 def df setfont gsave cs wi 1 index 0 ne{exch da add exch}if grestore setcharwidth c cs da .01 add 0 smc 0 da translate
gray{gl}{currentrgbcolor 1 setgray 4 -1 roll}ifelse 0 0 smc gray{gl}{4 1 roll setrgbcolor}ifelse df2 0 get setfont 0 0 moveto show}bind]def
/st{1000 mul usertime add dup 2147483647 gt{2147483647 sub}if def}bdf
/the{usertime sub dup 0 lt exch -2147483648 gt and}bdf
/6a 6 array def
/2a 2 array def
/3q 3 array def
/qs{3 -1 roll sub exch 3 -1 roll sub exch}bdf
/qa{3 -1 roll add exch 3 -1 roll add exch}bdf
/qm{3 -1 roll 1 index mul 3 1 roll mul}bdf
/qn{6a exch get mul}bdf
/qA .166667 def/qB .833333 def/qC .5 def
/qx{6a astore pop
qA 0 qn qB 2 qn add   qA 1 qn qB 3 qn add
qB 2 qn qA 4 qn add   qB 3 qn qA 5 qn add
qC 2 qn qC 4 qn add   qC 3 qn qC 5 qn add}bdf
/qp{6 copy 12 -2 roll pop pop}bdf
/qc{exch qp qx curveto}bdf
/qi{{exch 4 copy 2a astore aload pop qa .5 qm newpath moveto}{exch 2 copy 6 -2 roll 2 qm qs 4 2 roll}ifelse}bdf
/qq{{qc 2a aload pop qx curveto}{exch 4 copy qs qa qx curveto}ifelse}bdf
/pt{currentpoint newpath moveto}bdf
/qf{/fillflag true def}bdf
/ec{dup 4 and 0 ne{closepath}if 1 and 0 ne{0 doop}if grestore currentpoint newpath moveto/fillflag false def}bdf
/eu{currentpoint fp{0 ep}{grestore newpath}ifelse moveto/fillflag false def}bdf
/bp{currentpoint newpath 2 copy moveto}bdf
/ef{gsave fillflag{gsave eofill grestore}if}bdf
/sm{0 exch{@1 eq{1 add}if}forall}bdf
/lshow{4 1 roll exch/@1 exch def{1 index wi pop sub 1 index sm dv 0 @1 4 -1 roll widthshow}{1 index wi pop sub
1 index dup sm 10 mul exch length 1 sub add dv dup 10. mul 0 @1 4 -1 roll 0 6 -1 roll awidthshow}ifelse}bdf
/setTxMode{sa 9 2 index put exch not{3 eq{1}{0}ifelse setgray}{pop}ifelse}bdf
/SwToSym{{}mark false/Symbol/|______Symbol 0 rf 0 sa 6 get 0 ne{pop 1}{sa 7 get 0 eq{pop 2}if}ifelse
sa 1 get 0 ne/|______Symbol
sa 4 get 0 ne{vs}{sa 3 get 0 ne{vo}{fnt}ifelse}ifelse}bdf
/mc{0 3 1 roll transform neg exch pop}bdf
/ul{dup 0 ne sa 2 get 0 ne and{gsave 0 0
/UnderlinePosition kif{mc}{ps -10 div}ifelse/UnderlineThickness kif{mc}{ps 15 div}ifelse
abs setlinewidth neg rmoveto
sa 4 get 0 ne{gsave currentlinewidth 2. div dup rmoveto currentpoint newpath moveto
2 copy rlineto stroke grestore}if
sa 3 get sa 4 get or 0 ne{gsave currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{gl}{1 setgray}ifelse 2 copy rlineto stroke grestore rlineto strokepath nlw pys div setlinewidth}{rlineto}ifelse
stroke grestore}{pop}ifelse}bdf
/sgt{2 copy known{get true}{pop pop false}ifelse}bdf
/kif{currentfont dup/FontMatrix get exch/FontInfo sgt{true}{currentfont/df sgt
{dup/FontInfo sgt{3 1 roll/FontMatrix get mtx concatmatrix exch true}{pop pop pop false}
ifelse}{pop pop false}ifelse}ifelse{3 -1 roll sgt{exch true}{pop false}ifelse}{false}ifelse}bdf
/blank/Times-Roman findfont/CharStrings get/space get def
/macvec 256 array def
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
macvec 0 32 getinterval astore pop
macvec 32/Times-Roman findfont/Encoding get
32 96 getinterval putinterval macvec dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
macvec 128 128 getinterval astore pop
{}mark true/Courier/|______Courier 0 rf
{/Metrics 21 dict begin/zero 600 def/one 600 def/two 600 def/three 600 def/four 600 def/five 600 def/six 600 def/seven 600 def/eight 600 def
/nine 600 def/comma 600 def/period 600 def/dollar 600 def/numbersign 600 def/percent 600 def/plus 600 def/hyphen 600 def/E 600 def/parenleft 600 def/parenright 600 def/space 600 def
currentdict end def currentdict/UniqueID known{/UniqueID 16#800000 def}if/FontBBox FontBBox 4 array astore def}mark true/Helvetica/|______Seattle 1 rf
/oldsettransfer/settransfer load def
/concatprocs{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx}def
/settransfer{currenttransfer concatprocs oldsettransfer}def
/PaintBlack{{1 exch sub}settransfer gsave newpath clippath 1 setgray fill grestore}def
/od{(Rvd\001\001\000\000\177) fg copy pop txpose
1 0 mtx defaultmatrix dtransform exch atan/pa exch def
newpath clippath mark
{transform{itransform moveto}}{transform{itransform lineto}}
{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform
{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}
{{closepath}}pathforall newpath counttomark array astore/gc xdf pop ct 39 0 put
10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if
statusdict/processcolors known{statusdict begin processcolors end 4 eq{/4colors true def}if}if}bdf
/cd{}bdf
/op{/sfl false def systemdict/currentcolorscreen known{dcfreq dcrot/dcspf load dmfreq dmrot/dmspf load dyfreq dyrot/dyspf load
dkfreq dkrot/dkspf load setcolorscreen}{freq rot/spf load setscreen}ifelse savescreen
/ns false def/pm save def}bdf
/cp{not{userdict/#copies 0 put}if ma 0 gt{{t1 the{exit}if}loop}if{/copypage load exec}{/showpage load exec}ifelse pm restore}bdf
/px{0 3 1 roll tp tt}bdf
/psb{/us save def}bdf
/pse{us restore}bdf
/ct 40 string def
/nc{currentpoint initclip newpath gc{dup type dup/arraytype eq exch/packedarraytype eq or{exec}if}
forall clip newpath moveto}def
/kp{ct 0 2 index length 2 index 39 2 index put getinterval copy cvx exec mx3 currentmatrix pop}bdf
end
LW 1 eq userdict/a4small known not and{/a4small
[[300 72 div 0 0 -300 72 div -120 3381]
280 3255
{statusdict/jobstate (printing) put 0 setblink
margins
exch 196 add exch 304 add 8 div round cvi frametoroket
statusdict/jobstate (busy) put
1 setblink}
/framedevice load
60 45{dup mul exch dup mul add 1.0 exch sub}/setscreen load
{}/settransfer load/initgraphics load/erasepage load]cvx
statusdict begin bind end readonly def}if
md begin/bigs[lnop userdict/letter known{/letter load}{lnop}ifelse userdict/legal known{/legal load}{lnop}ifelse userdict/a4 known{/a4 load}{lnop}ifelse userdict/b5 known{/b5 load}{lnop}ifelse 
lnop lnop lnop /tab load/a3Size load]def
/smalls[lnop userdict/lettersmall known{/lettersmall load}{userdict/note known{/note load}{lnop}ifelse}ifelse
userdict/legal known{/legal load}{lnop}ifelse userdict/a4small known{/a4small load}{lnop}ifelse 
userdict/b5 known{/b5 load}{userdict/note known{/note load}{lnop}ifelse}ifelse lnop lnop lnop /tab load/a3Size load]def end
systemdict/currentpacking known{setpacking}if
{currentfile eexec} ( %endeexec) ok userdict/stretch known not and checkload

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
 %endeexec

{currentfile eexec} ( %endeexec) ok userdict/smooth4 known not and checkload
F94E00EE41A71C59E5CAEED1EDBCF23D1DBA1EE99B9BB356492923BD8B1BA83A87CEB0E07377A31FD6241E814681118E17DC7CACE570399506E6E441B871B6043831BD03EFC11DBBD8001EE2FF8CFBD485065D455A2E15AC36F1A84AD8789FA6461199C7CD14CB9FD64D4B06452B7FC0A8FC263F70F1CCB893295D4DE70ADAB771C0F84396FA98C60B11DA02ABA157298DF0A23621853BEF167443A985ADC09BEFFD51CB4D29179E2B34609EF38A49DA61F4BFC256A3DE0732D7D29754A194857B9C9E9971227AA1DD0611FBB10E44E5FF66C062D9C24ED3290529330BC317825E876929582DB0E39B9FC5EFD20CC1D4F94920EB9C534D0DA90DE70D25BC7287319CF28602B3F46633C242CAFC8905E960317E3C2FA20AB8DB06ADBAF292FC7BA2CA14EE65DF28B99CC11666B70AD33E8E1D57D63D4B89ECC615AE5747C1CA752C833D8D6DE54CD4A0350B44310555CE3BD2C615ADD27B634CDB350AF3A432CE78AACD2909A5B586F666CD87919A36DB1CBE86B3CE281DFD01CD7E1B8A18A4B415CECBFF79A5C4390A15EA77D14D6BE12BAB5A8268C3F286D0590060647CABED674443CD258F11415E866AB330A251691B61F2422A61AFE59B6B4FBDCF85ED9BA0F8E483C034089E6877FF5923698D3A0DC0EED6B9CFD32DF0839BC4EA5F6D1FCB6DD0920391E57E84745131D02D100179F4E0A68EC0A5FF6680A6F463D038B04AF63FFA13D743B995A26A743C26D387209023C91DE43DF047A16F328AC9DDC08573B38BE9EA341EA16C78EC32F3A1B36B90D95A50610F4D050EC1C33497F3F3A81A1B4C8BEF0BA84EE2FAA32DC112DAC490AF53E1749C4A0D866CAF7B893E52383B0D38065C333FB122B700D7246F7EE87D942AE3DB5C1DD77E9E76C80CC5AD63D28DFED0E229CE604673F78CD47F258FDF5BF3A3EAEC5C9BC8E482D8DBA9D268A35DA8C095A690679ED2123E8B8F5E4826FA3B199EAA5D482D4B6AA86572E387CECEB7149C8947F41D6339328A748A17F8C4AD3B0555F1E409450BA0C564F1F488BB5096EB003568D4D5EF6489897E27409547D0EE4487D30184793B0F27BD265A64BDB3EA6761569DA955620C612E718677B77D6D81B999C6298877AFE0D1D6F6F358377A8BD2402F669C64B972B3A065EF7DD4BDEFFFE17E63DB8898FA6E69166B710AAD6BA2EA9AF61E4B8C8701638D4D6E4DFFFC192AEF6BC027095C4C72D748979675BA29FAF61E75343E14E61034602E5A79CD2519796ED6A9CC4EDEA46A9B59D4A807E786B5EE46F25B0360BC8E7C12D723122CDEEF247C9776F4C99C8EBED6828AA19744B5ADF0D07D95D98B3072372388D41B0FAB1CCE2775170679575ECDCA13B22A17FE9C6605C3445F58F1A829512DAB6C528F83580C8AA53C35D605F626F5AD0B7FC1EA87D69A835E3F53A1F450FB0AF42A5772F89D92A50D10F15BDBDA409F50C0B8AB93FE8A16D029DD8BB5C480D1466735ED4D9CAF637E5ECD6C2ECB6BF3B3EFBEE7AB936D2C568E3009D156B87CACB1FB3A48A70BC91B2EC35CC9147FFB1A524E2B2F2E4E2C1B12F1C1C63768BB95CD62FEC01CBA79B9FA282DD4DF49990F27FF8EE4E2DDE2F0ACD83BC9D4BE0090192C7A799967EC4DC2D63C0835E22D4C4B366D7FDCF3A05A4B53DF780F986EF25C79B665D5C00EFF7F17C0BB6D544F9D83A7FDAC47D9C5683A656011374253C918FF6EA64749DD971B2300DD5320033E01EC591F6318CCE94CE2B81C04322EC52B624E50643B52391CCD2AB56396A2AD8E2D3CA61B80D9D4CC363B2DF7863526958CDF3497E36648406C317E58EC563E7C26149A2A3C643ADFB39A8DD92974C6D2A2A9D7B71CDF3FEBBF32BB02E7B45CF53AAEAD5E963A4AA4AF9A149A08A4EC303D5F2369977E93F54897EEAD31B06C5845D63F49D65F8E5573962241A57CCD717CE6CA8C784A11192943616EA059B51BC38429E18D0121FCBB6FBD5D909B0D89E616C66DEF6A0F165A7030BD911A1B120468329CBB006C8D37720E531CF31E878CB4AAAC137633675C3D546F5162487AB35F470C042BDEB945E0F2532BF92AA6FD53434440221ECD3533A7AA89900CB19EFE2CD872DF8B7969AF0D3B72BF31DC5DD69CA6460966F61AB17CB507964098DBA3AF122EEC3128A9BAFE1034493F372B36BD1351205E9043A67C544402D8BCE24358C8A5CE33867A00794CF7097D59C88279A11EE9C854E7E7AAE881F9828C569D208F5F33375F59E9A3818CFA38AAD0CBFBA32F9F44A8BB79DE4C40E3886457C16DA4A27953AA1E99472E35F2323F0BAA5E37DC28CBA46FEFB73B190016055ADD4D27615D748499A0E1C4B8C7EC339C1C4D95A813A85918A8D01EEB485DDCDCEA6EA3F2C2A9D85C139CD90CCB352634F9AFE836BCAC0C274E352BA2071B5269D5DE4CCDE3FF990CBA974980C7332AE1545A9C60D5D1459D3AE95C1AC065733AF14FADB440A110DD539563B8D850CD0704C52F3F7CCCB53630D776560CBD22D8FF08F5B354487A171AEC15F5F54DE9CAB668BCAC573E788D92762EF63E76087005F4AC2D02E0CAC173C11BE62ACE5DC4D3374F2F9746C9981E125FF9AB8CAE76D13039E2C54DFD708E028A619EA1ED78E6B46F06DF0D0B74BBEDD8C190C7C0CEBDE8F7A4888CC36575313478DD2CFE392E9BB7B2416955D44B7024A3BA43FBF37293B386D64746D7748895411D243FAEC50638F2AA33337D7FA018ADDAC5835A0DDFAE99AD6299DFB4CA6872C59853E3AC12FC9E3D26629C5B49CF844C87B3C4BFBE3074E3A1CE6984758C20C661084381CD6B4582D84F19C0000B5FC0DCB42B567E396031601C095D7016283EBE5F13CD8A3A374A74DDBBABD36081149F8BC242085F2F7297CC97FD3B8BAD206D8AC9707A39ECCC7963B522E08DA391A1EF12DD4D746DBDDDCC0834F88160CF189A9645567CEC2F023A571AF0DFD15DB85B744C28C000DF53B05F8F210841F6E87A04F20C777B7C0BE6182BE2E90226E5301A12532A745F2FAAA81637CF11B78CD2B99A4D18B862D6C5DBD31793FB16A2D9AAD376D4484D75AA833D0068B1D34DB74E3302480854E3B5484D8A47E39A89A2FA927BC3641EA7F8E004FDE4C2F08D40D99F1ACB47CAF6887629BF6DFE12968D297596D28CE0CF148B12E7DCB49FB94F5ADBD214C3A6CE1E249831BA9EB8A189F2CE1ABE39A7B537253E369A508A2AF2ADB9463F9B56BBBFF31D535FF997F537C6675C196E7ECBD493F652FA7CC6D9C1CA3379BFDB5AF7513C6E834054494296B91A6EE800114363D5D5D0759F41B4DECB653B9DE3E94583579EF549ED5F3FAFB12661ABC0C57A332406517ED3454EDED34B386C60F78DC976266E0EAF54FC245FB0E3EFC8016236436B599C1C97A8C5E0AC8F7836161873C71F01ED9CC25C236420F41FD8277993D3959205912FA0927B59E3DAE7377D82079447D6E41EE5AEC0DFFF79AF8F4ED47F17EE708FEA45877860D56F8CBCE65A061E8E1CA4A5FBAF0E13429A7F0ADB6F178FA449F46CC539BBC0107E3A53B1C362A04B20E6D721E7E6E1E4976A11DDC98C7614D22B53DFBB6DAE533AC9BE882021A735C30DAA4A44AED09F49A390E8CFF59BD9C30667AF21B03EC5CEBD5C2C3AA2769E8D714191A48E7DDF50B13D1560E82EFB65FCE601AE9E8C351FBA1DED80B7351314E7F9F9A784BFE3759B7E322A84E7B51F9DC5F5D9C8050CD79B27C0A4B0DD68A3C27A948AD6858E35B960D2DEA838C479CAEA83B1A912174ACB2100E55E7A14892D7A9B3711FF0B20065C1995B49E1F23464A92DD140642E3A7B1973849E64D1A3CF60000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
 %endeexec

%%EndProcSet

%%EndProlog
%%BeginDocumentSetup
md begin
F sgd
svsc

T T 0 0 730 552 -31 -30 761 582 100 72 72 1 F F F F T T T F psu
(SRC; document: An Implementation of F<)jn
0 mf
od
%%EndDocumentSetup
%%Page: ? 1
op
0 0 730 552 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
686 470 gm
(nc 0 0 730 552 6 rc)kp
F 1 setTxMode
0 fs
bu fc

%%BeginFont: Times-Roman
%%IncludeFont: Times-Roman
bn
%%EndFont
bu fc
{}mark T /Times-Roman /|______Times-Roman 0 rf
bn
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
686 488 gm
(1)show
127 179 gm
1 fs
bu fc

%%BeginFont: Times-Bold
%%IncludeFont: Times-Bold
bn
%%EndFont
bu fc
{}mark T /Times-Bold /|______Times-Bold 0 rf
bn
18 fz
bu fc
2 F /|______Times-Bold fnt
bn
(An implementation of F)show
0 2 rm
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(<:)show
157 237 gm
2 fs
bu fc

%%BeginFont: Times-Italic
%%IncludeFont: Times-Italic
bn
%%EndFont
bu fc
{}mark T /Times-Italic /|______Times-Italic 0 rf
bn
14 fz
bu fc
2 F /|______Times-Italic fnt
bn
(Luca Cardelli)show
171 159 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(Digital Equipment Corporation, Systems Research Center)show
185 195 gm
(130 Lytton Avenue, Palo Alto CA 94301)show
229 96 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Abstract)show
244 114 gm
2 fs
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.12371 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.29586 0. 32 0.02958 0.( is a highly expressive typed )awidthshow
bu fc

%%BeginFont: Symbol
%%IncludeFont: Symbol
bn
%%EndFont
bu fc
{}mark F /Symbol /|______Symbol 0 rf
bn
bu fc
2 F /|______Symbol fnt
bn
(l)show
244 255 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.29266 0. 32 0.02926 0.(-calculus with subtyping. This paper describes an)awidthshow
258 96 gm
0.74081 0. 32 0.07408 0.(implementation of )awidthshow
258 175 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.21937 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.73120 0. 32 0.07312 0.( \(extended with recursive types\), and documents the algorithms)awidthshow
272 96 gm
0.33523 0. 32 0.03352 0.(used. Using this implementation, one can test )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.17089 0.(F<:)ashow
272 301 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.35552 0. 32 0.03555 0.( programs and examine typing deriva-)awidthshow
286 96 gm
(tions.)show
300 114 gm
0.17974 0. 32 0.01797 0.(To facilitate the writing of complex )awidthshow
300 261 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.04888 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.15472 0. 32 0.01547 0.( encodings, we provide a flexible syntax-ex)awidthshow
300 453 gm
(-)show
314 96 gm
0.11291 0. 32 0.01129 0.(tension mechanism. New syntax can be defined from scratch, and the existing syn)awidthshow
314 426 gm
0.11642 0. 32 0.01164 0.(tax can)awidthshow
328 96 gm
0.20080 0. 32 0.02008 0.(be extended on the fly. It is possible to introduce new binding constructs, while avoiding)awidthshow
342 96 gm
(problems with variable capture.)show
356 114 gm
0.09597 0. 32 0.00959 0.(To reduce the syntactic clutter, we provide a practical type inference mechanism that)awidthshow
370 96 gm
0.07171 0. 32 0.00717 0.(is applicable to any explicitly typed polymorphic language. Syntax extension and type in)awidthshow
370 453 gm
(-)show
384 96 gm
(ference interact in useful ways.)show
604 60 gm
9 fz
bu fc
2 F /|______Times-Roman fnt
bn
(SRC Research Report 97, February 23, 1993.)show
614 60 gm
currentfont SwToSym
(\323)show
setfont
( Digital Equipment Corporation 1993.)show
623 60 gm
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(This work may not be copied or reproduced in whole or in part for any commercial purpose. Permission to copy in whole or in part)show
632 60 gm
(without payment of fee is granted for nonprofit educational and research purposes provided that all such whole or partial copies in)show
632 478 gm
(-)show
641 60 gm
(clude the following: a notice that such copying is by permission of the Systems Research Center of Digital Equipment Corporation in)show
650 60 gm
(Palo Alto, California; an acknowledgment of the authors and individuals contributors to the work; and all applicable portions of the)show
659 60 gm
(copyright notice. Copying, reproducing, or republishing for any other purpose shall require a license with payment of fee to the)show
668 60 gm
(Systems Research Center. All rights reserved.)show
F T cp
%%Page: ? 2
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(2)show
120 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Contents)show
154 90 gm
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(1. Introduction)show
154 169 gm
(...............................................................................................................)show
154 167 gm
( )show
154 504 gm
(3)show
170 90 gm
(2. Overview)show
170 154 gm
(....................................................................................................................)show
170 151 gm
( )show
170 504 gm
(3)show
186 90 gm
(3. Syntax extension)show
186 190 gm
(........................................................................................................)show
186 188 gm
( )show
186 504 gm
(6)show
202 126 gm
(3.1 Grammars)show
202 202 gm
(....................................................................................................)show
202 201 gm
( )show
202 504 gm
(6)show
218 126 gm
(3.2. Syntax)show
218 184 gm
(..........................................................................................................)show
218 182 gm
( )show
218 504 gm
(8)show
234 126 gm
(3.3. Actions)show
234 187 gm
(.........................................................................................................)show
234 186 gm
( )show
234 504 gm
(10)show
250 126 gm
(3.4. How it is done)show
250 223 gm
(.............................................................................................)show
250 220 gm
( )show
250 504 gm
(11)show
266 126 gm
(3.5. Related work on syntax extension)show
266 322 gm
(............................................................)show
266 319 gm
( )show
266 504 gm
(13)show
282 90 gm
(4. Mock-modules and save-points)show
282 262 gm
(................................................................................)show
282 261 gm
( )show
282 504 gm
(14)show
298 90 gm
(5. Top-level phrases)show
298 193 gm
(.......................................................................................................)show
298 192 gm
( )show
298 504 gm
(15)show
314 90 gm
(6. Type inference by \322argument synthesis\323)show
314 310 gm
(................................................................)show
314 308 gm
( )show
314 504 gm
(17)show
330 90 gm
(7. Recursion)show
330 157 gm
(...................................................................................................................)show
330 154 gm
( )show
330 504 gm
(19)show
346 90 gm
(Appendices)show
346 151 gm
(.....................................................................................................................)show
346 149 gm
( )show
346 504 gm
(21)show
362 126 gm
(Appendix A. Examples)show
362 247 gm
(.....................................................................................)show
362 244 gm
( )show
362 504 gm
(21)show
378 126 gm
(Appendix B. Lexicon)show
378 235 gm
(.........................................................................................)show
378 234 gm
( )show
378 504 gm
(28)show
394 126 gm
(Appendix C. Syntax)show
394 232 gm
(..........................................................................................)show
394 229 gm
( )show
394 504 gm
(29)show
410 126 gm
(Appendix D. Typing rules)show
410 262 gm
(................................................................................)show
410 259 gm
( )show
410 504 gm
(32)show
426 126 gm
(Appendix E. Typing algorithm)show
426 286 gm
(........................................................................)show
426 283 gm
( )show
426 504 gm
(34)show
442 126 gm
(Appendix F. Typing algorithm with argument synthesis)show
442 412 gm
(..............................)show
442 410 gm
( )show
442 504 gm
(38)show
458 126 gm
(Appendix G. Recursion)show
458 247 gm
(.....................................................................................)show
458 246 gm
( )show
458 504 gm
(44)show
474 90 gm
(Acknowledgments)show
474 187 gm
(.........................................................................................................)show
474 184 gm
( )show
474 504 gm
(50)show
490 90 gm
(References)show
490 148 gm
(......................................................................................................................)show
490 146 gm
( )show
490 504 gm
(51)show
F T cp
%%Page: ? 3
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 500 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 518 gm
(3)show
120 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(1. Introduction)show
141 108 gm
2 fs
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.40129 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.61981 0. 32 0.06198 0.( is a typed )awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
141 178 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.73776 0. 32 0.07377 0.(-calculus with subtyping. It is intended to capture the essence of subtyping and, to)awidthshow
155 90 gm
0.03311 0. 32 0.00331 0.(some extent, of object-oriented programming )awidthshow
9 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.03097 0. 32 0.00309 0.([Cardelli, )awidthshow
155 311 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(et al.)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.03982 0. 32 0.00398 0.( 1991; Curien, Ghelli 1991])awidthshow
155 429 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.02380 0. 32 0.00238 0.(. The )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(F<:)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04470 0. 32 0.00447 0.( calculus was)awidthshow
169 90 gm
(designed to be as small as possible, so that it could be studied formally. Its small size also happens to facili)show
169 518 gm
(-)show
183 90 gm
1.12136 0. 32 0.11213 0.(tate implementation; during its construction it was possible to explore some advanced techniques that)awidthshow
197 90 gm
(should be useful for larger languages.)show
211 108 gm
0.05249 0. 32 0.00524 0.(This paper describes the F-sub program, which is an implementation of )awidthshow
211 397 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01852 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04898 0. 32 0.00489 0.( . \(We assume a superficial)awidthshow
225 90 gm
-0.00271 0.(familiarity with the latter.\) Using this program, one can typecheck and evaluate )ashow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(F<:)show
225 426 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
-0.00245 0.( expressions and defini-)ashow
239 90 gm
-0.00219 0.(tions, and examine typing and subtyping derivations. In order to keep the critical typing code clean and cor)ashow
239 518 gm
(-)show
253 90 gm
0.53939 0. 32 0.05393 0.(rect, the implementation is very minimal and supports only the basic constructs of )awidthshow
253 432 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.10807 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.38803 0. 32 0.03880 0.(. This minimality,)awidthshow
267 90 gm
0.10101 0. 32 0.01010 0.(while having some pragmatic disadvantages, allows us to describe the fundamental algorithms in full detail)awidthshow
281 90 gm
(in terms of an operational semantics that is faithful to the actual program code.)show
295 108 gm
0.62942 0. 32 0.06294 0.(The operational semantics is described in the Appendix in layers of increasing complexity, the final)awidthshow
309 90 gm
0.40359 0. 32 0.04035 0.(layer corresponding closely to actual program code. The first layer corresponds to the typechecking algo)awidthshow
309 518 gm
(-)show
323 90 gm
0.22293 0. 32 0.02229 0.(rithm for pure )awidthshow
323 150 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.07284 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.19531 0. 32 0.01953 0.(. Then, other features are added: \(a\) de Bruijn indices, \(b\) partial type inference for sec)awidthshow
323 518 gm
(-)show
337 90 gm
0.72250 0. 32 0.07225 0.(ond-order types, and \(c\) a new technique for integrating recursive types with second-order polymorphic)awidthshow
351 90 gm
(types.)show
365 108 gm
0.22048 0. 32 0.02204 0.(Apart from the typing algorithms, another aspect of the implementations should be of general interest.)awidthshow
379 90 gm
0.25894 0. 32 0.02589 0.(The extensible syntax mechanism we have implemented should be useful in other mechanized formal sys)awidthshow
379 518 gm
(-)show
393 90 gm
0.68939 0. 32 0.06893 0.(tems that need to define mathematical notation on the fly, such as theorem provers, proof checkers, and)awidthshow
407 90 gm
0.48629 0. 32 0.04862 0.(symbolic algebra systems. In these systems, one wishes to minimize the number of constructs in order to)awidthshow
421 90 gm
0.39138 0. 32 0.03913 0.(keep the difficult core algorithms clean and manageable. In the case of F-sub, we wish to keep the typing)awidthshow
435 90 gm
0.19531 0. 32 0.01953 0.(code simple by not providing basic data structures and control structures, requiring instead that they be en)awidthshow
435 519 gm
(-)show
449 90 gm
0.58563 0. 32 0.05856 0.(coded as )awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
449 135 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.61874 0. 32 0.06187 0.(-terms. The drawback of this approach is that after a few levels of encoding even simple pro-)awidthshow
463 90 gm
0.10421 0. 32 0.01042 0.(grams be)awidthshow
463 127 gm
0.10559 0. 32 0.01055 0.(come quite unreadable. To improve readability of the encodings, the F-sub system supports a very)awidthshow
477 90 gm
0.25497 0. 32 0.02549 0.(flexible syntax-extension mechanism based on an LL\(1\) parser. One can define entirely new grammars, or)awidthshow
491 90 gm
-0.00245 0.(enrich the existing F-sub grammar. In particular, one can define new binding constructs and their associated)ashow
505 90 gm
(meaning, while avoiding problems with variable capture.)show
519 108 gm
0.30197 0. 32 0.03019 0.(The F-sub system consists of about 10,000 lines of Modula-3 code [Nelson 1991])awidthshow
519 440 gm
0.24795 0. 32 0.02479 0.(, equally partitioned)awidthshow
533 90 gm
0.82870 0. 32 0.08287 0.(between a reusable parsing package and F-sub proper. The implementation is portable to any computer)awidthshow
547 90 gm
0.59982 0. 32 0.05998 0.(running Modula-3, that is to almost any computer running a standard C compiler )awidthshow
547 428 gm
0.47958 0. 32 0.04795 0.([Kalsow, Muller FTP].)awidthshow
561 90 gm
(Program sources and binaries for standard architectures are freely available )show
561 394 gm
([Cardelli FTP])show
561 453 gm
(.)show
593 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(2. Overview)show
614 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.16830 0. 32 0.01683 0.(The syntax of F-sub types and terms is given below, informally. As a general convention, term-related)awidthshow
628 90 gm
(names begin with a lower-case letter, while type-related names begin with an upper-case letter.)show
647 126 gm
2 fs
bu fc

%%BeginFont: Courier-Oblique
%%IncludeFont: Courier-Oblique
bn
%%EndFont
bu fc
{}mark T /Courier-Oblique /|______Courier-Oblique 0 rf
bn
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc

%%BeginFont: Courier
%%IncludeFont: Courier
bn
%%EndFont
bu fc
{}mark T /Courier /|______Courier 0 rf
bn
bu fc
2 F /|______Courier fnt
bn
(,)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( ::=)show
647 234 gm
bu fc
2 F /|______Times-Roman fnt
bn
(types)show
661 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
661 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(type variables)show
675 144 gm
bu fc
2 F /|______Courier fnt
bn
(Top)show
675 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(the biggest type)show
689 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(->)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
689 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(function spaces)show
F T cp
%%Page: ? 4
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(4)show
102 144 gm
10 fz
bu fc
2 F /|______Courier fnt
bn
(All\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
102 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(bounded quantification)show
116 144 gm
bu fc
2 F /|______Courier fnt
bn
({)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(})show
116 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(grouping)show
135 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( ::=)show
135 234 gm
bu fc
2 F /|______Times-Roman fnt
bn
(terms)show
149 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
149 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(term variables)show
163 144 gm
bu fc
2 F /|______Courier fnt
bn
(top)show
163 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(the canonical member of)show
bu fc
2 F /|______Courier fnt
bn
( Top)show
177 144 gm
(fun\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
177 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(functions)show
191 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
191 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(applications)show
205 144 gm
bu fc
2 F /|______Courier fnt
bn
(fun\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
205 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(polymorphic functions)show
219 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
219 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(type applications)show
233 144 gm
bu fc
2 F /|______Courier fnt
bn
({)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(})show
233 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(grouping)show
252 108 gm
0.60302 0. 32 0.06030 0.(When loaded, the F-sub system displays its \324)awidthshow
252 294 gm
bu fc
2 F /|______Courier fnt
bn
0.88745 0. 32 0.08874 0.(- )awidthshow
252 307 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.58944 0. 32 0.05894 0.(\325 prompt, at which one can write a term like \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.28474 0.(top)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.27664 0.(\325,)ashow
266 90 gm
0.39581 0. 32 0.03958 0.(followed by a semicolon. The system answers by inferring the type of the term and evaluating it. The an)awidthshow
266 518 gm
(-)show
280 90 gm
(swers given by the system are indicated by \324)show
8 fs
bu fc

%%BeginFont: ZapfDingbats
%%IncludeFont: ZapfDingbats
bn
%%EndFont
bu fc
{}mark 128 /a89
129 /a90
130 /a93
131 /a94
132 /a91
133 /a92
134 /a205
135 /a85
136 /a206
137 /a86
138 /a87
139 /a88
140 /a95
141 /a96
F /ZapfDingbats /|______ZapfDingbats 0 rf
bn
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
280 274 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
299 126 gm
bu fc
2 F /|______Courier fnt
bn
(- top;)show
313 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
313 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
332 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.62866 0. 32 0.06286 0.(In general, at the \324)awidthshow
332 185 gm
bu fc
2 F /|______Courier fnt
bn
0.84533 0. 32 0.08453 0.(- )awidthshow
332 198 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.45700 0. 32 0.04570 0.(\325 prompt one can write a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.17532 0.(phrase)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.62408 0. 32 0.06240 0.(, always terminated by a semicolon. There are)awidthshow
346 90 gm
0.20446 0. 32 0.02044 0.(several kinds of phrases. The one above is a )awidthshow
346 271 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.34591 0. 32 0.03459 0.(term phrase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.17959 0. 32 0.01795 0.(, while the one shown below is a )awidthshow
346 455 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.20324 0. 32 0.02032 0.(type phrase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.12100 0. 32 0.01210 0.(; this)awidthshow
360 90 gm
(is always preceded by a colon and causes the evaluation of a type:)show
379 126 gm
bu fc
2 F /|______Courier fnt
bn
(- :Top;)show
393 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
393 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(: Top)show
412 108 gm
bu fc
2 F /|______Times-Italic fnt
bn
0.19714 0. 32 0.01971 0.(Type definition phrases)awidthshow
412 203 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.27297 0. 32 0.02729 0.(, introduced by \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.11642 0.(Let)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.17669 0. 32 0.01766 0.(\325 and )awidthshow
412 312 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.28106 0. 32 0.02810 0.(term definition phrases)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.18722 0. 32 0.01872 0.(, introduced by \324)awidthshow
412 473 gm
bu fc
2 F /|______Courier fnt
bn
0.05171 0.(let)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.15487 0. 32 0.01548 0.(\325, allow)awidthshow
426 90 gm
(one to bind types and terms to variables:)show
445 126 gm
bu fc
2 F /|______Courier fnt
bn
(- Let Id = All\(X\) X->X)show
459 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
459 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(Let Id <: Top = <Id>)show
478 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(- :Id;)show
492 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
492 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(: <Id>)show
511 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(- let id : Id = fun\(X\) fun\(x:X\) x;)show
525 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
525 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(let id : <Id> = <id>)show
544 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(- id;)show
558 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
558 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(<id> : <Id>)show
577 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.54000 0. 32 0.05400 0.(The system produces some answers in angle brackets, as an abbreviation, to avoid printing excessive de)awidthshow
577 519 gm
(-)show
591 90 gm
0.22125 0. 32 0.02212 0.(tails. If a term or a type has been given a name in a definition, then that term or type is printed as its given)awidthshow
605 90 gm
(name in angle brackets. This printing heuristic has no effect on typing or evaluation.)show
619 108 gm
0.47805 0. 32 0.04780 0.(Once a function like \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.20393 0.(id)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.45043 0. 32 0.04504 0.(\325 is defined, it can be applied to types and terms. A type application has the)awidthshow
633 90 gm
(form \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 \(note the \324)show
633 192 gm
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325\); a term application has the form \324)show
633 341 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
652 126 gm
bu fc
2 F /|______Courier fnt
bn
(- id\(:Id\);)show
666 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
666 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
({fun\(x:<Id>\)x} : {<Id>-><Id>})show
685 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(- id\(:Id\)\(id\);)show
699 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
699 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(<id> : <Id>)show
F T cp
%%Page: ? 5
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 500 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 518 gm
(5)show
107 126 gm
10 fz
bu fc
2 F /|______Courier fnt
bn
(- id\(:Id->Id\);)show
121 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
121 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
({fun\(x:<Id>-><Id>\)x} : {{<Id>-><Id>}->{<Id>-><Id>}})show
140 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(The evaluator does not perform reductions inside functions:)show
159 126 gm
bu fc
2 F /|______Courier fnt
bn
(- fun\(x:Id\) id\(:Id\)\(x\);)show
173 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
173 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
({fun\(x:<Id>\)<id>\(:<Id>\)\(x\)} : {<Id>-><Id>})show
192 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.53787 0. 32 0.05378 0.(As you may notice from the printed output, curly brackets, instead of parentheses, are used to group)awidthshow
206 90 gm
(syntax:)show
225 126 gm
bu fc
2 F /|______Courier fnt
bn
(- {fun\(x:Top\)x}\(top\);)show
239 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
239 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
258 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Programs can be stored in files. For example we can prepare a file called \324)show
258 405 gm
bu fc
2 F /|______Courier fnt
bn
(Test.fsub)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 containing the)show
272 90 gm
(Church encoding of booleans:)show
291 126 gm
bu fc
2 F /|______Courier fnt
bn
(Let Bool = All\(X\) X->X->X;)show
310 126 gm
(let true: Bool = fun\(X\) fun\(x:X\) fun\(y:X\) x)show
324 126 gm
(    false: Bool = fun\(X\) fun\(x:X\) fun\(y:X\) y;)show
343 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(We can then load this file into the system by a )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(load phrase)show
343 343 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(:)show
362 126 gm
bu fc
2 F /|______Courier fnt
bn
(- load Test;)show
381 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.06240 0. 32 0.00624 0.(According to the encoding of booleans above, a conditional of the form \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.08346 0. 32 0.00834 0.(if x then false else)awidthshow
395 90 gm
(true end)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 is written as:)show
414 126 gm
bu fc
2 F /|______Courier fnt
bn
(x\(:Bool\)\(false\)\(true\))show
433 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.28182 0. 32 0.02818 0.(It is possible, however, to define a more familiar syntax for conditionals by a )awidthshow
433 425 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.36071 0. 32 0.03607 0.(syntax extension)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.14221 0. 32 0.01422 0.(, as fol)awidthshow
433 519 gm
(-)show
447 90 gm
(lows.)show
461 108 gm
(A )show
461 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(syntax phrase)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( introduces a new grammar or, in this example, modifies the existing one:)show
480 126 gm
bu fc
2 F /|______Courier fnt
bn
(- syntax)show
494 144 gm
(  termBase ::= ...)show
508 162 gm
(  [ "if" term_1 "then" term_2 "else" term_3)show
522 162 gm
(    "giving" type_4 "end" ])show
536 162 gm
(  =>  _1\(:_4\)\(_2\)\(_3\);)show
555 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.21957 0. 32 0.02195 0.(To understand this example, one must first know that \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.08668 0.(termBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.12023 0. 32 0.01202 0.(\325, \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.08668 0.(term)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.15304 0. 32 0.01530 0.(\325, and \324)awidthshow
555 444 gm
bu fc
2 F /|______Courier fnt
bn
0.09400 0.(type)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.19577 0. 32 0.01957 0.(\325 are some of)awidthshow
569 90 gm
0.24169 0. 32 0.02416 0.(the syntactic categories of F-sub given in Appendix C \(a \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.09893 0.(termBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.11260 0. 32 0.01126 0.(\325 is a \324)awidthshow
569 400 gm
bu fc
2 F /|______Courier fnt
bn
0.07926 0.(term)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.19256 0. 32 0.01925 0.(\325 except for the right-re)awidthshow
569 519 gm
(-)show
583 90 gm
0.39505 0. 32 0.03950 0.(cursive syntax of applications\). Here we wish to modify the syntax of \324)awidthshow
583 382 gm
bu fc
2 F /|______Courier fnt
bn
0.10974 0.(termBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.25970 0. 32 0.02597 0.(\325 by taking its existing)awidthshow
597 90 gm
0.02212 0. 32 0.00221 0.(definition \(indicated by \324)awidthshow
597 190 gm
bu fc
2 F /|______Courier fnt
bn
(...)show
bu fc
2 F /|______Times-Roman fnt
bn
0.02304 0. 32 0.00230 0.(\325\) and adding conditional expressions. By this mechanism we truly modify the)awidthshow
611 90 gm
(recursive definition of terms; meaning that conditional expressions can be nested.)show
625 108 gm
0.22003 0. 32 0.02200 0.(The grammar of conditionals is given above as a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.08074 0.(sequence)ashow
625 345 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.25466 0. 32 0.02546 0.( \(in square brackets\) of keywords and num)awidthshow
625 519 gm
(-)show
639 90 gm
0.43655 0. 32 0.04365 0.(bered \324)awidthshow
639 119 gm
bu fc
2 F /|______Courier fnt
bn
0.17463 0.(term)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.28137 0. 32 0.02813 0.(\325 and \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.17463 0.(type)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.40695 0. 32 0.04069 0.(\325 grammars. The numbers are used in the )awidthshow
639 366 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(action)show
639 391 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.43655 0. 32 0.04365 0.( part of the grammar \(following)awidthshow
653 90 gm
0.05296 0.(\324)ashow
bu fc
2 F /|______Courier fnt
bn
0.09547 0.(=>)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.24734 0. 32 0.02473 0.(\325\), where the relevant pieces of the input are reassembled into the encoding of conditionals shown ear)awidthshow
653 518 gm
(-)show
667 90 gm
(lier.)show
681 108 gm
(With the extended grammar we can write, for example:)show
F T cp
%%Page: ? 6
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(6)show
102 126 gm
10 fz
bu fc
2 F /|______Courier fnt
bn
(- let not =)show
116 126 gm
(    fun\(x:Bool\))show
130 126 gm
(      if x then false else true giving Bool end;)show
144 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
144 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(let not : {<Bool>-><Bool>} = <not>)show
163 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.73089 0. 32 0.07308 0.(As another example of syntax extensions, we can define )awidthshow
163 346 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.64971 0. 32 0.06497 0.(let terms)awidthshow
163 382 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.70449 0. 32 0.07044 0.( \(as opposed to the top-level-only)awidthshow
177 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(let)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 definitions\), translating them into functions and applications:)show
196 126 gm
bu fc
2 F /|______Courier fnt
bn
(- syntax)show
210 126 gm
(    termBase ::= ...)show
224 126 gm
(      [ "let" termIde_1 ":" type_2 "=" term_3)show
238 126 gm
(        "in" term_4 "end" ])show
252 126 gm
(      =>  {fun\(_1:_2\)_4}\(_3\);)show
271 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.16571 0. 32 0.01657 0.(In this example we are creating a new )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.06472 0.(binding)ashow
271 295 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.19683 0. 32 0.01968 0.( construct. This is reflected by the use of \324)awidthshow
271 466 gm
bu fc
2 F /|______Courier fnt
bn
0.03266 0.(fun\(_1:)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.05706 0. 32 0.00570 0.(\325 in)awidthshow
285 90 gm
0.50750 0. 32 0.05075 0.(the action part. Here \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.21931 0.(_1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.34942 0. 32 0.03494 0.(\325 refers to a \324)awidthshow
285 247 gm
bu fc
2 F /|______Courier fnt
bn
0.15469 0.(termIde)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.37353 0. 32 0.03735 0.(\325, which is the F-sub grammar for a term identifier. Note)awidthshow
299 90 gm
0.14160 0. 32 0.01416 0.(that \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.06526 0.(_4)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.12222 0. 32 0.01222 0.(\325 is inside the scope of \324)awidthshow
299 220 gm
bu fc
2 F /|______Courier fnt
bn
0.03186 0.(_1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.10208 0. 32 0.01020 0.(\325, producing the expected variable capture. \(Unwanted variable captures)awidthshow
313 90 gm
0.39276 0. 32 0.03927 0.(are carefully avoided.\) To try this out, we need to wrap the let-expressions in brackets to avoid confusion)awidthshow
327 90 gm
(with let-phrases:)show
346 126 gm
bu fc
2 F /|______Courier fnt
bn
(- {let x: Bool = true in not\(x\) end};)show
360 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
360 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(<false> : <Bool>)show
379 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.40908 0. 32 0.04090 0.(In general, a )awidthshow
379 162 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.48248 0. 32 0.04824 0.(term action)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.30273 0. 32 0.03027 0.( \(preceded by \324)awidthshow
379 270 gm
bu fc
2 F /|______Courier fnt
bn
0.14398 0.(=>)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.35247 0. 32 0.03524 0.(\325\) can be any F-sub term, possibly containing )awidthshow
379 471 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.26641 0. 32 0.02664 0.(pattern vari-)awidthshow
393 90 gm
0.06106 0.(ables)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07019 0. 32 0.00701 0.( \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.08677 0.(_)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.08677 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.18081 0. 32 0.01808 0.(\325. Similarly, a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.06506 0.(type-action)ashow
393 233 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.34805 0. 32 0.03480 0.( \(preceded by \324)awidthshow
393 295 gm
bu fc
2 F /|______Courier fnt
bn
0.11038 0.(:>)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.29312 0. 32 0.02931 0.(\325\) can be any F-sub type, possibly containing pattern)awidthshow
407 90 gm
0.18325 0. 32 0.01832 0.(variables. An action can be appended to any piece of grammar. The pattern variables \324)awidthshow
407 439 gm
bu fc
2 F /|______Courier fnt
bn
0.06480 0.(_)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.06480 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.16021 0. 32 0.01602 0.(\325 can similarly be)awidthshow
421 90 gm
0.07431 0. 32 0.00743 0.(appended to any piece of grammar, using parentheses \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(\325,\324)show
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
0.07156 0. 32 0.00715 0.(\325 for grouping if necessary. After the definition)awidthshow
435 90 gm
(of a syntax extension for terms or types, the new syntax can be used in the action parts of later grammars.)show
449 108 gm
0.55725 0. 32 0.05572 0.(As an exercise, one could now try to define the syntax of existential types \324)awidthshow
449 421 gm
bu fc
2 F /|______Courier fnt
bn
0.05262 0.(Some\(X<:A\)B)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.16510 0. 32 0.01651 0.(\325, giving)awidthshow
463 90 gm
1.28219 0. 32 0.12821 0.(the translation into universal types \324)awidthshow
463 245 gm
bu fc
2 F /|______Courier fnt
bn
0.25271 0.(All\(Y\){All\(X<:A\)B->Y}->Y)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.65689 0. 32 0.06568 0.(\325. For more complex tasks one)awidthshow
477 90 gm
0.54244 0. 32 0.05424 0.(should first read section 3.3 on Actions. \(Exercise hints. One has to modify \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.22077 0.(typeBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.50399 0. 32 0.05039 0.(\325, and capture a)awidthshow
491 90 gm
0.07098 0.(\324)ashow
bu fc
2 F /|______Courier fnt
bn
0.12796 0.(typeIde)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.23254 0. 32 0.02325 0.(\325 and two \324)awidthshow
491 181 gm
bu fc
2 F /|______Courier fnt
bn
0.16174 0.(type)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.35797 0. 32 0.03579 0.(\325s. The symbol for type actions is \324)awidthshow
491 349 gm
bu fc
2 F /|______Courier fnt
bn
0.18305 0.(:>)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.29357 0. 32 0.02935 0.(\325, not \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18305 0.(=>)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.39566 0. 32 0.03956 0.(\325. To see what the parser pro)awidthshow
491 519 gm
(-)show
505 90 gm
(duces, write \324)show
bu fc
2 F /|______Courier fnt
bn
(do ShowParsing On)show
bu fc
2 F /|______Times-Roman fnt
bn
(;\325.\))show
537 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(3. Syntax extension)show
558 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.23452 0. 32 0.02345 0.(In this section we describe a notation for grammars and its use in defining syntax extensions. This no)awidthshow
558 519 gm
(-)show
572 90 gm
(tation is used also in Appendix C to describe the formal syntax of F-sub.)show
601 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(3.1 Grammars)show
622 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.44509 0. 32 0.04450 0.(Our meta-notation for grammars is slightly non-standard. Moreover, its meaning is tightly associated)awidthshow
636 90 gm
0.53024 0. 32 0.05302 0.(with a particular parser \(recursive descent\). The reason for these peculiarities is that the same notation is)awidthshow
650 90 gm
(used also for the syntax-extension facility within the language.)show
664 108 gm
0.37811 0. 32 0.03781 0.(Terminal symbols are called )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11318 0.(tokens)ashow
664 253 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.44082 0. 32 0.04408 0.(; the most important kinds of tokens are identifiers \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18305 0.(ob1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.55831 0. 32 0.05583 0.(\325, delim)awidthshow
664 518 gm
(-)show
678 90 gm
0.26321 0. 32 0.02632 0.(iters \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.11651 0.(\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.27404 0. 32 0.02740 0.(\325, and quoted strings \324)awidthshow
678 209 gm
bu fc
2 F /|______Courier fnt
bn
0.09364 0.("abc")ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.24444 0. 32 0.02444 0.(\325. The identifiers can be either alphanumeric \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.09364 0.(ob1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.20980 0. 32 0.02098 0.(\325 or symbolic \324)awidthshow
678 504 gm
bu fc
2 F /|______Courier fnt
bn
(->)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
F T cp
%%Page: ? 7
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 500 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 518 gm
(7)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.99105 0. 32 0.09910 0.(Moreover, identifiers are split into keyword and non-keyword classes; keywords are not legal variable)awidthshow
116 90 gm
(names in binding constructs. See Appendix B for the full lexical details.)show
130 108 gm
(A )show
130 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(grammar description)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
130 205 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(g)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( is one of the following constructions:)show
149 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
149 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02395 0. 32 0.00239 0.(An identifier )awidthshow
149 234 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02426 0. 32 0.00242 0.( represents a non-terminal grammar symbol, which must be bound to a)awidthshow
163 180 gm
(grammar description. Parsing )show
163 301 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( is the same as parsing the associated description.)show
182 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(ide)show
182 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07827 0. 32 0.00782 0.(The constant )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01951 0.(ide)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.08407 0. 32 0.00840 0.( denotes a non-keyword identifier token. Parsing this succeeds when)awidthshow
196 180 gm
(the next input token is a non-keyword identifier.)show
215 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(")show
0 fs
bu fc
2 F /|______Courier fnt
bn
(fun)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(")show
215 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.39901 0. 32 0.03990 0.(A non-empty quoted string denotes the keyword or delimiter token given in quotes.)awidthshow
229 180 gm
(Parsing this succeeds when the next input token is the given keyword or delimiter.)show
248 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(string)show
248 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.84838 0. 32 0.08483 0.(The constant )awidthshow
248 237 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.17424 0.(string)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.73989 0. 32 0.07398 0.( denotes a quoted-string token. Parsing this succeeds when the)awidthshow
262 180 gm
(next input token is a quoted string.)show
281 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
([g)show
284 135 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
281 139 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
1.37268 0. 32 0.13726 0.( ... g)awidthshow
284 160 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
281 164 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(])show
281 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.77713 0. 32 0.07771 0.(Square brackets denote a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.25880 0.(sequence)ashow
281 326 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
1.04431 0. 32 0.10443 0.( of grammars. Parsing this succeeds if parsing)awidthshow
295 180 gm
(each )show
295 201 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
295 208 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
( in sequence succeeds. Parsing )show
295 333 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
([])show
295 341 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( always succeeds.)show
314 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
({g)show
317 135 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
314 139 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.40893 0. 32 0.04089 0.( ... g)awidthshow
317 158 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
314 162 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(})show
314 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.30120 0. 32 0.03012 0.(Curly brackets denote a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.08627 0.(choice)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.29556 0. 32 0.02955 0.( of grammars. Parsing this succeeds if parsing one of)awidthshow
328 180 gm
0.11459 0. 32 0.01145 0.(the )awidthshow
328 195 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
328 202 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.09078 0. 32 0.00907 0.('s succeeds when trying them left to right. Parsing )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.05113 0.({})ashow
328 413 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.10147 0. 32 0.01014 0.( always fails. \(If one of the)awidthshow
342 180 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
342 187 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.70632 0. 32 0.07063 0.('s fails )awidthshow
342 217 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(after)show
342 236 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.60104 0. 32 0.06010 0.( successfully parsing an input token, then the entire parsing fails, but)awidthshow
356 180 gm
(this can happen only if the grammar is not LL\(1\).\))show
375 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(\(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
375 138 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.39428 0. 32 0.03942 0.( * g)awidthshow
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
375 158 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(\))show
375 180 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.42526 0. 32 0.04252 0.(This )awidthshow
375 201 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.08262 0.(iteration)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.31402 0. 32 0.03140 0.( construct is equivalent to the grammar )awidthshow
375 398 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
([g)show
378 407 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
375 411 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.36956 0. 32 0.03695 0.( x])awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.50216 0. 32 0.05021 0.( where )awidthshow
375 453 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.42526 0. 32 0.04252 0.(x ::= {[g)awidthshow
378 490 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
375 494 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(\312x]\312[]})show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
389 180 gm
0.41656 0. 32 0.04165 0.(However, the parsing of )awidthshow
389 282 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(\(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
389 294 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.43426 0. 32 0.04342 0.( * g)awidthshow
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
389 314 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.06570 0.(\))ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.35186 0. 32 0.03518 0.( can build left-associative parse-trees \(in conjunc)awidthshow
389 517 gm
(-)show
403 180 gm
0.79162 0. 32 0.07916 0.(tion with )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.29823 0.(actions)ashow
403 251 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
1.16455 0. 32 0.11645 0.(\), which are not otherwise representable by a non-left-recursive)awidthshow
417 180 gm
(grammar.)show
436 108 gm
(A complete )show
436 157 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(grammar)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
455 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
455 134 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( ::= g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
455 161 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(  ...  x)show
458 183 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
455 187 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( ::= g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
474 90 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.17181 0. 32 0.01718 0.(where )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.05104 0.(n)ashow
bu fc
2 T /|______Symbol fnt
bn
(\263)show
474 128 gm
bu fc
2 F /|______Times-Italic fnt
bn
0.13099 0.(1)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.19866 0. 32 0.01986 0.(, the )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
477 158 gm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
474 160 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.24871 0. 32 0.02487 0.( are distinct, and any )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
474 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.25131 0. 32 0.02513 0.( occurring in one of the )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11116 0.(g)ashow
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
474 357 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.26229 0. 32 0.02622 0.( is one of the )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.13972 0.(x)ashow
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
474 419 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.22033 0. 32 0.02203 0.(. Moreover, the grammar)awidthshow
488 90 gm
0.19378 0. 32 0.01937 0.(must be non-left-recursive and LL\(1\) \(where 1 refers to one token, not one character\). The grammar so de)awidthshow
488 519 gm
(-)show
502 90 gm
(fined is the one defined by )show
502 199 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(x)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
502 207 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
516 108 gm
(As an example, here is a non-ambiguous grammar for untyped )show
bu fc
2 F /|______Symbol fnt
bn
(l)show
516 366 gm
bu fc
2 F /|______Times-Roman fnt
bn
(-terms:)show
535 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(lambda  ::= { ide func appl })show
549 126 gm
(func ::= [ "[" ide "." lambda  "]" ])show
563 126 gm
(appl ::= [ "\(" lambda  lambda  "\)" ])show
582 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
-0.00126 0.(Suppose now we wish to change the syntax of application from \324\(a b\)\325 to \324a\(b\)\325. The grammar becomes left)ashow
582 519 gm
(-)show
596 90 gm
0.02075 0. 32 0.00207 0.(recursive, but this problem can be eliminated by distinguishing between simple terms and complex terms as)awidthshow
610 90 gm
(shown below. The resulting grammar is LL\(1\), and the recursive-descent parser resolves any ambiguity:)show
629 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(lambda  ::= [ simple arg ])show
643 126 gm
(arg ::= { [ par arg ] [] })show
657 126 gm
(simple ::= { ide func par})show
671 126 gm
(func ::= [ "fun" ide "." lambda  ])show
685 126 gm
(par ::= [ \322\(" lambda  "\)" ])show
F T cp
%%Page: ? 8
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(8)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.09521 0. 32 0.00952 0.(The grammar above parses )awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
102 207 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.09140 0. 32 0.00914 0.(-terms, but because of the way left-recursion was eliminated, application asso-)awidthshow
116 90 gm
0.26748 0. 32 0.02674 0.(ciates to the right \(that is, a\(b\)\(c\) parse as <a<\(b\)\(c\)>> instead of <<a\(b\)>\(c\)>\), which complicates further)awidthshow
130 90 gm
0.40100 0. 32 0.04010 0.(processing. This problem can be solved by the iteration operator \324*\325, which intentionally associates to the)awidthshow
144 90 gm
(left. The grammar of )show
144 176 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
bu fc
2 F /|______Times-Roman fnt
bn
(-terms should then be expressed as follows:)show
163 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(lambda ::= \( simple * par \))show
177 126 gm
(simple ::= { ide func par})show
191 126 gm
(func ::= [ "fun" ide "." lambda ])show
205 126 gm
(par ::= [ \322\(" lambda "\)" ])show
224 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.92361 0. 32 0.09236 0.(Implementation-specific warning: when used in the syntax-extension facility, non-LL\(1\) grammars)awidthshow
238 90 gm
0.99014 0. 32 0.09901 0.(will typically cause parsing failures, and left-recursive grammars will cause non-termination. This is a)awidthshow
252 90 gm
(property only of the current implementation; grammars could be analyzed to detect these situations.)show
281 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(3.2. Syntax)show
302 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.67184 0. 32 0.06718 0.(A syntax extension can be used to define a completely new grammar, or to modify an existing one.)awidthshow
316 90 gm
0.72830 0. 32 0.07283 0.(There are two forms; a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
1.31744 0. 32 0.13174 0.(syntax term)awidthshow
316 238 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.89843 0. 32 0.08984 0.(, and a \(top-level\) )awidthshow
316 317 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
1.14013 0. 32 0.11401 0.(syntax phrase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.72326 0. 32 0.07232 0.(. We have seen examples of syntax)awidthshow
330 90 gm
(phrases earlier. Here we start with syntax terms, which have the form:)show
349 126 gm
bu fc
2 F /|______Courier fnt
bn
(syntax )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
349 178 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(::=)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
349 206 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( ... )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
349 246 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(::=)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
349 274 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( in ... end)show
368 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.39108 0. 32 0.03910 0.(The allowed forms for the )awidthshow
368 200 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
368 208 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.34088 0. 32 0.03408 0.('s were explained in the previous section. The resulting grammar \()awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.12850 0.(x)ashow
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
368 488 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.41885 0. 32 0.04188 0.(\) is then)awidthshow
382 90 gm
0.03723 0. 32 0.00372 0.(used to parse the )awidthshow
382 160 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(span)show
382 179 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.03250 0. 32 0.00325 0.( of the grammar, which is the input stream after \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
(in)show
bu fc
2 F /|______Times-Roman fnt
bn
0.03463 0. 32 0.00346 0.(\325. If this parsing is successful, the)awidthshow
396 90 gm
0.06683 0. 32 0.00668 0.(keyword \324)awidthshow
396 131 gm
bu fc
2 F /|______Courier fnt
bn
0.02984 0.(end)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.07293 0. 32 0.00729 0.(\325 is expected, and then the current grammar reverts to the one that was active before entering)awidthshow
410 90 gm
(the syntax term.)show
424 108 gm
0.32989 0. 32 0.03298 0.(The result of parsing a syntax term \324)awidthshow
424 257 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.13912 0.(s)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.15411 0. 32 0.01541 0.(\325 is a \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.13912 0.(term)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.33477 0. 32 0.03347 0.(\325 according to the basic F-sub syntax of terms \(that)awidthshow
438 90 gm
0.14648 0. 32 0.01464 0.(is, where all the syntax extensions have been expanded\). The expansion of a syntax term \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.05830 0.(s)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.08514 0. 32 0.00851 0.(\325 into a \324)awidthshow
438 494 gm
bu fc
2 F /|______Courier fnt
bn
(term)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325)show
452 90 gm
0.03158 0. 32 0.00315 0.(is directed by the )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01263 0.(actions)ashow
452 190 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04104 0. 32 0.00410 0.( that are defined in \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04486 0. 32 0.00448 0.(\325; if no action is specified, \324)awidthshow
452 388 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04104 0. 32 0.00410 0.(\325 expands simply to \324)awidthshow
452 479 gm
bu fc
2 F /|______Courier fnt
bn
0.01904 0.(top)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.03021 0. 32 0.00302 0.(\325.  For)awidthshow
466 90 gm
0.16418 0. 32 0.01641 0.(example, we define below a grammar with two possible parses, the keywords \324)awidthshow
466 409 gm
bu fc
2 F /|______Courier fnt
bn
0.07368 0.(one)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.11871 0. 32 0.01187 0.(\325 and \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.07368 0.(two)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.13977 0. 32 0.01397 0.(\325, and no ac)awidthshow
466 519 gm
(-)show
480 90 gm
(tions. \(We use outer brackets to avoid confusing a syntax term with a syntax phrase.\))show
499 126 gm
bu fc
2 F /|______Courier fnt
bn
(- {syntax x::={"one" "two"} in one end};)show
513 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
513 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
532 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.18157 0. 32 0.01815 0.(A quoted identifier like \324)awidthshow
532 191 gm
bu fc
2 F /|______Courier fnt
bn
0.06498 0.("one")ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.16784 0. 32 0.01678 0.(\325 is automatically made into a keyword in the relevant span. Keywords are)awidthshow
546 90 gm
0.17623 0. 32 0.01762 0.(inherited from outer spans to inner spans. \(Hence the built-in F-sub keywords may conflict with syntax ex)awidthshow
546 519 gm
(-)show
560 90 gm
(tensions.\))show
579 108 gm
0.14755 0. 32 0.01475 0.(A top-level )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.24841 0. 32 0.02484 0.(syntax phrase)awidthshow
579 212 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.24047 0. 32 0.02404 0.( is a syntax term where the part \324)awidthshow
579 346 gm
bu fc
2 F /|______Courier fnt
bn
0.18692 0. 32 0.01869 0.(in )awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.05064 0.(...)ashow
579 372 gm
bu fc
2 F /|______Courier fnt
bn
0.35324 0. 32 0.03532 0.( end)awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.06860 0.(\325)ashow
bu fc
2 F /|______Courier fnt
bn
( )show
579 406 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.22644 0. 32 0.02264 0.(is missing; its span is the re-)awidthshow
593 90 gm
(mainder of the top-level session \(but see Section 4\).)show
607 108 gm
0.81008 0. 32 0.08100 0.(A syntax phrase does not normally affect the immediate top-level syntax. That is, the non-terminal)awidthshow
621 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(phrase)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 given in Appendix C keeps being used for parsing at the \324)show
621 366 gm
bu fc
2 F /|______Courier fnt
bn
(- )show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 prompt.)show
635 108 gm
0.30502 0. 32 0.03050 0.(But if the  \324)awidthshow
635 156 gm
bu fc
2 F /|______Courier fnt
bn
0.08595 0.(toplevel)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.21636 0. 32 0.02163 0.(\325 keyword is used, then the first non-terminal of the given grammar is adopted)awidthshow
649 90 gm
(as the new top-level syntax, and the built-in F-sub syntax is completely bypassed:)show
668 126 gm
bu fc
2 F /|______Courier fnt
bn
(- syntax toplevel x::={"one" "two"};)show
682 126 gm
(- one)show
696 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
696 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
F T cp
%%Page: ? 9
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 500 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 518 gm
(9)show
102 126 gm
10 fz
bu fc
2 F /|______Courier fnt
bn
(- two)show
116 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
116 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
135 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Note that we are now stuck with \324)show
bu fc
2 F /|______Courier fnt
bn
(x)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 as the top-level syntax; see Section 4 for recovering from this situation.)show
154 108 gm
0.64315 0. 32 0.06431 0.(Instead of defining a completely new grammar we can extend an existing one. In particular, we can)awidthshow
168 90 gm
1.22406 0. 32 0.12240 0.(extend the existing F-sub grammar described in Appendix C. Useful starting points for extension are)awidthshow
182 90 gm
0.09109 0.(\324)ashow
bu fc
2 F /|______Courier fnt
bn
0.16419 0.(termBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.27465 0. 32 0.02746 0.(\325 and \324)awidthshow
182 170 gm
bu fc
2 F /|______Courier fnt
bn
0.25271 0.(typeBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.43716 0. 32 0.04371 0.(\325 \(but use \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.25271 0.(term)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.40710 0. 32 0.04071 0.(\325 and \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.25271 0.(type)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.52642 0. 32 0.05264 0.(\325 on the right-hand side of \324)awidthshow
182 457 gm
bu fc
2 F /|______Courier fnt
bn
0.21537 0.(::=)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.50521 0. 32 0.05052 0.(\325\). See Ap)awidthshow
182 518 gm
(-)show
196 90 gm
(pendix C for other non-terminals that can be extended; these are marked )show
196 382 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(public)show
196 407 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
210 108 gm
(To extend a non-terminal \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 bound to a grammar \324)show
210 314 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
210 324 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 write:)show
229 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( ::= ... )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
248 90 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.42327 0. 32 0.04232 0.(In this case \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.21984 0.(x)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.55694 0. 32 0.05569 0.(\325 becomes equivalent to the choice \324)awidthshow
248 299 gm
bu fc
2 F /|______Courier fnt
bn
({)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
248 315 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
248 322 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
248 332 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
0.15971 0.(})ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.35751 0. 32 0.03575 0.(\325. In particular, \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.15971 0.(x)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.15972 0.(::=...{})ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.35156 0. 32 0.03515 0.(\325 has no effect,)awidthshow
262 90 gm
(while \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(::=...[])show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 makes \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 optional. For example:)show
281 126 gm
bu fc
2 F /|______Courier fnt
bn
(- {syntax termBase::= ... {"one" "two"})show
295 126 gm
(   in {fun\(x:Top\)one}\(two\) end};)show
309 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
309 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
333 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.44311 0. 32 0.04431 0.(The final topic of this section is how to add infix operators. This is achieved by extending grammars)awidthshow
347 90 gm
(that begin with an iteration construct, as opposed to extending arbitrary grammars as shown above.)show
361 108 gm
(To extend the iteration part of a non-terminal \324)show
361 295 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 bound to an iteration grammar \324)show
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
361 450 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(*)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
361 466 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 write:)show
380 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( ::= ... * )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(3)show
399 90 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Then \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 becomes equivalent to the iteration \324)show
399 274 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
399 290 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(*{)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
399 312 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(3)show
399 328 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(}\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
413 108 gm
0.48538 0. 32 0.04853 0.(In Appendix C we provide a non-terminal \324)awidthshow
413 287 gm
bu fc
2 F /|______Courier fnt
bn
0.16255 0.(termOper)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.38208 0. 32 0.03820 0.(\325 as a suitable place for attaching infix opera)awidthshow
413 519 gm
(-)show
427 90 gm
0.11810 0. 32 0.01181 0.(tors. This \324)awidthshow
427 134 gm
bu fc
2 F /|______Courier fnt
bn
0.04383 0.(termOper)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.08728 0. 32 0.00872 0.(\325 is an iteration based on \324)awidthshow
427 287 gm
bu fc
2 F /|______Courier fnt
bn
0.03861 0.(termAppl)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.09124 0. 32 0.00912 0.(\325. The latter is another iteration that parses ap)awidthshow
427 518 gm
(-)show
441 90 gm
0.01083 0. 32 0.00108 0.(plications, and is in turn based on \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
(termBase)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325. Finally, \324)show
bu fc
2 F /|______Courier fnt
bn
(termBase)show
bu fc
2 F /|______Times-Roman fnt
bn
0.01159 0. 32 0.00115 0.(\325 terms are those simple terms that do)awidthshow
455 90 gm
0.30883 0. 32 0.03088 0.(not have pieces of syntax \322hanging off to the right\323. Given this structure, one can attach infix operators to)awidthshow
469 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(termOper)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 that will have lower precedence than application.)show
483 108 gm
2.98461 0. 32 0.29846 0.(The following iteration extension introduces \324)awidthshow
483 320 gm
bu fc
2 F /|______Courier fnt
bn
1.21809 0.(+)ashow
bu fc
2 F /|______Times-Roman fnt
bn
3.21655 0. 32 0.32165 0.(\325 as a left-associative infix operator over)awidthshow
497 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(termOper)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325s:)show
516 126 gm
bu fc
2 F /|______Courier fnt
bn
(termOper ::= ... * [ "+" termAppl ])show
535 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(achieving the equivalent of  \324)show
535 207 gm
bu fc
2 F /|______Courier fnt
bn
(termOper ::= \( termAppl * [ "+" termAppl ] \))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
549 108 gm
3.04580 0. 32 0.30458 0.(The following iteration extension introduces \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.95558 0.(-)ashow
bu fc
2 F /|______Times-Roman fnt
bn
2.58499 0. 32 0.25849 0.(\325 as a right-associative infix operator over)awidthshow
563 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(termOper)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325s:)show
582 126 gm
bu fc
2 F /|______Courier fnt
bn
(termOper ::= ... * [ "-" termOper ])show
601 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(achieving the equivalent of  \324)show
601 207 gm
bu fc
2 F /|______Courier fnt
bn
(termOper ::= \( termAppl * [ "-" termOper ] \))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
615 108 gm
1.08154 0. 32 0.10815 0.(Similarly, \324)awidthshow
615 156 gm
bu fc
2 F /|______Courier fnt
bn
0.36877 0.(typeOper)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.61706 0. 32 0.06170 0.(\325 and \324)awidthshow
615 235 gm
bu fc
2 F /|______Courier fnt
bn
0.57215 0.(typeBase)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.24496 0. 32 0.12449 0.(\325 can be used for new infix type operators \(there is no)awidthshow
629 90 gm
0.08900 0.(\324)ashow
bu fc
2 F /|______Courier fnt
bn
0.16044 0.(typeAppl)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.33416 0. 32 0.03341 0.(\325\). The syntax of \324)awidthshow
629 217 gm
bu fc
2 F /|______Courier fnt
bn
0.18617 0.(type)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.47348 0. 32 0.04734 0.(\325 in Appendix C implies that these operators will have higher prece)awidthshow
629 519 gm
(-)show
643 90 gm
(dence than \324)show
643 139 gm
bu fc
2 F /|______Courier fnt
bn
(->)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
F T cp
%%Page: ? 10
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(10)show
99 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(3.3. Actions)show
120 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.32485 0. 32 0.03248 0.(Actions can be attached to grammars. They describe the terms that are to be generated during parsing)awidthshow
134 90 gm
0.45242 0. 32 0.04524 0.(of syntax extensions. By using \324)awidthshow
134 222 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.20201 0.(g)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.20201 0.(_)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.20201 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.44677 0. 32 0.04467 0.(\325 in a grammar, one specifies that the result of parsing \324)awidthshow
134 470 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.17454 0.(g)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.43106 0. 32 0.04310 0.(\325 should be)awidthshow
148 90 gm
0.08987 0. 32 0.00898 0.(stored in the pattern variable \324)awidthshow
148 211 gm
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.08682 0. 32 0.00868 0.(\325. Pattern variables are then used in actions \324)awidthshow
148 402 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07278 0. 32 0.00727 0.(\325; the grammars \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Courier fnt
bn
0.02966 0.(=>)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07156 0. 32 0.00715 0.(\325 and)awidthshow
162 90 gm
(\324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:>)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 specify, respectively, that the parsing of \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 should generate the term or type described by \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
176 108 gm
0.16677 0. 32 0.01667 0.(We now describe the rules of expansion. The )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.25619 0. 32 0.02561 0.(expansion )awidthshow
176 337 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.15258 0. 32 0.01525 0.(generated by a \(successfully parsed\) grammar)awidthshow
190 90 gm
(is defined as follows:)show
209 126 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Grammar)show
209 198 gm
(Expansion)show
223 126 gm
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
223 198 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(the expansion generated by the grammar bound to)show
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
237 126 gm
bu fc
2 F /|______Courier fnt
bn
(ide)show
237 198 gm
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
251 126 gm
bu fc
2 F /|______Courier fnt
bn
(")show
bu fc
2 F /|______Times-Roman fnt
bn
(...)show
251 140 gm
bu fc
2 F /|______Courier fnt
bn
(")show
251 198 gm
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
265 126 gm
bu fc
2 F /|______Courier fnt
bn
(string)show
265 198 gm
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
279 126 gm
bu fc
2 F /|______Courier fnt
bn
([)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
279 142 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( ... )show
279 155 gm
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
279 165 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(])show
279 198 gm
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
293 126 gm
bu fc
2 F /|______Courier fnt
bn
({)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
293 142 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( ...)show
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n )show
293 164 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(})show
293 198 gm
bu fc
2 F /|______Times-Roman fnt
bn
(the expansion generated by the successful )show
293 368 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
293 376 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
307 126 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
307 142 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( )show
307 145 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(*)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
( )show
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
307 163 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(\))show
307 198 gm
bu fc
2 F /|______Times-Roman fnt
bn
(the expansion generated by either )show
307 335 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
307 345 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(, if )show
307 359 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
307 369 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(  alone is successful,  or by the)show
321 198 gm
(last )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2 )show
321 226 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(if )show
321 235 gm
bu fc
2 F /|______Courier fnt
bn
([)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
321 251 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
( )show
321 254 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
321 264 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
( ... )show
321 277 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
321 287 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(])show
bu fc
2 F /|______Times-Roman fnt
bn
( is successful.)show
335 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(=>)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
335 198 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(the  expansion generated by the )show
335 327 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term pattern)show
335 377 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( \(see below\).)show
349 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:>)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
349 198 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(the  expansion generated by the )show
349 327 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type pattern)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( \(see below\).)show
363 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
363 198 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(, but in addition the expansion generated by )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( is stored in )show
363 448 gm
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
377 126 gm
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
377 139 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( )show
377 142 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(*_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
bu fc
2 F /|______Times-Italic fnt
bn
( )show
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
377 172 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
377 198 gm
(the expansion generated by )show
377 310 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
377 326 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( )show
377 329 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(*)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
( )show
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
377 347 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(, but at each iteration)show
391 198 gm
(the latest expansion is also stored in )show
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
410 108 gm
0.45303 0. 32 0.04530 0.(A pattern variable \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.17417 0.(_)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.17417 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.31646 0. 32 0.03164 0.(\325 \(with )awidthshow
410 231 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.16493 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.40771 0. 32 0.04077 0.( non-negative\) is )awidthshow
410 309 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11337 0.(defined)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.36605 0. 32 0.03660 0.( when an occurrence of \324)awidthshow
410 441 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.16685 0.(g)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.16685 0.(_)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.16685 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.35980 0. 32 0.03598 0.(\325 is parsed suc)awidthshow
410 518 gm
(-)show
424 90 gm
0.09414 0. 32 0.00941 0.(cessfully. The )awidthshow
424 149 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.08422 0. 32 0.00842 0.(range of definition)awidthshow
424 224 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.09246 0. 32 0.00924 0.( of a pattern variable \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.10711 0. 32 0.01071 0.(\325 is always confined within a clause \324)awidthshow
424 475 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
0.02151 0.(::=)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04272 0. 32 0.00427 0.(\325. In)awidthshow
438 90 gm
0.01861 0. 32 0.00186 0.(addition, a pattern variable defined in a branch of a choice is confined to that branch, and one defined in the)awidthshow
452 90 gm
(\324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
452 103 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 of \324)show
452 123 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
452 139 gm
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
( )show
452 142 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(*)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
( )show
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
452 160 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 is confined to \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 3 rm
8 fz
bu fc
2 F /|______Times-Italic fnt
bn
(2)show
452 242 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325. Errors are given on attempts to define a pattern variable twice, or to)show
466 90 gm
(use one that is not currently defined.)show
480 108 gm
0.14404 0. 32 0.01440 0.(An )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.06361 0.(action)ashow
480 148 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.45959 0. 32 0.04595 0.( \324)awidthshow
480 155 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.12667 0.(a)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07026 0.(\325)ashow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.04806 0. 32 0.00480 0.( )awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.34423 0. 32 0.03442 0.(may contain the pattern variables \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.12667 0.(_)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.12667 0.(n)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.27999 0. 32 0.02799 0.(\325 that are defined where \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.12667 0.(a)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.30731 0. 32 0.03073 0.(\325 appears. Note that an)awidthshow
494 90 gm
0.04226 0. 32 0.00422 0.(action \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 in \324)show
494 146 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(=>)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02593 0. 32 0.00259 0.(\325 can access pattern variables defined outside \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(g)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02609 0. 32 0.00260 0.(\325 in the surrounding grammar; this abil)awidthshow
494 518 gm
(-)show
508 90 gm
0.55404 0. 32 0.05540 0.(ity greatly increases the expressive power of actions. An action may also contain ordinary program vari)awidthshow
508 518 gm
(-)show
522 90 gm
(ables bound in the surrounding scope.)show
536 108 gm
(An action appearing after \324)show
536 216 gm
bu fc
2 F /|______Courier fnt
bn
(=>)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 can be any )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term pattern)show
536 329 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.00717 0. 32 0.00071 0.(. This is, recursively, either a \324)awidthshow
536 451 gm
bu fc
2 F /|______Courier fnt
bn
(term)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 \(including)show
550 90 gm
(any syntax extension of \324)show
550 191 gm
bu fc
2 F /|______Courier fnt
bn
(term)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325\) or one of the following patterns:)show
569 126 gm
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
583 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(fun\(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type-pattern)show
583 217 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term-pattern)show
597 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(fun\(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
bu fc
2 F /|______Times-Italic fnt
bn
(<)show
597 169 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type-pattern)show
597 224 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term-pattern)show
611 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(fun\(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term-pattern)show
630 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(The )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.04241 0. 32 0.00424 0.(expansion )awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.00956 0.(generated)ashow
630 208 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
( )show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.06668 0. 32 0.00666 0.(by a term pattern is the result of instantiating the term pattern with the expan)awidthshow
630 518 gm
(-)show
644 90 gm
(sions stored in the pattern variables \324)show
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 that occur in it.)show
658 108 gm
-0.00566 0.(Similarly to term patterns, an action appearing after \324)ashow
bu fc
2 F /|______Courier fnt
bn
(:>)show
bu fc
2 F /|______Times-Roman fnt
bn
-0.00624 0.(\325 can be any )ashow
658 383 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type pattern)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
-0.00384 0.(, which is, recursively,)ashow
672 90 gm
(either a \324)show
672 126 gm
bu fc
2 F /|______Courier fnt
bn
(type)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 or one of the following patterns:)show
F T cp
%%Page: ? 11
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(11)show
102 126 gm
10 fz
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
116 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(All\(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
bu fc
2 F /|______Times-Italic fnt
bn
(<)show
116 169 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type-pattern)show
116 224 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type-pattern)show
130 126 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(All\(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type-pattern)show
149 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.62957 0. 32 0.06295 0.(We are careful to avoid variable capture when patterns are instantiated. Considering \324)awidthshow
149 463 gm
bu fc
2 F /|______Courier fnt
bn
(fun\()show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(...)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325)show
163 90 gm
(binders \(the others are handled similarly\), we have the typical situations:)show
182 126 gm
(\(1\))show
182 162 gm
bu fc
2 F /|______Courier fnt
bn
(fun\(x:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\)x\(_1\))show
182 306 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\(2\))show
182 342 gm
bu fc
2 F /|______Courier fnt
bn
(fun\(_1:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\)x\(_2\))show
201 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.54809 0. 32 0.05480 0.(In \324)awidthshow
201 105 gm
bu fc
2 F /|______Courier fnt
bn
0.14736 0.(fun\(x:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.14736 0.(A)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.14736 0.(\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.39627 0. 32 0.03962 0.(\325 situations, including example \(1\), the variable \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.14736 0.(x)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.35171 0. 32 0.03517 0.(\325 is consistently renamed so that it does)awidthshow
215 90 gm
-0.00505 0.(not capture other variables named \324)ashow
bu fc
2 F /|______Courier fnt
bn
(x)show
bu fc
2 F /|______Times-Roman fnt
bn
-0.00466 0.(\325 when the pattern is instantiated. In \324)ashow
bu fc
2 F /|______Courier fnt
bn
-0.00750 0.(fun\(_1:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
-0.00485 0.(\325 situations, variable)ashow
229 90 gm
0.42495 0. 32 0.04249 0.(capture on instantiation is normally desired, but only for certain subexpressions. In example \(2\) we never)awidthshow
243 90 gm
0.48889 0. 32 0.04888 0.(want the variable that replaces \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.19102 0.(_1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.38040 0. 32 0.03804 0.(\325 to capture \324)awidthshow
243 287 gm
bu fc
2 F /|______Courier fnt
bn
0.20063 0.(x)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.46691 0. 32 0.04669 0.(\325, but we always want the variable that replaces \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.20063 0.(_1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.35003 0. 32 0.03500 0.(\325 to)awidthshow
257 90 gm
-0.00807 0.(capture the similarly named variables in the term that replaces \324)ashow
257 344 gm
bu fc
2 F /|______Courier fnt
bn
(_2)show
bu fc
2 F /|______Times-Roman fnt
bn
-0.00816 0.(\325. The general situation is handled by two)ashow
271 90 gm
0.14312 0. 32 0.01431 0.(separate renaming environments during instantiation; one for )awidthshow
271 339 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.04147 0.(resident)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.15823 0. 32 0.01582 0.( bound variables \(\324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.06178 0.(x)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.12191 0. 32 0.01219 0.(\325, in \(1\)\) and one)awidthshow
285 90 gm
0.58258 0. 32 0.05825 0.(for )awidthshow
285 105 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.10804 0.(intruding)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.40115 0. 32 0.04011 0.( bound variables \(the ones replacing \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.15670 0.(_1)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.40512 0. 32 0.04051 0.(\325 in \(2\)\). Different subexpressions of the pattern are)awidthshow
299 90 gm
0.64773 0. 32 0.06477 0.(renamed according to the appropriate environment. Variables that are free in an action and bound in the)awidthshow
313 90 gm
(top-level environment are allowed, but may produce error messages when in risk of being captured.)show
342 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(3.4. How it is done)show
363 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.47729 0. 32 0.04772 0.(The implementation of syntax extensions is really quite simple, when properly organized. Grammars)awidthshow
377 90 gm
1.41860 0. 32 0.14186 0.(are stored in tables associating non-terminal names to grammar descriptions; this association can be)awidthshow
391 90 gm
0.18630 0. 32 0.01863 0.(changed dynamically to extend existing non-terminals. Grammar descriptions include client \322action proce)awidthshow
391 518 gm
(-)show
405 90 gm
0.19912 0. 32 0.01991 0.(dures\323 to be invoked during parsing to build the abstract syntax trees: no intermediate parse trees are built,)awidthshow
419 90 gm
0.06576 0. 32 0.00657 0.(resulting in very efficient parsing. Intermediate parsing results are kept on a stack, accessed by \(the equiva)awidthshow
419 518 gm
(-)show
433 90 gm
(lent of\) pattern variables.)show
447 108 gm
0.40679 0. 32 0.04067 0.(A simple recursive-descent parser interprets these grammar tables blindly, dispatching on the various)awidthshow
461 90 gm
0.23864 0. 32 0.02386 0.(cases of grammar descriptions and calling the action routines when indicated. The action routines attached)awidthshow
475 90 gm
0.52505 0. 32 0.05250 0.(to the built-in syntax of grammars build grammars. The action routines attached to the syntax of actions,)awidthshow
489 90 gm
0.35430 0. 32 0.03543 0.(invoke an external \322Act\323 interface to instantiate patterns. Nothing in this parser and syntax-extension ma)awidthshow
489 518 gm
(-)show
503 90 gm
0.54809 0. 32 0.05480 0.(chinery is specific to the implementation of F-sub; in fact, it could be and has been reused for other lan)awidthshow
503 518 gm
(-)show
517 90 gm
(guages.)show
531 108 gm
0.48675 0. 32 0.04867 0.(The built-in F-sub syntax is just a grammar table, so that it can be modified like any other grammar.)awidthshow
545 90 gm
0.40496 0. 32 0.04049 0.(The only parsing code specific to F-sub is provided in the implementation of the interface \322Act\323, used by)awidthshow
559 90 gm
0.32089 0. 32 0.03208 0.(the parser to instantiate the pattern variables within term and type patterns. This module is responsible for)awidthshow
573 90 gm
(pre)show
573 103 gm
(venting variable captures, and hence must be aware of the scoping structures of the language at hand.)show
587 108 gm
0.33233 0. 32 0.03323 0.(The sophisticated hiding and sharing of information needed to separate the parser from the rest of the)awidthshow
601 90 gm
(system, is realized via the Modula-3 partially-opaque-types mechanism.)show
629 108 gm
0.03768 0. 32 0.00376 0.(We now discuss in more detail how )awidthshow
629 254 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(actions)show
629 283 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.03433 0. 32 0.00343 0.( are instantiated so that variable capture is avoided. The ba-)awidthshow
643 90 gm
0.46539 0. 32 0.04653 0.(sic technique is described in the simplified context of a )awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
643 326 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.39398 0. 32 0.03939 0.(-calculus with )awidthshow
2 fs
bu fc
2 T /|______Symbol fnt
bn
(l)show
643 392 gm
bu fc
2 F /|______Times-Italic fnt
bn
0.09529 0.(-patterns)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.34790 0. 32 0.03479 0.(. The technique is then)awidthshow
657 90 gm
(instatiated three times in F-sub, for \324)show
657 236 gm
bu fc
2 F /|______Courier fnt
bn
(All\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, \324)show
bu fc
2 F /|______Courier fnt
bn
(fun\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, and \324)show
657 384 gm
bu fc
2 F /|______Courier fnt
bn
(fun\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 binders.)show
671 108 gm
(A )show
671 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(pattern)show
671 147 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( p is described by the following data structure:)show
690 126 gm
(p = x | )show
690 154 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
bu fc
2 F /|______Times-Roman fnt
bn
(x.p | p p' | )show
690 200 gm
4 fs
5 ul
(x)show
0 fs
( | )show
690 212 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(. p)show
F T cp
%%Page: ? 12
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(12)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(where the )show
102 132 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(pattern variables)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
102 203 gm
4 fs
5 ul
(x)show
0 fs
( \(corresponding to \324)show
bu fc
2 F /|______Courier fnt
bn
(_)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 in F-sub\) are distinct from the ordinary variables x.)show
116 108 gm
0.13610 0. 32 0.01361 0.(We use )awidthshow
116 141 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01654 0.(renamings)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
116 191 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.07980 0. 32 0.00798 0.( mapping \(non-pattern-\) variables to \(non-pattern-\) variables, and )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01860 0.(instantiations)ashow
116 511 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
116 514 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(,)show
130 90 gm
(mapping pattern-variables to patterns. Here are the corresponding data structures and related operations:)show
149 126 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
( = )show
149 142 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
149 147 gm
bu fc
2 F /|______Times-Roman fnt
bn
( | x)show
149 159 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
149 176 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(')show
149 234 gm
(x)show
bu fc

%%BeginFont: LicsPlain
%!PS-AdobeFont-1.0
%%CreationDate: Sun, Jul 26, 1992 1:45 PM
%%VMusage: 31104 31104
% Created with FontStudio Copyright © 1990 AB Vista Company. All rights reserved.
11 dict begin
/FontInfo 9 dict dup begin
/version (1.1) readonly def
/Notice (                               ) readonly def
/FullName (Lics Plain) readonly def
/FamilyName (Lics) readonly def
/Weight (Plain) readonly def
/ItalicAngle 9 def
/isFixedPitch false def
/UnderlinePosition -133 def
/UnderlineThickness 20 def
end readonly def
/FontName /LicsPlain def
/Encoding 256 array
0 1 255{1 index exch /.notdef put}for
dup 0 /NUL put
dup 1 /SOH put
dup 2 /STX put
dup 3 /ETX put
dup 4 /EOT put
dup 5 /ENQ put
dup 6 /ACK put
dup 7 /BEL put
dup 9 /HT put
dup 13 /CR put
dup 16 /DLE put
dup 17 /DC1 put
dup 18 /DC2 put
dup 19 /DC3 put
dup 20 /DC4 put
dup 21 /NAK put
dup 22 /SYN put
dup 23 /ETB put
dup 31 /US put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quotesingle put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /grave put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /DEL put
dup 128 /Adieresis put
dup 129 /Aring put
dup 130 /Ccedilla put
dup 131 /Eacute put
dup 132 /Ntilde put
dup 133 /Odieresis put
dup 134 /Udieresis put
dup 135 /aacute put
dup 136 /agrave put
dup 137 /acircumflex put
dup 138 /adieresis put
dup 139 /atilde put
dup 140 /aring put
dup 141 /ccedilla put
dup 142 /eacute put
dup 143 /egrave put
dup 144 /ecircumflex put
dup 145 /edieresis put
dup 146 /iacute put
dup 147 /igrave put
dup 148 /icircumflex put
dup 149 /idieresis put
dup 150 /ntilde put
dup 151 /oacute put
dup 152 /ograve put
dup 153 /ocircumflex put
dup 154 /odieresis put
dup 155 /otilde put
dup 156 /uacute put
dup 157 /ugrave put
dup 158 /ucircumflex put
dup 159 /udieresis put
dup 160 /dagger put
dup 161 /degree put
dup 162 /cent put
dup 163 /sterling put
dup 164 /section put
dup 165 /bullet put
dup 166 /paragraph put
dup 167 /germandbls put
dup 168 /registered put
dup 169 /copyright put
dup 170 /trademark put
dup 171 /acute put
dup 172 /dieresis put
dup 173 /notequal put
dup 174 /AE put
dup 175 /Oslash put
dup 176 /infinity put
dup 177 /plusminus put
dup 178 /lessequal put
dup 179 /greaterequal put
dup 180 /yen put
dup 181 /mu put
dup 182 /partialdiff put
dup 183 /summation put
dup 184 /product put
dup 185 /pi put
dup 186 /integral put
dup 187 /ordfeminine put
dup 188 /ordmasculine put
dup 189 /Omega put
dup 190 /ae put
dup 191 /oslash put
dup 192 /questiondown put
dup 193 /exclamdown put
dup 194 /logicalnot put
dup 195 /radical put
dup 196 /florin put
dup 197 /approxequal put
dup 198 /Delta put
dup 199 /guillemotleft put
dup 200 /guillemotright put
dup 201 /ellipsis put
dup 202 /nbspace put
dup 203 /Agrave put
dup 204 /Atilde put
dup 205 /Otilde put
dup 206 /OE put
dup 207 /oe put
dup 208 /endash put
dup 209 /emdash put
dup 210 /quotedblleft put
dup 211 /quotedblright put
dup 212 /quoteleft put
dup 213 /quoteright put
dup 214 /divide put
dup 215 /lozenge put
dup 216 /ydieresis put
dup 217 /Ydieresis put
dup 218 /fraction put
dup 219 /currency put
dup 220 /guilsinglleft put
dup 221 /guilsinglright put
dup 222 /fi put
dup 223 /fl put
dup 224 /daggerdbl put
dup 225 /periodcentered put
dup 226 /quotesinglbase put
dup 227 /quotedblbase put
dup 228 /perthousand put
dup 229 /Acircumflex put
dup 230 /Ecircumflex put
dup 231 /Aacute put
dup 232 /Edieresis put
dup 233 /Egrave put
dup 234 /Iacute put
dup 235 /Icircumflex put
dup 236 /Idieresis put
dup 237 /Igrave put
dup 238 /Oacute put
dup 239 /Ocircumflex put
dup 240 /apple put
dup 241 /Ograve put
dup 242 /Uacute put
dup 243 /Ucircumflex put
dup 244 /Ugrave put
dup 245 /dotlessi put
dup 246 /circumflex put
dup 247 /tilde put
dup 248 /macron put
dup 249 /breve put
dup 250 /dotaccent put
dup 251 /ring put
dup 252 /cedilla put
dup 253 /hungarumlaut put
dup 254 /ogonek put
dup 255 /caron put
readonly def

/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-86 -451 1204 978}readonly def
%/UniqueID 4364290 def
currentdict end
currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
bn
%%EndFont
bu fc
{}mark F /LicsPlain /|______LicsPlain 0 rf
bn
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
149 271 gm
bu fc
2 F /|______Times-Roman fnt
bn
('\))show
163 126 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
( = )show
163 142 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
163 147 gm
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
163 154 gm
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
163 176 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(')show
163 234 gm
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
163 271 gm
bu fc
2 F /|______Times-Roman fnt
bn
('\))show
182 126 gm
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
182 153 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\):    )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(domain)show
182 288 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
182 305 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\):   )show
182 324 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(range)show
196 144 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
196 183 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
196 306 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
196 323 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
196 341 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
210 144 gm
bu fc
2 F /|______Times-Roman fnt
bn
(dom\(x)show
bu fc
2 F /|______Symbol fnt
bn
(\254)show
210 180 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
210 193 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = {x})show
210 222 gm
bu fc
2 F /|______Symbol fnt
bn
(\310)show
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
210 256 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
210 306 gm
(rng\(x)show
210 328 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
210 338 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
210 351 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = {y})show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
210 387 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
210 409 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
229 126 gm
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
229 153 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\):)show
229 288 gm
(rng\()show
229 305 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\):)show
243 144 gm
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
243 183 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
243 306 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
243 323 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
243 341 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
257 144 gm
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
257 180 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
257 193 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = {)show
257 212 gm
4 fs
5 ul
(x)show
0 fs
(})show
257 222 gm
bu fc
2 F /|______Symbol fnt
bn
(\310)show
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
257 256 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
257 306 gm
(rng\()show
257 323 gm
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
257 338 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
257 351 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = {p})show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
257 387 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
257 409 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
276 126 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\(x\):   )show
276 153 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(lookup)show
276 288 gm
0 fs
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
276 297 gm
4 fs
5 ul
(x)show
0 fs
(\):)show
290 144 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\(x\) = x)show
290 306 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
290 314 gm
4 fs
5 ul
(x)show
0 fs
(\) = )show
290 333 gm
4 fs
5 ul
(x)show
304 144 gm
0 fs
(\(z)show
304 152 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
304 162 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
304 175 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\)\(x\) = )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
304 206 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\(x\)    \(z)show
bu fc
2 F /|______LicsPlain fnt
bn
(=)show
304 242 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x\))show
304 306 gm
(\()show
4 fs
4.43847 ul
(z)show
304 314 gm
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
304 324 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
304 337 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\)\()show
4 fs
5 ul
(x)show
0 fs
(\) = )show
304 362 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
304 368 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
4 fs
5 ul
(x)show
0 fs
(\)    \()show
304 393 gm
4 fs
4.43847 ul
(z)show
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(=)show
304 404 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(\))show
318 144 gm
(\(x)show
bu fc
2 F /|______Symbol fnt
bn
(\254)show
318 162 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
318 170 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\)\(x\) = y)show
318 306 gm
(\()show
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
318 324 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
318 332 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\)\()show
318 344 gm
4 fs
5 ul
(x)show
0 fs
(\) = p)show
337 126 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\\x:   )show
337 150 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(restriction)show
337 288 gm
0 fs
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\\)show
337 296 gm
4 fs
5 ul
(x)show
0 fs
(:)show
351 144 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\\x = )show
351 167 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
351 306 gm
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(\\)show
351 313 gm
4 fs
5 ul
(x)show
0 fs
( = )show
351 329 gm
bu fc
2 F /|______Symbol fnt
bn
(e)show
365 144 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\(z)show
365 152 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
365 162 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
365 175 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\)\\x = z)show
bu fc
2 F /|______Symbol fnt
bn
(\254)show
365 211 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
365 224 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\\x    \(z)show
bu fc
2 F /|______LicsPlain fnt
bn
(=)show
365 256 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x\))show
365 306 gm
(\()show
4 fs
4.43847 ul
(z)show
365 314 gm
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
365 324 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
365 337 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\)\\)show
4 fs
5 ul
(x)show
0 fs
( = )show
4 fs
4.43847 ul
(z)show
365 363 gm
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
365 373 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
365 386 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\\)show
4 fs
5 ul
(x)show
0 fs
(    \()show
365 407 gm
4 fs
4.43847 ul
(z)show
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(=)show
365 418 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(\))show
379 144 gm
(\(x)show
bu fc
2 F /|______Symbol fnt
bn
(\254)show
379 162 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y,)show
379 170 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\)\\x = )show
379 197 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
379 306 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
379 324 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p,)show
379 332 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\)\\)show
4 fs
5 ul
(x)show
0 fs
( = )show
379 359 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
398 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.58059 0. 32 0.05805 0.(With these operations, we can define the notions of )awidthshow
398 324 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.76446 0. 32 0.07644 0.(free variables)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.34393 0. 32 0.03439 0.( \(FV\), )awidthshow
398 409 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.63034 0. 32 0.06303 0.(pattern variables)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.35400 0. 32 0.03540 0.( \(PV\), and)awidthshow
412 90 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(binding pattern variables)show
412 192 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( \(BPV\) of a pattern.)show
431 126 gm
(FV\(p\):)show
431 252 gm
(PV\(p\):)show
431 378 gm
(BPV\(p\):)show
445 144 gm
(FV\(x\) = {x})show
445 270 gm
(PV\(x\) = )show
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
445 396 gm
bu fc
2 F /|______Times-Roman fnt
bn
(BPV\(x\) = )show
445 438 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
459 144 gm
bu fc
2 F /|______Times-Roman fnt
bn
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
459 166 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x.p\) = FV\(p\) )show
bu fc
2 F /|______Symbol fnt
bn
(-)show
bu fc
2 F /|______Times-Roman fnt
bn
( {x})show
459 270 gm
(PV\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
459 292 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x.p\) = PV\(p\))show
459 396 gm
(BPV\()show
459 419 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
bu fc
2 F /|______Times-Roman fnt
bn
(x.p\) = BPV\(p\))show
473 144 gm
(FV\(p p'\) = FV\(p\) )show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
473 223 gm
bu fc
2 F /|______Times-Roman fnt
bn
( FV\(p'\))show
473 270 gm
(PV\(p p'\) = PV\(p\) )show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
473 349 gm
bu fc
2 F /|______Times-Roman fnt
bn
( PV\(p'\))show
473 396 gm
(BPV\(p p'\) = BPV\(p\) )show
473 481 gm
bu fc
2 F /|______Symbol fnt
bn
(\310)show
bu fc
2 F /|______Times-Roman fnt
bn
( BPV\(p'\))show
487 144 gm
(FV\()show
4 fs
5 ul
(x)show
0 fs
(\) = )show
487 179 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
487 270 gm
bu fc
2 F /|______Times-Roman fnt
bn
(PV\()show
4 fs
5 ul
(x)show
0 fs
(\) = {)show
487 310 gm
4 fs
5 ul
(x)show
0 fs
(})show
487 396 gm
(BPV\()show
487 419 gm
4 fs
5 ul
(x)show
0 fs
(\) = )show
487 438 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
501 144 gm
bu fc
2 F /|______Times-Roman fnt
bn
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
501 166 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(. p\) = FV\(p\))show
501 270 gm
(PV\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
501 292 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(. p\) = {)show
4 fs
5 ul
(x)show
0 fs
(} )show
501 338 gm
bu fc
2 F /|______Symbol fnt
bn
(\310)show
bu fc
2 F /|______Times-Roman fnt
bn
( PV\(p\))show
501 396 gm
(BPV\()show
501 419 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(. p\) = {)show
501 458 gm
4 fs
5 ul
(x)show
0 fs
(} )show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
501 478 gm
bu fc
2 F /|______Times-Roman fnt
bn
( BPV\(p\))show
520 90 gm
(Free variables and pattern variables are then extended to renamings and instantiations.)show
539 126 gm
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
539 148 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\):)show
539 306 gm
(PV\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
539 328 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\):)show
553 144 gm
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
553 166 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = rng\()show
553 197 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
553 324 gm
(PV\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
553 346 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
553 360 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
572 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
572 148 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\):)show
572 306 gm
(PV\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
572 328 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\):)show
586 144 gm
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
586 166 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
586 180 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\220)show
bu fc
2 F /|______Times-Roman fnt
bn
({FV\(p\) | p )show
586 231 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\354)show
bu fc
2 F /|______Times-Roman fnt
bn
( rng\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
586 261 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) })show
586 324 gm
(PV\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
586 346 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\) = )show
586 360 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\220)show
bu fc
2 F /|______Times-Roman fnt
bn
({PV\(p\) | p )show
586 411 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\354 )show
586 419 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
586 436 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) })show
605 90 gm
(Finally, we define the effect of applying renamings and instantiations to patterns.)show
624 126 gm
(p[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
624 140 gm
bu fc
2 F /|______Times-Roman fnt
bn
(]:)show
638 144 gm
(x[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
638 158 gm
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
638 172 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\(x\))show
652 144 gm
(\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
652 153 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x.p\)[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
652 191 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
652 197 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x'.p[x)show
652 220 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
bu fc
2 F /|______Times-Roman fnt
bn
(x',)show
652 239 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\\x])show
652 324 gm
(x')show
652 331 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
(FV\(p\), x')show
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
652 399 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
652 415 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
652 432 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
666 144 gm
(\(p p'\)[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
666 174 gm
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
666 188 gm
bu fc
2 F /|______Symbol fnt
bn
( )show
bu fc
2 F /|______Times-Roman fnt
bn
(p[)show
666 199 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(] p'[)show
666 220 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(])show
680 144 gm
4 fs
5 ul
(x)show
0 fs
([)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
680 158 gm
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
680 172 gm
4 fs
5 ul
(x)show
694 144 gm
0 fs
(\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
694 153 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(.p\)[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
694 191 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
694 197 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(.p[)show
694 213 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(])show
F T cp
%%Page: ? 13
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(13)show
102 126 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(p[)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
102 140 gm
bu fc
2 F /|______Times-Roman fnt
bn
(]:)show
102 180 gm
(assuming)show
102 252 gm
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(\354)show
bu fc
2 F /|______Times-Roman fnt
bn
(BPV\(p\) )show
102 296 gm
bu fc
2 F /|______Symbol fnt
bn
(\336)show
102 306 gm
bu fc
2 F /|______Times-Roman fnt
bn
( )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
102 314 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
4 fs
5 ul
(x)show
0 fs
(\) is a variable y)show
121 144 gm
(p[)show
bu fc
2 F /|______Symbol fnt
bn
(p)show
121 158 gm
bu fc
2 F /|______Times-Roman fnt
bn
(] = p[)show
bu fc
2 F /|______Symbol fnt
bn
(e)show
121 185 gm
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(e)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
121 205 gm
bu fc
2 F /|______Times-Roman fnt
bn
(])show
135 162 gm
(x[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
135 176 gm
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
135 187 gm
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(] = x[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
135 227 gm
bu fc
2 F /|______Times-Roman fnt
bn
(])show
149 162 gm
(\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
149 171 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x.p\)[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
149 201 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
149 219 gm
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
149 233 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
bu fc
2 F /|______Times-Roman fnt
bn
(x'.p[x)show
149 261 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
149 271 gm
bu fc
2 F /|______Times-Roman fnt
bn
(x',)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
149 286 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\\x; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
149 317 gm
bu fc
2 F /|______Times-Roman fnt
bn
(])show
149 378 gm
(x')show
149 385 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
(FV\(p\), x')show
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
([)show
149 435 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
149 446 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
149 464 gm
bu fc
2 F /|______Times-Roman fnt
bn
(])show
163 162 gm
(\(p p'\)[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
163 192 gm
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
163 203 gm
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
163 229 gm
bu fc
2 F /|______Symbol fnt
bn
( )show
163 232 gm
bu fc
2 F /|______Times-Roman fnt
bn
(p[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
163 251 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
163 269 gm
bu fc
2 F /|______Times-Roman fnt
bn
(] p'[)show
163 285 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
163 301 gm
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(])show
177 162 gm
4 fs
5 ul
(x)show
0 fs
([)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
177 176 gm
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
177 187 gm
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
177 213 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
177 219 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
4 fs
5 ul
(x)show
0 fs
(\)[)show
177 234 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('])show
191 162 gm
(\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
191 171 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(.p\)[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
191 201 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
191 214 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(] = )show
191 233 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
191 239 gm
bu fc
2 F /|______Times-Roman fnt
bn
(y'. p[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
191 275 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
4 fs
5 ul
(x)show
0 fs
(\))show
191 287 gm
bu fc
2 F /|______Symbol fnt
bn
(\254)show
bu fc
2 F /|______Times-Roman fnt
bn
(y',)show
191 306 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('\\)show
191 316 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
191 325 gm
4 fs
5 ul
(x)show
0 fs
(\); )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
191 344 gm
bu fc
2 F /|______Times-Roman fnt
bn
(])show
191 378 gm
(y')show
191 385 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
(FV\(p\), y')show
bu fc
2 F /|______LicsPlain fnt
bn
(\355)show
bu fc
2 F /|______Times-Roman fnt
bn
([)show
191 435 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
191 446 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
191 464 gm
bu fc
2 F /|______Times-Roman fnt
bn
(])show
210 90 gm
(where  x )show
210 127 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\355 )show
210 135 gm
bu fc
2 F /|______Times-Roman fnt
bn
([)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
210 144 gm
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
210 167 gm
bu fc
2 F /|______Times-Roman fnt
bn
(]  )show
bu fc
2 F /|______Symbol fnt
bn
(\333)show
210 186 gm
bu fc
2 F /|______Times-Roman fnt
bn
(  x )show
bu fc
2 F /|______LicsPlain fnt
bn
(\355 )show
210 206 gm
bu fc
2 F /|______Times-Roman fnt
bn
(FV\()show
bu fc
2 F /|______Symbol fnt
bn
(p)show
210 228 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
210 239 gm
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('\))show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
210 278 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
210 295 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('\))show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
210 313 gm
bu fc
2 F /|______Times-Roman fnt
bn
(dom\()show
bu fc
2 F /|______Symbol fnt
bn
(r)show
210 340 gm
bu fc
2 F /|______Times-Roman fnt
bn
(\))show
bu fc
2 F /|______Symbol fnt
bn
(\310)show
210 351 gm
bu fc
2 F /|______Times-Roman fnt
bn
(rng\()show
210 368 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
(\).)show
224 108 gm
(In p[)show
bu fc
2 F /|______Symbol fnt
bn
(r)show
224 133 gm
bu fc
2 F /|______Times-Roman fnt
bn
(; )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
('; )show
224 151 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(], we use )show
bu fc
2 F /|______Symbol fnt
bn
(r)show
224 200 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.01251 0. 32 0.00125 0.( to rename the bound variables found in p, and we use )awidthshow
224 419 gm
bu fc
2 F /|______Symbol fnt
bn
(r)show
bu fc
2 F /|______Times-Roman fnt
bn
0.01068 0. 32 0.00106 0.(' to rename the variables)awidthshow
238 90 gm
(found in the range of )show
bu fc
2 F /|______Symbol fnt
bn
(p)show
238 182 gm
bu fc
2 F /|______Times-Roman fnt
bn
( that are placed in binding positions.)show
257 108 gm
(We now discuss these definitions and the reasons for their side-conditions.)show
271 108 gm
0.89538 0. 32 0.08953 0.(Although eventually we must obtain a )awidthshow
271 272 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.23143 0.(ground)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.75180 0. 32 0.07518 0.( pattern \(free of pattern variables\) for evaluation, we)awidthshow
285 90 gm
0.47607 0. 32 0.04760 0.(cannot require that every pattern instantiation immediately produces a ground pattern. This is because, in)awidthshow
299 90 gm
0.13839 0. 32 0.01383 0.(order to define new syntax extensions in terms of old ones, extended syntax may appear in actions. For ex)awidthshow
299 518 gm
(-)show
313 90 gm
0.11001 0. 32 0.01100 0.(ample, consider the syntax extensions and actions \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
([)show
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.03250 ul
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
0.08117 0. 32 0.00811 0.( "+" )awidthshow
313 338 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.02983 ul
(y)show
0 fs
bu fc
2 F /|______Courier fnt
bn
0.11932 0. 32 0.01193 0.(] => plus\()awidthshow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.02983 ul
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
0.03579 0.(\)\()ashow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.02983 ul
(y)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
0.05767 0. 32 0.00576 0.(\325 and \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
([)show
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.02983 ul
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09277 0. 32 0.00927 0.( "avg" )awidthshow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.02983 ul
(y)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(])show
327 90 gm
2.83355 0. 32 0.28335 0.(=> div\()awidthshow
327 137 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.74234 ul
0.74234 0.(y)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.89059 0.(+)ashow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.74234 ul
0.74234 0.(x)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.89059 0.(\)\(two\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
2.33612 0. 32 0.23361 0.(\325. When parsing the latter action we have a non-ground instantiation of)awidthshow
341 90 gm
0.05545 0.(\324)ashow
bu fc
2 F /|______Courier fnt
bn
0.09996 0.(div\()ashow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.08331 ul
0.08331 0.(y)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09994 0.(+)ashow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.08331 ul
0.08331 0.(x)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09994 0.(\)\(two\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.12451 0. 32 0.01245 0.(\325 to \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.09994 0.(div\(plus\()ashow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.08331 ul
0.08331 0.(y)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09996 0.(\)\()ashow
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5.08331 ul
0.08331 0.(x)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09994 0.(\)\)\(two\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.22521 0. 32 0.02252 0.(\325. Only later, when \324)awidthshow
341 393 gm
bu fc
2 F /|______Courier fnt
bn
0.78094 0. 32 0.07809 0.(one avg three)awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.37597 0. 32 0.03759 0.(\325 is met, we)awidthshow
355 90 gm
(obtain a ground pattern \324)show
355 189 gm
bu fc
2 F /|______Courier fnt
bn
(div\(plus\(tree\)\(one\)\)\(two\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
369 108 gm
0.13641 0. 32 0.01364 0.(However, we cannot allow arbitrary non-ground instantiations. Of course, we cannot replace a binding)awidthshow
383 90 gm
0.53955 0. 32 0.05395 0.(pattern variable with, for example, a )awidthshow
383 243 gm
bu fc
2 F /|______Symbol fnt
bn
0.17736 0.(l)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.51467 0. 32 0.05146 0.(-abstraction. But in addition, it seems we cannot replace a binding)awidthshow
397 90 gm
1.76177 0. 32 0.17617 0.(pattern variable with another pattern variable; otherwise we could write: \()awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
397 422 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(x)show
0 fs
(.)show
bu fc
2 F /|______Symbol fnt
bn
(l)show
397 435 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
5 ul
(y)show
0 fs
(.)show
4 fs
10 ul
(xy)show
0 fs
(\)[)show
397 459 gm
4 fs
5 ul
(x)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
397 474 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
4.43847 ul
(z)show
0 fs
(,)show
397 481 gm
4 fs
5 ul
(y)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
397 496 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
4.43847 ul
(z)show
0 fs
(,)show
397 503 gm
bu fc
2 F /|______Symbol fnt
bn
0.86941 0.(e)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.89270 0. 32 0.18927 0.(] =)awidthshow
411 90 gm
(\()show
bu fc
2 F /|______Symbol fnt
bn
(l)show
411 99 gm
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
4.43847 ul
(z)show
0 fs
(.)show
411 106 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
4 fs
bu fc
2 F /|______Times-Roman fnt
bn
4.43847 ul
(z)show
411 116 gm
0 fs
(.)show
4 fs
8.87695 ul
(zz)show
411 127 gm
0 fs
0.75546 0. 32 0.07554 0.(\), which causes a pattern-variable capture. This justifies the restriction \()awidthshow
411 427 gm
4 fs
5.15090 ul
0.15090 0.(x)ashow
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
0.15679 0.(\354)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.63385 0. 32 0.06338 0.(BPV\(p\) )awidthshow
411 472 gm
bu fc
2 F /|______Symbol fnt
bn
(\336)show
411 482 gm
bu fc
2 F /|______Times-Roman fnt
bn
( )show
411 486 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
(\()show
411 495 gm
4 fs
5.54100 ul
0.54100 0.(x)ashow
0 fs
0.84106 0. 32 0.08410 0.(\) is a)awidthshow
425 90 gm
0.05111 0. 32 0.00511 0.(variable y\) in the definition of p[)awidthshow
425 222 gm
bu fc
2 F /|______Symbol fnt
bn
(p)show
bu fc
2 F /|______Times-Roman fnt
bn
0.04669 0. 32 0.00466 0.(]. Note that binding pattern variables cannot be )awidthshow
bu fc
2 F /|______Symbol fnt
bn
(a)show
425 425 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.03784 0. 32 0.00378 0.(-converted because they)awidthshow
439 90 gm
(are \322visible from the outside\323.)show
453 108 gm
0.55007 0. 32 0.05500 0.(The informal idea that \322there are no variable captures\323 should be formalized by showing that the re)awidthshow
453 519 gm
(-)show
467 90 gm
0.38650 0. 32 0.03865 0.(naming or instantiation of )awidthshow
467 199 gm
bu fc
2 F /|______Symbol fnt
bn
0.10127 0.(a)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.32165 0. 32 0.03216 0.(-equivalent patterns produces )awidthshow
bu fc
2 F /|______Symbol fnt
bn
0.10127 0.(a)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.3125 0. 32 0.03125 0.(-equivalent patterns, and by deriving expected)awidthshow
481 90 gm
(properties of substitutions. We leave this for future work.)show
510 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(3.5. Related work on syntax extension)show
531 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.86074 0. 32 0.08607 0.(Griffin )awidthshow
531 140 gm
0.80062 0. 32 0.08006 0.([Griffin 1988] has enumerated desirable properties of notational definitions and has studied)awidthshow
545 90 gm
0.78109 0. 32 0.07810 0.(their formalization. Our distinction between normal )awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
545 314 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.78094 0. 32 0.07809 0.(\325s and pattern-)awidthshow
bu fc
2 F /|______Symbol fnt
bn
(l)show
545 380 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.96527 0. 32 0.09652 0.(\325s seems to remain implicit in his)awidthshow
559 90 gm
0.88882 0. 32 0.08888 0.(work. Unlike Griffin, who translates to combinator forms that then reduce to the desired programs, we)awidthshow
573 90 gm
0.20980 0. 32 0.02098 0.(synthesize those programs directly. \(Griffin would handle our \324)awidthshow
573 346 gm
bu fc
2 F /|______Courier fnt
bn
0.26519 0. 32 0.02651 0.(let x=a in b end)awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.24398 0. 32 0.02439 0.(\325 example by trans)awidthshow
573 519 gm
(-)show
587 90 gm
0.23925 0. 32 0.02392 0.(lating to \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.11441 0.(LET\()ashow
bu fc
2 F /|______Symbol fnt
bn
(l)show
587 160 gm
bu fc
2 F /|______Courier fnt
bn
0.10992 0.(x.b\)\(a\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.28991 0. 32 0.02899 0.(\325 for an appropriate combinator \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.10992 0.(LET)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.33294 0. 32 0.03329 0.(\325.\) Moreover, while Griffin discusses ab-)awidthshow
601 90 gm
0.38940 0. 32 0.03894 0.(stract translations, we provide a specific grammar definition technique and an efficient parsing algorithm.)awidthshow
615 90 gm
0.44097 0. 32 0.04409 0.(Parsing is efficient because it is LL\(1\) and because it avoids the creation of intermediate parse trees, pro)awidthshow
615 519 gm
(-)show
629 90 gm
(ducing directly abstract syntax trees that do not require normalization.)show
643 108 gm
0.54214 0. 32 0.05421 0.(Bove and Arbilla )awidthshow
643 182 gm
0.47866 0. 32 0.04786 0.([Bove, Arbilla 1992] discuss how to use explicit substitutions to implement syntax)awidthshow
657 90 gm
0.09963 0. 32 0.00996 0.(extensions. This is an elegant idea that we could perhaps have adopted, but we managed to work with ordi)awidthshow
657 518 gm
(-)show
671 90 gm
0.03997 0. 32 0.00399 0.(nary substitutions over de Bruijn indices. As in the previous case, their work does not describe a parsing al)awidthshow
671 518 gm
(-)show
685 90 gm
(gorithm, but is theoretically well developed.)show
F T cp
%%Page: ? 14
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(14)show
102 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.27542 0. 32 0.02754 0.(Some language implementations, like CAML and SML, integrate a YACC or similar parser generator)awidthshow
116 90 gm
0.09674 0. 32 0.00967 0.(that allows them to introduce new syntax )awidthshow
116 258 gm
0.07095 0. 32 0.00709 0.([Mauny, Rauglaudre 1992])awidthshow
116 367 gm
0.10696 0. 32 0.01069 0.(. If the new syntax is to be mixed with)awidthshow
130 90 gm
0.15747 0. 32 0.01574 0.(the old one, the new syntax must be quoted in some way. Instead, we can freely intermix new and old syn)awidthshow
130 518 gm
(-)show
144 90 gm
(tax without special quotations.)show
158 108 gm
0.78308 0. 32 0.07830 0.(Hygienic macros [Kohlbecker, )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.46020 0. 32 0.04602 0.(et al.)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.63400 0. 32 0.06340 0.( 1986])awidthshow
158 286 gm
0.81939 0. 32 0.08193 0.( share many of the same goals as our syntax extensions;)awidthshow
172 90 gm
0.14236 0. 32 0.01423 0.(however, these macros account only for macro calls and not for liberally introducing new syntax. Hygienic)awidthshow
186 90 gm
0.57098 0. 32 0.05709 0.(macros employ a multiple-pass time-stamping algorithm to prevent variable capture; this algorithm is, at)awidthshow
200 90 gm
-0.00585 0.(least operationally, different from our single-pass multiple-environment algorithm. We do not handle quota)ashow
200 519 gm
(-)show
214 90 gm
(tion and antiquotation in the style of Lisp.)show
228 108 gm
0.40069 0. 32 0.04006 0.(Finally, our syntax extension mechanism guarantees termination of parsing, even when our \322macros\323)awidthshow
242 90 gm
0.22994 0. 32 0.02299 0.(are recursively defined. This property does not hold for many macro mechanisms that are computationally)awidthshow
256 90 gm
(powerful.)show
288 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(4. Mock-modules and save-points)show
309 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.63125 0. 32 0.06312 0.(A crude modularization mechanism is provided as an aid to the interactive loading and reloading of)awidthshow
323 90 gm
(definitions. Separate compilation is not a goal.)show
337 108 gm
0.10284 0. 32 0.01028 0.(To facilitate loading and reloading the file, say, \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.04164 0.(One.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.12756 0. 32 0.01275 0.(\325 containing F-sub definitions, one should)awidthshow
351 90 gm
(start that file with the following phrase \(the module name must be the same as the file name\):)show
370 126 gm
bu fc
2 F /|______Courier fnt
bn
(module One;)show
389 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.30120 0. 32 0.03012 0.(If this file relies on definitions contained in files \324)awidthshow
389 293 gm
bu fc
2 F /|______Courier fnt
bn
0.07752 0.(Two.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.12496 0. 32 0.01249 0.(\325 and \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.07752 0.(Three.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.19104 0. 32 0.01910 0.(\325 \(which should in turn)awidthshow
403 90 gm
1.01043 0. 32 0.10104 0.(start with the lines \324)awidthshow
403 176 gm
bu fc
2 F /|______Courier fnt
bn
1.14532 0. 32 0.11453 0.(module Two;)awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.35232 0. 32 0.03523 0.(\325 and \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
1.29211 0. 32 0.12921 0.(module Three;)awidthshow
403 352 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.60287 0. 32 0.06028 0.(\325 respectively\) then \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.22653 0.(One.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.72189 0. 32 0.07218 0.(\325 should)awidthshow
417 90 gm
(start with the phrase :)show
436 126 gm
bu fc
2 F /|______Courier fnt
bn
(module One import Two Three;)show
455 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Then the variables defined inside )show
bu fc
2 F /|______Courier fnt
bn
(Two)show
bu fc
2 F /|______Times-Roman fnt
bn
( and )show
455 263 gm
bu fc
2 F /|______Courier fnt
bn
(Three)show
bu fc
2 F /|______Times-Roman fnt
bn
( become available within )show
bu fc
2 F /|______Courier fnt
bn
(One)show
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
469 108 gm
0.16265 0. 32 0.01626 0.(A )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.48736 0. 32 0.04873 0.(reload phrase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.25558 0. 32 0.02555 0.( can be issued at the top-level to load or to force reloading a module. \(\324)awidthshow
469 464 gm
bu fc
2 F /|______Courier fnt
bn
0.04420 0.(load)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.14205 0. 32 0.01420 0.(\325, which)awidthshow
483 90 gm
(was briefly discussed in section 2, will not reload a module that is already loaded.\):)show
502 126 gm
bu fc
2 F /|______Courier fnt
bn
(- reload One;)show
521 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.01510 0. 32 0.00151 0.(The meaning of \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.03158 0. 32 0.00315 0.(reload One;)awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.01144 0. 32 0.00114 0.(\325 is simply to read the Unix file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.00604 0.(./One.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.01434 0. 32 0.00143 0.(\325. A quoted string can)awidthshow
535 90 gm
(also be placed after \324)show
bu fc
2 F /|______Courier fnt
bn
(reload)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, in which case the indicated file name is used without modification.)show
549 108 gm
0.75500 0. 32 0.07550 0.(The intent of )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.25547 0.(re)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.86135 0. 32 0.08613 0.(loading a \(file containing a\) module, is to backtrack to the point in time when that)awidthshow
563 90 gm
0.98342 0. 32 0.09834 0.(module was first loaded. All the intervening top-level definitions \(including syntax extensions\) are re)awidthshow
563 518 gm
(-)show
577 90 gm
0.29541 0. 32 0.02954 0.(tracted. When reloading a module, only the imported modules that are not already present are reloaded; in)awidthshow
591 90 gm
(particular, a module imported through two different import paths is loaded once.)show
610 108 gm
0.29327 0. 32 0.02932 0.(The precise behavior of this module mechanism is now described in terms of some lower-level primi)awidthshow
610 519 gm
(-)show
624 90 gm
-0.00946 0.(tives that handle )ashow
624 158 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
-0.00788 0.(save-points)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
-0.00769 0.(. In contrast to module phrases, which are mostly useful when used within files,)ashow
638 90 gm
0.02151 0. 32 0.00215 0.(save-points may be useful also when interacting at the top-level. For example, they are available even when)awidthshow
652 90 gm
(the top-level syntax has been clobbered by the syntax extension mechanism.)show
666 108 gm
(A )show
666 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(save-point )show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(is a record of the complete state of the system at a given point in time.)show
685 126 gm
bu fc
2 F /|______Courier fnt
bn
(- save that;)show
F T cp
%%Page: ? 15
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(15)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.48736 0. 32 0.04873 0.(This phrase creates a save-point called, in this case, \324)awidthshow
102 309 gm
bu fc
2 F /|______Courier fnt
bn
0.21025 0.(that)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.46142 0. 32 0.04614 0.(\325, recording the state of the system at the mo)awidthshow
102 518 gm
(-)show
116 90 gm
(ment it is issued. Named save-points are stacked.)show
130 108 gm
(Later, one can issue the phrase:)show
149 126 gm
bu fc
2 F /|______Courier fnt
bn
(- restore that;)show
168 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.07156 0. 32 0.00715 0.(which resets the system back to \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.03021 0.(that)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.08483 0. 32 0.00848 0.(\325 save-point, possibly obliterating top-level definitions as well as in)awidthshow
168 518 gm
(-)show
182 90 gm
(tervening save-points with different names. The save-point \324)show
182 332 gm
bu fc
2 F /|______Courier fnt
bn
(that)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 is, however, maintained.)show
196 108 gm
(A special save-point exists in the beginning; the phrase:)show
215 126 gm
bu fc
2 F /|______Courier fnt
bn
(- restore;)show
234 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(restores the system to its initial condition just after start-up.)show
253 126 gm
bu fc
2 F /|______Courier fnt
bn
(- establish that;)show
272 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
1.62155 0. 32 0.16215 0.(This phrase is equivalent to \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.67201 0.(save\312that;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.42181 0. 32 0.14218 0.(\325, if a save-point called \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.67201 0.(that)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.38946 0. 32 0.13894 0.(\325 does not exist, and to)awidthshow
286 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(restore that;)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, if a save-point called \324)show
286 269 gm
bu fc
2 F /|______Courier fnt
bn
(that)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 does exist.)show
305 126 gm
bu fc
2 F /|______Courier fnt
bn
(- load that;)show
324 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.43548 0. 32 0.04354 0.(This is equivalent to \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18873 0.(reload\312that;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.39291 0. 32 0.03929 0.(\325 \(that is, just reading the file\) if a save-point called \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18873 0.(that)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.50674 0. 32 0.05067 0.(\325 does)awidthshow
338 90 gm
(not exist, but is a no-op if a save-point called \324)show
338 276 gm
bu fc
2 F /|______Courier fnt
bn
(that)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 already exists.)show
357 108 gm
(We can now describe the precise meaning of \324)show
357 293 gm
bu fc
2 F /|______Courier fnt
bn
(module)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 phrases. A module of the form:)show
376 126 gm
bu fc
2 F /|______Courier fnt
bn
(module One import Two Three; ...)show
395 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(is simply treated as the sequence:)show
414 126 gm
bu fc
2 F /|______Courier fnt
bn
(load Two; load Three; establish One; ...)show
433 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.31173 0. 32 0.03117 0.(where the \324)awidthshow
433 136 gm
bu fc
2 F /|______Courier fnt
bn
0.08869 0.(load)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.25802 0. 32 0.02580 0.(\325 phrases may end up establishing the corresponding modules because of module phrases)awidthshow
447 90 gm
(in the loaded files.)show
479 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(5. Top-level phrases)show
500 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
-0.00534 0.(The top-level phrases fall into several classes. We have described mock-modules, save-points and load)ashow
500 519 gm
(-)show
514 90 gm
0.05966 0. 32 0.00596 0.(ing in Section 4. We now expand on the definition and evaluation phrases sketched in Section 2. Moreover,)awidthshow
528 90 gm
(we discuss judgment phrases and command phrases.)show
542 108 gm
0.51025 0. 32 0.05102 0.(All the phrases that involve types or terms are elaborated as follows. The )awidthshow
542 413 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.55358 0. 32 0.05535 0.(parsing phase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.36407 0. 32 0.03640 0.( expands the)awidthshow
556 90 gm
0.01770 0. 32 0.00177 0.(syntax extensions. Then, a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.02838 0. 32 0.00283 0.(scoping phase)awidthshow
556 255 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02075 0. 32 0.00207 0.( expands type definitions, converts identifiers to de Bruijn indices,)awidthshow
570 90 gm
0.28930 0. 32 0.02893 0.(and detects unbound identifiers. Next, a )awidthshow
570 255 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.42205 0. 32 0.04220 0.(checking phase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.25375 0. 32 0.02537 0.( verifies the typing correctness of types and terms.)awidthshow
584 90 gm
0.10360 0. 32 0.01036 0.(Then, an )awidthshow
584 128 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.12573 0. 32 0.01257 0.(evaluation phase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.06988 0. 32 0.00698 0.( normalizes terms. Finally, a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11627 0. 32 0.01162 0.(printing phase)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07186 0. 32 0.00718 0.( prints the results; identifiers with the)awidthshow
598 90 gm
0.07675 0. 32 0.00767 0.(same name but different de Bruijn indices are decorated in different ways. If an error occurs in one of these)awidthshow
612 90 gm
(phases, the file name \(if any\) and the line position of the error is reported.)show
626 108 gm
(Each phrase is elaborated in the context of the previous top-level phrases.)show
640 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
640 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A )show
640 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type definition phrase)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
659 126 gm
bu fc
2 F /|______Courier fnt
bn
(- Let )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
659 173 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
659 196 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( = )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
659 225 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
( ... )show
659 238 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
659 249 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
659 272 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( = )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
659 301 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(;)show
F T cp
%%Page: ? 16
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(16)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.45242 0. 32 0.04524 0.(where the bounds \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.17062 0.(<:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.17060 0.(A)ashow
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
102 190 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.62774 0. 32 0.06277 0.(\325 can be omitted, with \324)awidthshow
102 288 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
102 297 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.53207 0. 32 0.05320 0.(\325 defaulting to \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.24008 0.(Top)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.48797 0. 32 0.04879 0.(\325. Each \324)awidthshow
102 416 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.24365 0.(A)ashow
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.17701 0.(i+1)ashow
0 -3 rm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.40771 0. 32 0.04077 0.(\325 and \324)awidthshow
102 463 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.29179 0.(B)ashow
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
0.21199 0.(i+1)ashow
0 -3 rm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.45593 0. 32 0.04559 0.(\325 is in the)awidthshow
116 90 gm
(scope of \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
116 140 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 ... \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
116 168 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
-0.00318 0.(\325 and of all the previous top-level definitions. Type definitions are fully expanded before)ashow
130 90 gm
(typechecking.)show
144 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
144 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A )show
144 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term definition phrase)show
144 207 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
163 126 gm
bu fc
2 F /|______Courier fnt
bn
(- let )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
163 173 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
163 190 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( = )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
163 219 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
( ... )show
163 232 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
163 243 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
163 260 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( = )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(n)show
163 289 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
(;)show
182 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
-0.00320 0.(where the domains \324)ashow
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
182 186 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
-0.00462 0.(\325 can be omitted, with \324)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
182 288 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
-0.00448 0.(\325 being inferred from \324)ashow
182 378 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
182 387 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325. Each \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i+1)show
0 -3 rm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 and \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i+1)show
0 -3 rm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 is in the)show
196 90 gm
(scope of \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(1)show
196 140 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 ... \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 3 rm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
196 168 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(\325 and in the scope of all the previous top-level definitions.)show
210 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
210 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A )show
210 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type phrase)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
229 126 gm
bu fc
2 F /|______Courier fnt
bn
(- :)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
248 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(which results in checking the type \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 with respect to the current top-level definitions.)show
262 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
262 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A )show
262 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term phrase)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
281 126 gm
bu fc
2 F /|______Courier fnt
bn
(- )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
300 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(which results in checking and evaluating the term \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\325 with respect to the current top-level definitions.)show
319 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
319 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.07873 0. 32 0.00787 0.(An )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.03477 0.(environment)ashow
319 173 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
319 176 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.41183 0. 32 0.04118 0.(E )awidthshow
319 189 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.29937 0. 32 0.02993 0.(\(often called also a  )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11007 0.(context)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.18737 0. 32 0.01873 0.( or an )awidthshow
319 327 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(assignment)show
319 372 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.30014 0. 32 0.03001 0.(\) is a possibly empty sequence of ei)awidthshow
319 518 gm
(-)show
333 90 gm
0.19561 0. 32 0.01956 0.(ther type variables with a bound \(\324)awidthshow
333 230 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.07606 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.07606 0.(<:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.07606 0.(A)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.17440 0. 32 0.01744 0.(\325\) or term variables with a domain \(\324)awidthshow
333 402 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.07780 0.(x)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.07780 0.(:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.07780 0.(A)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.17150 0. 32 0.01715 0.(\325\). Each variable is in the)awidthshow
347 90 gm
(scope of the environment to its left and in the scope of the top-level definitions.)show
361 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
361 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.18127 0. 32 0.01812 0.(A )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.10412 0.(judgment)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.33554 0. 32 0.03355 0.( is one of the four formal statements axiomatized in Appendix D, each involving an envi)awidthshow
361 518 gm
(-)show
375 90 gm
(ronment. Each of the four statements has a corresponding phrase, as follows.)show
389 108 gm
(An )show
389 123 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(environment judgment phrase)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
408 126 gm
bu fc
2 F /|______Courier fnt
bn
(- judge env )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
427 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.01434 0. 32 0.00143 0.(where the environment \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.01129 0. 32 0.00112 0.(\325 is in the scope of the previous top-level definitions \(and similarly for the follow)awidthshow
427 519 gm
(-)show
441 90 gm
(ing judgments\).)show
455 108 gm
(A )show
455 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(type judgment phrase)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
474 126 gm
bu fc
2 F /|______Courier fnt
bn
(- judge type )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E )show
0 fs
bu fc
2 F /|______Courier fnt
bn
(|- )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
493 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A )show
493 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(subtype judgment phrase)show
493 218 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
512 126 gm
bu fc
2 F /|______Courier fnt
bn
(- judge subtype )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E )show
0 fs
bu fc
2 F /|______Courier fnt
bn
(|- )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
531 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Finally, a )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term judgment phrase)show
531 236 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( has the form:)show
550 126 gm
bu fc
2 F /|______Courier fnt
bn
(- judge term )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E )show
0 fs
bu fc
2 F /|______Courier fnt
bn
(|- )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
569 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.11672 0. 32 0.01167 0.(If the correctness of one of these judgments is established, a simple \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.04859 0.(ok)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.10711 0. 32 0.01071 0.(\325 is printed. It is informative to)awidthshow
583 90 gm
(turn on tracing \(as described below\) when elaborating judgments.)show
602 90 gm
bu fc
2 F /|______LicsPlain fnt
bn
(\242)show
602 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A )show
602 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(command phrase)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( )show
bu fc
2 F /|______Times-Roman fnt
bn
(is used to switch on and off various options. It has the form:)show
621 126 gm
bu fc
2 F /|______Courier fnt
bn
(- do )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(command)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(argument)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
640 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(One can get a list of all the available commands by writing:)show
659 126 gm
bu fc
2 F /|______Courier fnt
bn
(- do;)show
678 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(and one can find out about an individual command by writing:)show
697 126 gm
bu fc
2 F /|______Courier fnt
bn
(- do )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(command)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(;)show
F T cp
%%Page: ? 17
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(17)show
107 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(The command \324)show
bu fc
2 F /|______Courier fnt
bn
(do\312Version;)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 prints the current version of the system.)show
121 108 gm
0.69091 0. 32 0.06909 0.(After issuing the command \324)awidthshow
121 227 gm
bu fc
2 F /|______Courier fnt
bn
0.19221 0.(do\312ShowParsing\312On;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.45120 0. 32 0.04512 0.(\325 the result of parsing each phrase is printed.)awidthshow
135 90 gm
(This is useful for debugging syntax extensions.)show
149 108 gm
0.06530 0. 32 0.00653 0.(After issuing the command \324)awidthshow
149 223 gm
bu fc
2 F /|______Courier fnt
bn
0.01794 0.(do\312ShowVarIndex\312On;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.04333 0. 32 0.00433 0.(\325 the de Bruijn indices of variables are printed)awidthshow
163 90 gm
(along with the variables.)show
177 108 gm
0.30975 0. 32 0.03097 0.(The command \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.09683 0.(do\312QuantifierSubtyping\312)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.09683 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09683 0.(;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.27374 0. 32 0.02737 0.(\325 switches between the undecidable )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.13064 0.(F<:)ashow
177 488 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.61187 0. 32 0.06118 0.( rule for)awidthshow
191 90 gm
3.09066 0. 32 0.30906 0.(quantifier subtyping \()awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.89874 0.(X)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.72463 0. 32 0.07246 0.( = )awidthshow
191 209 gm
bu fc
2 F /|______Courier fnt
bn
0.63000 0.(LeastBound)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.76193 0. 32 0.17619 0.(\), the decidable Fun rule [Cardelli, Wegner 1985])awidthshow
191 494 gm
3.51654 0. 32 0.35165 0.( \()awidthshow
191 504 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
1.64178 0.(X)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
2.02529 0. 32 0.20252 0.( =)awidthshow
205 90 gm
bu fc
2 F /|______Courier fnt
bn
(EqualBounds)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) and a decidable rule proposed by Giuseppe Castagna \()show
205 379 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( = )show
205 396 gm
bu fc
2 F /|______Courier fnt
bn
(TopBound)show
bu fc
2 F /|______Times-Roman fnt
bn
(\).)show
219 108 gm
0.51712 0. 32 0.05171 0.(After issuing the command \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18168 0.(do\312TraceType\312On;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.30746 0. 32 0.03074 0.(\325, each call to the )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.16815 0.(type)ashow
219 415 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.67596 0. 32 0.06759 0.( routine of Appendix E is)awidthshow
233 90 gm
0.32913 0. 32 0.03291 0.(traced. Similarly,  \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.12997 0.(do\312TraceSubtype\312On;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.21743 0. 32 0.02174 0.(\325 and \324)awidthshow
233 312 gm
bu fc
2 F /|______Courier fnt
bn
0.13024 0.(do\312TraceTerm\312On;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.28610 0. 32 0.02861 0.(\325 correspond to the )awidthshow
233 490 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(sub)show
233 504 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.72067 0. 32 0.07206 0.( and)awidthshow
247 90 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(term)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( routines.)show
261 108 gm
(Some other commands are used for system debugging and are not documented here.)show
293 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(6. Type inference by \322argument synthesis\323)show
314 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.61691 0. 32 0.06169 0.(In pure F-sub one has to write down an often overwhelming amount of type information. This is al)awidthshow
314 519 gm
(-)show
328 90 gm
0.43624 0. 32 0.04362 0.(ready evident when encoding something as simple as pairing constructs. For example, through syntax ex)awidthshow
328 519 gm
(-)show
342 90 gm
0.56655 0. 32 0.05665 0.(tensions we can define a cartesian product operator \324)awidthshow
342 308 gm
bu fc
2 F /|______Courier fnt
bn
0.29609 0.(A*B)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.39459 0. 32 0.03945 0.(\325 as \324)awidthshow
342 348 gm
bu fc
2 F /|______Courier fnt
bn
0.06617 0.(All\(C\){A->B->C}->C)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.20721 0. 32 0.02072 0.(\325 \(see Appendix)awidthshow
356 90 gm
(A\), along with the operations:)show
375 126 gm
bu fc
2 F /|______Courier fnt
bn
(pair: All\(A\)All\(B\)A->B->A*B)show
389 126 gm
(fst: All\(A\)All\(B\)A*B->A)show
403 126 gm
(snd: All\(A\)All\(B\)A*B->B)show
422 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(To create and manipulate simple pairs we have to write, for example;)show
441 126 gm
bu fc
2 F /|______Courier fnt
bn
(- let a = pair\(Bool\)\(Top\)\(true\)\(top\);   \(* the pair \(true,top\) *\))show
455 126 gm
(- fst\(Bool\)\(Top\)\(a\); )show
455 306 gm
(\(* the first component of pair a *\))show
474 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(A triple is already quite a challenge:)show
493 126 gm
bu fc
2 F /|______Courier fnt
bn
(- pair\(Bool\)\(Top*Bool\)\(true\)\()show
507 126 gm
(    pair\(Top\)\(Bool\)\(top\)\(false\)\); \(* the triple \(true,top,false\)*\))show
526 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.01251 0. 32 0.00125 0.(What is worse, we cannot even define a syntax extension of the form, for example, \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.01342 0. 32 0.00134 0.(\325 for pairs, because)awidthshow
540 90 gm
(the type arguments must be provided somehow.)show
559 108 gm
0.50460 0. 32 0.05046 0.(Fortunately, a form of type inference is available. To enable it, we append question marks \324)awidthshow
559 486 gm
bu fc
2 F /|______Courier fnt
bn
0.28355 0.(?)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.49591 0. 32 0.04959 0.(\325 to the)awidthshow
573 90 gm
0.30700 0. 32 0.03070 0.(type parameters that we would like to omit \(loosely following )awidthshow
573 345 gm
0.21499 0. 32 0.02149 0.([Pollack 1990])awidthshow
573 405 gm
0.29495 0. 32 0.02949 0.(\). For example, the polymor-)awidthshow
587 90 gm
(phic identity could be written:)show
606 126 gm
bu fc
2 F /|______Courier fnt
bn
(- Let Id = All\(X?\)X->X;)show
620 126 gm
(- let id: Id = fun\(X?\)fun\(x:X\)x;)show
639 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Then, the type arguments corresponding to question-mark parameters must be omitted:)show
658 126 gm
bu fc
2 F /|______Courier fnt
bn
(- id\(top\);  \(* instead of  id\(:Top\)\(top\) *\))show
672 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
672 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(top : Top)show
F T cp
%%Page: ? 18
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(18)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.20797 0. 32 0.02079 0.(In this situation, we say that the type parameter \324)awidthshow
102 288 gm
bu fc
2 F /|______Courier fnt
bn
0.14700 0.(X)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.18829 0. 32 0.01882 0.(\325 of \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.14700 0.(Id)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.15304 0. 32 0.01530 0.(\325 is )awidthshow
102 342 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(stripped)show
102 375 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.20431 0. 32 0.02043 0.(, to compensate for the missing type)awidthshow
116 90 gm
(argument, and that the argument is later )show
116 252 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(synthesized)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
130 108 gm
0.11108 0. 32 0.01110 0.(A type quantifier is stripped by introducing a fresh )awidthshow
130 315 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.15777 0. 32 0.01577 0.(unification variable)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.08132 0. 32 0.00813 0.( that may be instatiated later, or)awidthshow
144 90 gm
(never; a unification algorithm is responsible for the synthesis of the argument. Type parameters are stripped)show
158 90 gm
0.09277 0. 32 0.00927 0.(if and only if they appear at the beginning of the type of a term identifier \(that is, not an arbitrary term\): we)awidthshow
172 90 gm
0.01098 0. 32 0.00109 0.(found this restriction useful both for the inference algorithm and in understanding how inference behaves in)awidthshow
186 90 gm
0.76095 0. 32 0.07609 0.(actual programs. Here is a situation where stripping occurs, and a unification variable is ex)awidthshow
186 471 gm
0.81344 0. 32 0.08134 0.(posed in the)awidthshow
200 90 gm
(printed result:)show
219 126 gm
bu fc
2 F /|______Courier fnt
bn
(- id;)show
233 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
233 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
({fun\(x:X?\)x} : {X?->X?})show
252 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(If needed, we can prevent stripping by placing an exclamation mark after a term identifier:)show
271 126 gm
bu fc
2 F /|______Courier fnt
bn
(- id!;)show
285 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
285 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(<id> : <Id>)show
304 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.13793 0. 32 0.01379 0.(This option is useful, for example, if we want to pass the \(unstripped\) polymorphic identity as an argu)awidthshow
304 502 gm
(ment)show
318 90 gm
(to an)show
318 110 gm
(other term.)show
332 108 gm
(Going back to pairs, we can now rewrite our primitives so that they admit type inference:)show
351 126 gm
bu fc
2 F /|______Courier fnt
bn
(pair: All\(A?\)All\(B?\)A->B->A*B)show
365 126 gm
(fst: All\(A?\)All\(B?\)A*B->A)show
379 126 gm
(snd: All\(A?\)All\(B?\)A*B->B)show
398 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
(This allows us to write triples a bit more compactly, by omitting the type arguments:)show
417 126 gm
bu fc
2 F /|______Courier fnt
bn
(- pair\(true\)\(pair\(top\)\(false\)\); \(* the triple \(true,top,false\) *\))show
436 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.47668 0. 32 0.04766 0.(But, what is more important, we can now put syntax extensions to work and define a simple \324)awidthshow
436 476 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.10726 0.(a)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.10726 0.(,)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.10726 0.(b)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.27481 0. 32 0.02748 0.(\325 nota)awidthshow
436 518 gm
(-)show
450 90 gm
(tion:)show
469 126 gm
bu fc
2 F /|______Courier fnt
bn
(- syntax)show
483 126 gm
(    termOper ::= ... *_1)show
497 126 gm
(      [ "," termOper_2 ] => pair\(_1\)\(_2\);)show
516 126 gm
(- true,top,false; )show
516 324 gm
(\(* the triple \(true,top,false\) *\))show
535 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.05859 0. 32 0.00585 0.(We are finally able to write pairs in a convenient notation, by the interplay of type inference and syntax ex)awidthshow
535 518 gm
(-)show
549 90 gm
(tensions.)show
568 108 gm
0.46356 0. 32 0.04635 0.(We conclude this section with some general remarks about this form of type inference; details of the)awidthshow
582 90 gm
(algorithm are in Appendix F.)show
596 108 gm
0.88134 0. 32 0.08813 0.(The types \324)awidthshow
596 156 gm
bu fc
2 F /|______Courier fnt
bn
0.17326 0.(All\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.17326 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.17326 0.(?<:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.17326 0.(A)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.17326 0.(\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.17326 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.28991 0. 32 0.02899 0.(\325 and \324)awidthshow
596 251 gm
bu fc
2 F /|______Courier fnt
bn
0.18150 0.(All\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.18150 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.18150 0.(<:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.18150 0.(A)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.18150 0.(\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.18150 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.43731 0. 32 0.04373 0.(\325 are incomparable. A type \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18150 0.(All\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.18150 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.18150 0.(?<:Top\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.18150 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.29083 0. 32 0.02908 0.(\325 is)awidthshow
610 90 gm
0.25741 0. 32 0.02574 0.(stripped to \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.10543 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.22644 0. 32 0.02264 0.(\325 where \324)awidthshow
610 182 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.09281 0.(X)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.20736 0. 32 0.02073 0.(\325 is treated as a fresh unification variable. Instead, a type \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.09281 0.(All\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.09281 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09281 0.(?<:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.09281 0.(A)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09281 0.(\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.09281 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.17501 0. 32 0.01750 0.(\325 with a)awidthshow
624 90 gm
(non-\324)show
624 112 gm
bu fc
2 F /|______Courier fnt
bn
(Top)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 bound is stripped simply to \324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
({)show
624 261 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\254)show
624 277 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(}\325.)show
638 108 gm
0.03875 0. 32 0.00387 0.(When an occurrence of \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02746 0. 32 0.00274 0.(\325 bound by an \324)awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(?)show
bu fc
2 F /|______Times-Roman fnt
bn
0.03585 0. 32 0.00358 0.(\325 appears nested within other quantifiers, it must not be in)awidthshow
638 518 gm
(-)show
652 90 gm
0.58410 0. 32 0.05841 0.(stantiated in a way that will cause variable captures. To this end, we used )awidthshow
652 398 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.44860 0. 32 0.04486 0.(first-order unification under a)awidthshow
666 90 gm
0.10070 0. 32 0.01007 0.(mixed prefix)awidthshow
666 140 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
666 143 gm
0.12542 0. 32 0.01254 0.([Miller \(to appear\)]. For a practical example of where this matters, see the Existentials section)awidthshow
680 90 gm
0.50399 0. 32 0.05039 0.(in Appendix A. As an ad-hoc example, consider the following term where a type parameter is omitted in)awidthshow
694 90 gm
(the application of )show
bu fc
2 F /|______Courier fnt
bn
(f)show
bu fc
2 F /|______Times-Roman fnt
bn
(:)show
F T cp
%%Page: ? 19
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(19)show
102 126 gm
10 fz
bu fc
2 F /|______Courier fnt
bn
(- fun\(f:All\(Y?\){All\(W\)W->Y}->Y\) f\(fun\(Z\)fun\(z:Z\)z\);)show
121 126 gm
8 fs
7 fz
bu fc
2 F /|______ZapfDingbats vo
bn
(\345)show
121 133 gm
0 fs
10 fz
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(Type error. Type inference rank check: instantiation type for)show
135 144 gm
(Y? contains a \(different\) variable Z that is bound deeper)show
149 144 gm
(than the Y? binder:)show
163 162 gm
(Z\(=W\)  \(last input line, char 46\))show
177 144 gm
(Error detected \(last input line, char 51\))show
196 90 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
1.11618 0. 32 0.11161 0.(If ordinary unification is used instead of mixed-prefix unification, we match )awidthshow
bu fc
2 F /|______Courier fnt
bn
0.40986 0.(All\(W\)W->Y?)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.23886 0. 32 0.12388 0.( against)awidthshow
210 90 gm
bu fc
2 F /|______Courier fnt
bn
(All\(Z\)Z->Z)show
bu fc
2 F /|______Times-Roman fnt
bn
(, causing the unification of )show
bu fc
2 F /|______Courier fnt
bn
(Y?)show
bu fc
2 F /|______Times-Roman fnt
bn
( with )show
210 294 gm
bu fc
2 F /|______Courier fnt
bn
(Z)show
bu fc
2 F /|______Times-Roman fnt
bn
(. Hence the whole term above acquires the type:)show
229 126 gm
bu fc
2 F /|______Courier fnt
bn
({All\(Y?\){All\(W\)W->Y}->Y} -> Z)show
248 90 gm
bu fc
2 F /|______Times-Roman fnt
bn
1.11892 0. 32 0.11189 0.(where the final )awidthshow
bu fc
2 F /|______Courier fnt
bn
0.49426 0.(Z)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.05010 0. 32 0.10501 0.( \(which is unified with )awidthshow
248 265 gm
bu fc
2 F /|______Courier fnt
bn
0.41563 0.(Y)ashow
bu fc
2 F /|______Times-Roman fnt
bn
1.04629 0. 32 0.10462 0.(\) has escaped its scope and remains unbound. We can then)awidthshow
262 90 gm
(provide the following argument for the term above, obtaining a term that has the escaped Z as its type:)show
281 126 gm
bu fc
2 F /|______Courier fnt
bn
(fun\(Y?\)fun\(g:All\(W\)W->Y\)g\(Top\)\(top\))show
300 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.09552 0. 32 0.00955 0.(After typechecking an entire top-level phrase, some of the unification variables used for type inference)awidthshow
314 90 gm
0.18905 0. 32 0.01890 0.(may remain undetermined. We choose to tolerate this situation in term-phrases \(\324)awidthshow
314 418 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.09838 0.(a)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.09838 0.(;)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.19851 0. 32 0.01985 0.(\325\), but we report an er)awidthshow
314 519 gm
(-)show
328 90 gm
(ror in term-definition-phrases \(\324)show
bu fc
2 F /|______Courier fnt
bn
(let)show
bu fc
2 F /|______Times-Roman fnt
bn
(...)show
328 243 gm
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325\).)show
342 108 gm
0.14602 0. 32 0.01460 0.(We believe that our type inference algorithm is essentially the same as the one used in LEGO [Pollack)awidthshow
356 90 gm
0.92285 0. 32 0.09228 0.(1990] and a first-order version of the one used in ELF [Pfenning 1989])awidthshow
356 391 gm
0.91995 0. 32 0.09199 0.( \(although we have no detailed)awidthshow
370 90 gm
0.26031 0. 32 0.02603 0.(knowledge of those implementations\). We believe the algorithm is sound, but is not complete, particularly)awidthshow
384 90 gm
0.25375 0. 32 0.02537 0.(because we are using unification in a subtyping context. As a heuristic, this inference algorithm works ex)awidthshow
384 518 gm
(-)show
398 90 gm
(ceedingly well.)show
430 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(7. Recursion)show
451 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.40618 0. 32 0.04061 0.(In this section we describe an extension of F-sub with recursive types and recursive values. The inte)awidthshow
451 519 gm
(-)show
465 90 gm
0.16525 0. 32 0.01652 0.(gration of recursion with subtyping in a first-order system is studied in [Amadio, Cardelli 1991]. The ideas)awidthshow
479 90 gm
0.38619 0. 32 0.03861 0.(described there should work in a second-order system such as )awidthshow
479 346 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.15945 0.(F<:)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.38482 0. 32 0.03848 0.( . However, here we take a simpler ap)awidthshow
479 518 gm
(-)show
493 90 gm
0.42129 0. 32 0.04212 0.(proach to recursive types, to minimize their interference with second-order types and type inference tech)awidthshow
493 519 gm
(-)show
507 90 gm
(niques.)show
521 108 gm
1.68838 0. 32 0.16883 0.(The main idea is that the isomorphism between a recursive type \324)awidthshow
521 398 gm
bu fc
2 F /|______Courier fnt
bn
0.41390 0.(Rec\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.41389 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.41389 0.(\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.41389 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
1.05789 0. 32 0.10578 0.(\325 and its unfolding)awidthshow
535 90 gm
(\324)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
({)show
535 104 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
bu fc
2 T /|______Symbol fnt
bn
(\254)show
535 120 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(Rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(}\325 is made explicit in the syntax of terms. In first approximation, we have:)show
554 126 gm
bu fc
2 F /|______Courier fnt
bn
(unfold : Rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
554 225 gm
bu fc
2 F /|______Courier fnt
bn
(->)show
bu fc
2 F /|______Times-Roman fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
({)show
554 250 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
bu fc
2 T /|______Symbol fnt
bn
(\254)show
554 266 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(Rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(})show
568 126 gm
bu fc
2 F /|______Courier fnt
bn
(fold   : )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
({)show
568 191 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
bu fc
2 T /|______Symbol fnt
bn
(\254)show
568 207 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(Rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(} )show
bu fc
2 F /|______Courier fnt
bn
(->)show
bu fc
2 F /|______Times-Roman fnt
bn
( )show
568 271 gm
bu fc
2 F /|______Courier fnt
bn
(Rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
587 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(More precisely, we extend the syntax of F-sub as follows:)show
606 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( ::=)show
606 180 gm
(...)show
606 234 gm
bu fc
2 F /|______Times-Roman fnt
bn
(types as before, plus:)show
620 144 gm
bu fc
2 F /|______Courier fnt
bn
(Rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
620 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(recursive types)show
639 126 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( ::=)show
639 180 gm
(...)show
639 234 gm
bu fc
2 F /|______Times-Roman fnt
bn
(terms as before, plus:)show
653 144 gm
bu fc
2 F /|______Courier fnt
bn
(fold\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\)\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
653 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(fold )show
653 271 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( into an element of the recursive type )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
667 144 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(unfold\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
667 252 gm
bu fc
2 F /|______Times-Roman fnt
bn
(unfold an element )show
667 327 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( of a recursive type)show
681 144 gm
bu fc
2 F /|______Courier fnt
bn
(rec\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(x)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
681 252 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(recursive terms)show
F T cp
%%Page: ? 20
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(20)show
102 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.24993 0. 32 0.02499 0.(Since the isomorphism is explicit, we do )awidthshow
102 276 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.08364 0.(not)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.20553 0. 32 0.02055 0.( have \324)awidthshow
102 316 gm
bu fc
2 F /|______Courier fnt
bn
0.08045 0.(Rec\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.08045 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.08045 0.(\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.08045 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.09658 0. 32 0.00965 0.(\325 = \324)awidthshow
102 377 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
({)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(X)show
bu fc
2 T /|______Symbol fnt
bn
(\254)show
102 403 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
0.06059 0.(Rec\()ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.06059 0.(X)ashow
0 fs
bu fc
2 F /|______Courier fnt
bn
0.06059 0.(\))ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.06059 0.(B)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.15579 0. 32 0.01557 0.(}\325. Instead, two re-)awidthshow
116 90 gm
0.33874 0. 32 0.03387 0.(cursive types are equal only if their respective \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.13912 0.(Rec)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.40649 0. 32 0.04064 0.(\325 binders are found in corresponding positions. Given)awidthshow
130 90 gm
(this restriction, the recursive subtyping algorithm becomes much simpler \(while remaining non-trivial\). The)show
144 90 gm
0.53573 0. 32 0.05357 0.(central type rule for recursive subtyping is unchanged, but the auxiliary judgment and rules having to do)awidthshow
158 90 gm
0.41442 0. 32 0.04144 0.(with type equality )awidthshow
158 167 gm
9 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.37536 0. 32 0.03753 0.([Amadio, Cardelli 1991] )awidthshow
158 260 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.40924 0. 32 0.04092 0.(are dropped. The type rules and algorithms are described in Ap-)awidthshow
172 90 gm
(pendix G.)show
191 108 gm
0.22796 0. 32 0.02279 0.(As a simple use of recursive types, let us define the type of untyped lambda-terms, and some standard)awidthshow
205 90 gm
(combinators.)show
224 126 gm
bu fc
2 F /|______Courier fnt
bn
(Let V = Rec\(V\) V->V;)show
243 126 gm
(let lam: {V->V}->V = fun\(f:V->V\) fold\(:V\)\(f\))show
257 126 gm
(    app: V->{V->V} = fun\(f:V\) fun\(a:V\) unfold\(f\)\(a\);)show
276 126 gm
(let i: V = lam\(fun\(x:V\)x\))show
290 126 gm
(    k: V = lam\(fun\(x:V\) lam\(fun\(y:V\) x\)\))show
304 126 gm
(    s: V = lam\(fun\(x:V\) lam\(fun\(y:V\) lam\(fun\(z:V\))show
318 126 gm
(             app\(app\(x\)\(z\)\)\(app\(y\)\(z\)\)\)\)\);)show
332 126 gm
(let y: V = rec\(y:V\) lam\(fun\(f:V\) app\(f\)\(app\(y\)\(f\)\)\);)show
351 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
(With a bit of syntax extension one can eliminate the \324)show
351 322 gm
bu fc
2 F /|______Courier fnt
bn
(lam)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 and \324)show
bu fc
2 F /|______Courier fnt
bn
(app)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 clutter \(see Appendix A\).)show
F T cp
%%Page: ? 21
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(21)show
120 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendices)show
156 90 gm
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix A. Examples)show
191 90 gm
3 fs
bu fc

%%BeginFont: Times-BoldItalic
%%IncludeFont: Times-BoldItalic
bn
%%EndFont
bu fc
{}mark T /Times-BoldItalic /|______Times-BoldItalic 0 rf
bn
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Identity)show
205 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.33172 0. 32 0.03317 0.(This is the file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.18232 0.(Id.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.43884 0. 32 0.04388 0.(\325. It defines the polymorphic identity in such a way that its type parameter)awidthshow
219 90 gm
(can be omitted.)show
233 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Id;)show
246 126 gm
(Let Id = All\(X?\) X->X;)show
259 126 gm
(let id: Id = fun\(X?\) fun\(x:X\) x;)show
286 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Unit)show
300 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.11154 0. 32 0.01115 0.(This is the file \324)awidthshow
300 172 gm
bu fc
2 F /|______Courier fnt
bn
0.04356 0.(Unit.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.04119 0. 32 0.00411 0.(\325.  \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.04356 0.(Unit)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.08987 0. 32 0.00898 0.(\325 is the encoding of a data type with a single element \324)awidthshow
300 483 gm
bu fc
2 F /|______Courier fnt
bn
0.02572 0.(unit)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.04425 0. 32 0.00442 0.(\325. It)awidthshow
314 90 gm
0.35369 0. 32 0.03536 0.(is essentially the same as the polymorphic identity, but because of the intended use of \324)awidthshow
314 447 gm
bu fc
2 F /|______Courier fnt
bn
0.09117 0.(unit)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.23132 0. 32 0.02313 0.(\325, type infer-)awidthshow
328 90 gm
(ence is not desirable.)show
342 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Unit;)show
351 126 gm
(\(* Defines:)show
360 144 gm
(Unit = All\(X\)X->X)show
369 144 gm
(unit: Unit)show
378 126 gm
(*\))show
391 126 gm
(Let Unit = All\(X\) X->X;)show
404 126 gm
(let unit: Unit = fun\(X\) fun\(x:X\) x;)show
431 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Booleans)show
445 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.65139 0. 32 0.06513 0.(This is the file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.35797 0.(Bool.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.77087 0. 32 0.07708 0.(\325. This is the encoding of a data type with two elements, \324)awidthshow
445 476 gm
bu fc
2 F /|______Courier fnt
bn
0.17619 0.(true)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.42526 0. 32 0.04252 0.(\325 and)awidthshow
459 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(false)show
bu fc
2 F /|______Times-Roman fnt
bn
0.01541 0. 32 0.00154 0.(\325. Also provided are two subtypes of \324)awidthshow
459 275 gm
bu fc
2 F /|______Courier fnt
bn
(Bool)show
bu fc
2 F /|______Times-Roman fnt
bn
0.01480 0. 32 0.00148 0.(\325 containing one element each. Standard boolean opera)awidthshow
459 519 gm
(-)show
473 90 gm
0.67337 0. 32 0.06733 0.(tors are defined. The syntax of terms is extended with two keywords \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.27304 0.(true)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.45684 0. 32 0.04568 0.(\325 and \324)awidthshow
473 435 gm
bu fc
2 F /|______Courier fnt
bn
0.15962 0.(false)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.42266 0. 32 0.04226 0.(\325, with condi)awidthshow
473 518 gm
(-)show
487 90 gm
(tionals, and with two infix operators.)show
501 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Bool;)show
510 126 gm
(\(* Defines:)show
519 144 gm
(Bool = All\(X\)X->X->X)show
528 144 gm
(True, False <: Bool)show
537 144 gm
(true, false: Bool)show
546 144 gm
(tt: True)show
555 144 gm
(ff: False)show
564 144 gm
(not: Bool->Bool)show
573 144 gm
(and, or, _/\\_, _\\/_: Bool->Bool->Bool)show
582 144 gm
(if _ then _ else _ end)show
591 126 gm
(*\))show
604 126 gm
(Let Bool = All\(X\) X->X->X)show
613 126 gm
(    True = All\(X\) X->Top->X)show
622 126 gm
(    False = All\(X\) Top->X->X;)show
635 126 gm
(let true: Bool = fun\(X\) fun\(x:X\) fun\(y:X\) x)show
644 126 gm
(    false: Bool = fun\(X\) fun\(x:X\) fun\(y:X\) y;)show
657 126 gm
(let tt: True = fun\(X\) fun\(x:X\) fun\(y:Top\) x)show
666 126 gm
(    ff: False = fun\(X\) fun\(x:Top\) fun\(y:X\) y;)show
684 126 gm
(let cond = fun\(X?\) fun\(b:Bool\) b\(:X\);)show
697 126 gm
(\(* Bool, true, and false are turned into keywords *\))show
F T cp
%%Page: ? 22
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(22)show
98 126 gm
bu fc
2 F /|______Courier fnt
bn
(syntax)show
107 126 gm
(  typeBase ::= ...)show
116 126 gm
(    "Bool" :> Bool)show
129 126 gm
(  termBase ::= ...)show
138 126 gm
(    { "true" => true)show
147 126 gm
(      "false" => false)show
156 126 gm
(      ["if" term_1 "then" term_2 "else" term_3 "end" ])show
165 126 gm
(        => cond\(_1\)\(_2\)\(_3\) })show
174 126 gm
(;)show
187 126 gm
(let not: Bool->Bool =)show
196 126 gm
(      fun\(x:Bool\) if x then false else true end)show
205 126 gm
(    and: Bool->Bool->Bool =)show
214 126 gm
(      fun\(x:Bool\) fun\(y:Bool\))show
223 126 gm
(        if x then y else false end)show
232 126 gm
(    or: Bool->Bool->Bool =)show
241 126 gm
(      fun\(x:Bool\) fun\(y:Bool\))show
250 126 gm
(        if x then true else y end;)show
263 126 gm
(syntax)show
272 126 gm
(  termOper ::= ... *_1)show
281 126 gm
(    { [ "/\\\\" termAppl_2 ] => and\(_1\)\(_2\))show
290 126 gm
(      [ "\\\\/" termAppl_2 ] => or\(_1\)\(_2\) })show
299 126 gm
(;)show
326 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Products)show
340 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.55465 0. 32 0.05546 0.(This is the file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.30479 0.(Product.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.79040 0. 32 0.07904 0.(\325. It defines a cartesian product operator, extending the syntax of)awidthshow
354 90 gm
0.30380 0. 32 0.03038 0.(types, and a pairing operator, extending the syntax of terms. Syntax extensions and type inference interact)awidthshow
368 90 gm
(in this situation, so that pairs can be constructed simply by infixing a \324)show
bu fc
2 F /|______Courier fnt
bn
(,)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
382 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Product;)show
391 126 gm
(\(* Defines:)show
400 144 gm
(A*B = All\(C\){A->B->C}->C)show
409 144 gm
(_,_: All\(A?\) All\(B?\) A->B->A*B)show
418 144 gm
(pair: All\(A?\) All\(B?\) A->B->A*B)show
427 144 gm
(fst: All\(A?\) All\(B?\) A*B->A)show
436 144 gm
(snd: All\(A?\) All\(B?\) A*B->B)show
445 126 gm
(*\))show
458 126 gm
(syntax)show
467 126 gm
(  typeOper ::= ... *_1)show
476 126 gm
(    ["*" typeOper_2])show
485 126 gm
(      :> All\(C\) {_1->_2->C}->C)show
494 126 gm
(;)show
507 126 gm
(let pair: All\(A?\) All\(B?\) A->B->A*B =)show
516 126 gm
(  fun\(A?\) fun\(B?\) fun\(a:A\) fun\(b:B\))show
525 126 gm
(    fun\(C\) fun\(p:A->B->C\) p\(a\)\(b\);)show
538 126 gm
(let fst: All\(A?\) All\(B?\) A*B->A =)show
547 126 gm
(  fun\(A?\) fun\(B?\) fun\(p:A*B\) p\(:A\)\(fun\(a:A\)fun\(b:B\)a\);)show
556 126 gm
(let snd: All\(A?\) All\(B?\) A*B->A =)show
565 126 gm
(  fun\(A?\) fun\(B?\) fun\(p:A*B\) p\(:B\)\(fun\(a:A\)fun\(b:B\)b\);)show
578 126 gm
(syntax)show
587 126 gm
(  termOper ::= ... *_1)show
596 126 gm
(    ["," termOper_2] => pair\(_1\)\(_2\))show
605 126 gm
(;)show
632 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Sums)show
646 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.19622 0. 32 0.01962 0.(This is the file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.10781 0.(Sum.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.25726 0. 32 0.02572 0.(\325. It defines a disjoint union operator, extending the syntax of types, and a)awidthshow
660 90 gm
(\324)show
bu fc
2 F /|______Courier fnt
bn
(case)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 construct extending the syntax of terms. Note that \324)show
bu fc
2 F /|______Courier fnt
bn
(case)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325)show
660 356 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
( )show
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(introduces local bindings.)show
674 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Sum;)show
683 126 gm
(\(* Defines)show
692 144 gm
(A+B = All\(C\){A->C}->{B->C}->C)show
701 144 gm
(inl: All\(A?\) All\(B?\) A->A+B)show
F T cp
%%Page: ? 23
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(23)show
98 144 gm
bu fc
2 F /|______Courier fnt
bn
(inr: All\(A?\) All\(B?\) B->A+B)show
107 144 gm
(sum: All\(A?\) All\(B?\) All\(C?\) A+B->{A->C}->{B->C}->C)show
116 144 gm
(case term)show
125 144 gm
(  inl\(ide:type\) term)show
134 144 gm
(  inr\(ide:type\) term)show
143 144 gm
(end,)show
152 126 gm
(*\))show
165 126 gm
(syntax)show
174 126 gm
(  typeOper ::= ... *_1)show
183 126 gm
(    [ "+" typeOper_2 ])show
192 126 gm
(      :> All\(C\) {_1->C}->{_2->C}->C)show
201 126 gm
(;)show
214 126 gm
(let inl: All\(A?\) All\(B?\) A->A+B =)show
223 126 gm
(  fun\(A?\) fun\(B?\) fun\(a:A\))show
232 126 gm
(    fun\(C\) fun\(f:A->C\) fun\(g:B->C\) f\(a\);)show
241 126 gm
(let inr: All\(A?\) All\(B?\) B->A+B =)show
250 126 gm
(  fun\(A?\) fun\(B?\) fun\(b:B\))show
259 126 gm
(    fun\(C\) fun\(f:A->C\) fun\(g:B->C\) g\(b\);)show
272 126 gm
(let sum: All\(A?\) All\(B?\) All\(C?\) A+B->{A->C}->{B->C}->C =)show
281 126 gm
(  fun\(A?\) fun\(B?\) fun\(C?\))show
290 126 gm
(    fun\(s:A+B\) fun\(f:A->C\) fun\(g:B->C\))show
299 126 gm
(      s\(:C\)\(f\)\(g\);)show
312 126 gm
(syntax)show
321 126 gm
(  termBase ::= ...)show
330 126 gm
(      ["case" term_1)show
339 126 gm
(       "lft" "\(" termIde_2 ":" type_3 "\)" term_4)show
348 126 gm
(       "rht" "\(" termIde_5 ":" type_6 "\)" term_7)show
357 126 gm
(       "end"])show
366 126 gm
(       => sum\(_1\)\(fun\(_2:_3\)_4\)\(fun\(_5:_6\)_7\))show
375 126 gm
(;)show
402 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Tuples)show
416 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.01068 0. 32 0.00106 0.(This is the file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.00585 0.(Tuple.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.01449 0. 32 0.00144 0.(\325. It defines type tuples as iterated cartesian products ending with \324)awidthshow
416 498 gm
bu fc
2 F /|______Courier fnt
bn
(Top)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325,)show
430 90 gm
0.36911 0. 32 0.03691 0.(so that a longer tuple type is a subtype of a shorter tuple type. Note that the previously defined syntax for)awidthshow
444 90 gm
0.03433 0. 32 0.00343 0.(cartesian products is used here to provide a further syntax extension. Tuple values are iterated pairings end)awidthshow
444 518 gm
(-)show
458 90 gm
(ing with \324)show
458 129 gm
bu fc
2 F /|______Courier fnt
bn
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
472 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Tuple)show
481 126 gm
(import Product;)show
490 126 gm
(\(* Defines:)show
499 144 gm
(Tuple\(type ... type\))show
508 144 gm
(tuple\(term ... term\))show
517 126 gm
(*\))show
530 126 gm
(syntax)show
539 126 gm
(  typeBase ::= ...)show
548 126 gm
(    [ "Tuple" "\(" typeTuple_1 "\)" ] :> _1)show
557 126 gm
(  typeTuple ::=)show
566 126 gm
(    { [ type_1 typeTuple_2 ] :> _1 * _2)show
575 126 gm
(      [] :> Top })show
584 126 gm
(;)show
597 126 gm
(syntax)show
606 126 gm
(  termBase ::= ...)show
615 126 gm
(    [ "tuple" "\(" termTuple_1 "\)" ] => _1)show
624 126 gm
(  termTuple ::=)show
633 126 gm
(    { [ term_1 termTuple_2 ] => _1 , _2)show
642 126 gm
(      [] => top })show
651 126 gm
(;)show
664 90 gm
(\312)show
F T cp
%%Page: ? 24
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(24)show
102 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Inductive Lists)show
116 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.27908 0. 32 0.02790 0.(This is the file \324)awidthshow
116 173 gm
bu fc
2 F /|______Courier fnt
bn
0.05876 0.(IndList.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.11489 0. 32 0.01148 0.(\325. It defines \324)awidthshow
116 298 gm
bu fc
2 F /|______Courier fnt
bn
0.06498 0.(List\(A\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.18692 0. 32 0.01869 0.(\325 data types encoded by inductive definitions)awidthshow
130 90 gm
0.08743 0. 32 0.00874 0.(\(that is, without using recursion over types\). Syntax extensions are used here to simulate a third-order oper)awidthshow
130 519 gm
(-)show
144 90 gm
(ator \(\324)show
144 115 gm
bu fc
2 F /|______Courier fnt
bn
(List)show
bu fc
2 F /|______Times-Roman fnt
bn
-0.00523 0.(\325\) within a second-order language: \324)ashow
bu fc
2 F /|______Courier fnt
bn
-0.00787 0.(List\(A\))ashow
bu fc
2 F /|______Times-Roman fnt
bn
-0.00512 0.(\325 is a second-order type only for a fixed \324)ashow
144 488 gm
bu fc
2 F /|______Courier fnt
bn
(A)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325. Note)show
158 90 gm
0.01708 0. 32 0.00170 0.(that the action for \324)awidthshow
158 167 gm
bu fc
2 F /|______Courier fnt
bn
(List)show
bu fc
2 F /|______Times-Roman fnt
bn
0.01464 0. 32 0.00146 0.(\325 uses a local variable \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
(L)show
bu fc
2 F /|______Times-Roman fnt
bn
0.01632 0. 32 0.00163 0.(\325 that must be kept distinct from any variable that may ap)awidthshow
158 519 gm
(-)show
172 90 gm
0.78826 0. 32 0.07882 0.(pear in a parameter to \324)awidthshow
172 189 gm
bu fc
2 F /|______Courier fnt
bn
0.28256 0.(List)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.67184 0. 32 0.06718 0.(\325; this is taken care of by the action instantiation algorithm. The syntax of)awidthshow
186 90 gm
0.65292 0. 32 0.06529 0.(terms is extended with a case construct and a convenient way of building lists of many elements; again,)awidthshow
200 90 gm
(syntax extensions and type inference interact in interesting ways.)show
214 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module IndList)show
223 126 gm
(import Bool;)show
232 126 gm
(\(* Defines:)show
241 144 gm
(List\(A\) = All\(L\) L->{A->L->L}->L,)show
250 144 gm
(nil: All\(A?\) List\(A\),)show
259 144 gm
(cons: All\(A?\) A->List\(A\)->List\(A\),)show
268 144 gm
(null: All\(A?\) List\(A\)->Bool,)show
277 144 gm
(hd: All\(A?\) List\(A\)->A->A,)show
286 144 gm
(tl: All\(A?\) List\(A\)->List\(A\))show
295 144 gm
(caseList term)show
304 144 gm
(  nil\(\) term)show
313 144 gm
(  cons\(ide:type ide:type\) term)show
322 144 gm
(end,)show
331 144 gm
(list\(term ... term\))show
340 126 gm
(*\))show
353 126 gm
(syntax)show
362 126 gm
(  typeBase ::= ...)show
371 126 gm
(    [ "List" "\(" type_1 "\)" ])show
380 126 gm
(      :> All\(L\) L->{_1->L->L}->L)show
389 126 gm
(;)show
402 126 gm
(let nil: All\(A?\)List\(A\) =)show
411 126 gm
(  fun\(A?\)fun\(L\)fun\(n:L\)fun\(c:A->L->L\)n;)show
424 126 gm
(let cons: All\(A?\)A->List\(A\)->List\(A\) =)show
433 126 gm
(  fun\(A?\)fun\(hd:A\)fun\(tl:List\(A\)\))show
442 126 gm
(    fun\(L\)fun\(n:L\)fun\(c:A->L->L\))show
451 126 gm
(      c\(hd\)\(tl\(:L\)\(n\)\(c\)\);)show
464 126 gm
(let iterList: All\(A?\)All\(B?\) List\(A\)->B->{A->B->B}->B =)show
473 126 gm
(  fun\(A?\)fun\(B?\)fun\(l:List\(A\)\))show
482 126 gm
(    fun\(n:B\)fun\(c:A->B->B\))show
491 126 gm
(      l\(:B\)\(n\)\(c\);)show
504 126 gm
(syntax)show
513 126 gm
(  termBase ::= ...)show
522 126 gm
(    { "nil" => nil)show
531 126 gm
(      "cons" => cons)show
540 126 gm
(      ["caseList" term_1)show
549 126 gm
(       "nil" "\(" "\)" term_2)show
558 126 gm
(       "cons" "\(" termIde_3 ":" type_4 termIde_5 ":" type_6 "\)" term_7)show
567 126 gm
(        "end"])show
576 126 gm
(       => iterList\(_1\)\(_2\)\(fun\(_3:_4\)fun\(_5:_6\)_7\) })show
585 126 gm
(;)show
598 126 gm
(let null: All\(A?\)List\(A\)->Bool =)show
607 126 gm
(  fun\(A?\)fun\(l:List\(A\)\))show
616 126 gm
(    caseList l)show
625 126 gm
(      nil\(\) true)show
634 126 gm
(      cons\(hd:A tl:Bool\) false)show
643 126 gm
(    end;)show
656 126 gm
(let hd: All\(A?\)List\(A\)->A->A =)show
665 126 gm
(  fun\(A?\)fun\(l:List\(A\)\)fun\(a:A\))show
674 126 gm
(    caseList l)show
683 126 gm
(      nil\(\) a)show
692 126 gm
(      cons\(hd:A tl:A\) hd)show
701 126 gm
(    end;)show
F T cp
%%Page: ? 25
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(25)show
102 126 gm
bu fc
2 F /|______Courier fnt
bn
(let tl: All\(A?\)List\(A\)->List\(A\) =)show
111 126 gm
(  fun\(A?\)fun\(l:List\(A\)\))show
120 126 gm
(    caseList l)show
129 126 gm
(      nil\(\) nil)show
138 126 gm
(      cons\(hd:A tl:List\(A\)\) tl)show
147 126 gm
(    end;)show
160 126 gm
(syntax)show
169 126 gm
(  termBase ::= ...)show
178 126 gm
(    [ "list" "\(" termList_1 "\)" ] => _1)show
187 126 gm
(  termList ::=)show
196 126 gm
(    { [ term_1 termList_2 ] => cons\(_1\)\(_2\))show
205 126 gm
(      [] => nil })show
214 126 gm
(;)show
241 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Recursive Lists)show
255 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.59448 0. 32 0.05944 0.(This is the file \324)awidthshow
255 175 gm
bu fc
2 F /|______Courier fnt
bn
0.12017 0.(RecList.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.28900 0. 32 0.02890 0.(\325. It provides the same constructions as \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.12017 0.(IndList.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.38314 0. 32 0.03831 0.(\325, except)awidthshow
269 90 gm
0.05279 0. 32 0.00527 0.(that lists are encoded via recursive types. Note how the operators provided here encapsulate the folding and)awidthshow
283 90 gm
(unfolding of recursion, so that they need not be used directly.)show
297 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module RecList)show
306 126 gm
(import Bool;)show
315 126 gm
(\(* Defines:)show
324 144 gm
(List\(A\) = Rec\(L\) All\(C\) C->{A->L->C}->C,)show
333 144 gm
(nil: All\(A?\) List\(A\),)show
342 144 gm
(cons: All\(A?\) A->List\(A\)->List\(A\),)show
351 144 gm
(null: All\(A?\) List\(A\)->Bool,)show
360 144 gm
(hd: All\(A?\) List\(A\)->A->A,)show
369 144 gm
(tl: All\(A?\)List\(A\)->List\(A\),)show
382 144 gm
(caseList term)show
391 144 gm
(  nil\(\) term)show
400 144 gm
(  cons\(ide:type ide:type\) term)show
409 144 gm
(end,)show
418 144 gm
(list\(term ... term\))show
427 126 gm
(*\))show
440 126 gm
(syntax)show
449 126 gm
(  typeBase ::= ...)show
458 126 gm
(    [ "List" "\(" type_1 "\)" ])show
467 126 gm
(      :> Rec\(L\) All\(C\) C->{_1->L->C}->C)show
476 126 gm
(;)show
489 126 gm
(let nil: All\(A?\)List\(A\) =)show
498 126 gm
(  fun\(A?\))show
507 126 gm
(    fold\(:List\(A\)\)\(fun\(C\)fun\(n:C\)fun\(c:A->List\(A\)->C\)n\);)show
520 126 gm
(let cons: All\(A?\)A->List\(A\)->List\(A\) =)show
529 126 gm
(  fun\(A?\)fun\(hd:A\)fun\(tl:List\(A\)\))show
538 126 gm
(    fold\(:List\(A\)\)\(fun\(C\)fun\(n:C\)fun\(c:A->List\(A\)->C\)c\(hd\)\(tl\)\);)show
551 126 gm
(let recList: All\(A?\) All\(B?\) B->{A->List\(A\)->B}->List\(A\)->B =)show
560 126 gm
(  fun\(A?\) fun\(B?\) fun\(n:B\) fun\(c:A->List\(A\)->B\))show
569 126 gm
(    fun\(l:List\(A\)\) unfold\(l\)\(:B\)\(n\)\(c\);)show
582 126 gm
(syntax)show
591 126 gm
(  termBase ::= ...)show
600 126 gm
(    { "nil" => nil)show
609 126 gm
(      "cons" => cons)show
618 126 gm
(      ["caseList" term_1)show
627 126 gm
(       "nil" "\(" "\)" term_2)show
636 126 gm
(       "cons" "\(" termIde_3":"type_4 termIde_5":"type_6 "\)" term_7)show
645 126 gm
(       "end"])show
654 126 gm
(         => recList\(_2\)\(fun\(_3:_4\)fun\(_5:_6\)_7\)\(_1\))show
663 126 gm
(    };)show
F T cp
%%Page: ? 26
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(26)show
98 126 gm
bu fc
2 F /|______Courier fnt
bn
(let null: All\(A?\)List\(A\)->Bool =)show
107 126 gm
(  fun\(A?\)fun\(l:List\(A\)\))show
116 126 gm
(    caseList l)show
125 126 gm
(      nil\(\) true)show
134 126 gm
(      cons\(hd:A tl:List\(A\)\) false)show
143 126 gm
(    end;)show
156 126 gm
(let hd: All\(A?\)List\(A\)->A->A =)show
165 126 gm
(  fun\(A?\)fun\(l:List\(A\)\)fun\(a:A\))show
174 126 gm
(    caseList l)show
183 126 gm
(      nil\(\) a)show
192 126 gm
(      cons\(hd:A tl:List\(A\)\) hd)show
201 126 gm
(    end;)show
214 126 gm
(let tl: All\(A?\)List\(A\)->List\(A\) =)show
223 126 gm
(  fun\(A?\)fun\(l:List\(A\)\))show
232 126 gm
(    caseList l)show
241 126 gm
(      nil\(\) nil)show
250 126 gm
(      cons\(hd:A tl:List\(A\)\) tl)show
259 126 gm
(    end;)show
272 126 gm
(syntax)show
281 126 gm
(  termBase ::= ...)show
290 126 gm
(    [ "list" "\(" termList_1 "\)" ] => _1)show
299 126 gm
(  termList ::=)show
308 126 gm
(    { [ term_1 termList_2 ] => cons\(_1\)\(_2\))show
317 126 gm
(      [] => nil })show
326 126 gm
(;)show
353 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Existentials)show
367 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07171 0. 32 0.00717 0.(This is the file \324)awidthshow
bu fc
2 F /|______Courier fnt
bn
0.03944 0.(Some.fsub)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.11291 0. 32 0.01129 0.(\325. Bounded and unbounded existential quantifiers are encoded in terms of)awidthshow
381 90 gm
0.25512 0. 32 0.02551 0.(universal quantifiers. Syntax is provided which is analogous to the built-in syntax for universal quantifica)awidthshow
381 519 gm
(-)show
395 90 gm
(tion.)show
409 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Some;)show
418 126 gm
(\(* Defines)show
427 144 gm
(Some\(ide\)type, Some\(ide<:type\)type)show
436 144 gm
(pack ide<:type=type as type with term end)show
445 144 gm
(open term as ide<:type ide:type in term end)show
454 126 gm
(*\))show
467 126 gm
(\(* easy version:)show
476 126 gm
(syntax)show
485 126 gm
(  typeBase ::= ...)show
494 126 gm
(    [ "Some" "\(" typeIde_1 "<:" type_2 "\)" type_3 ])show
503 126 gm
(      :> All\(V?\) {All\(_1<:_2\) _3 -> V} -> V)show
512 126 gm
(; *\))show
525 126 gm
(\(* some interesting pattern-variable manipulation: *\))show
534 126 gm
(syntax)show
543 126 gm
(  typeBase ::= ...)show
552 126 gm
(    [ "Some" "\(" typeIde_1)show
561 126 gm
(      { ["<:" type_2 "\)" type_3 ])show
570 144 gm
(  :> All\(V?\) {All\(_1<:_2\) _3 -> V} -> V)show
579 126 gm
(        ["\)" type_3 ])show
588 144 gm
(  :> All\(V?\) {All\(_1\) _3 -> V} -> V)show
597 126 gm
(      } _4)show
606 126 gm
(    ] :> _4)show
615 126 gm
(;)show
628 126 gm
(syntax)show
637 126 gm
(  termBase ::= ...)show
646 126 gm
(    { [ "pack" typeIde_1 "<:" type_2 "=" type_3 "as" type_4)show
655 126 gm
(        "with" term_5 "end" ])show
664 126 gm
(          => fun\(V?\) fun\(f:All\(_1<:_2\)_4->V\) f\(:_3\)\(_5\))show
673 126 gm
(      [ "open" term_1 "as" typeIde_2 "<:" type_3 termIde_4 ":" type_5)show
682 126 gm
(        "in" term_6 "end" ])show
691 126 gm
(          => _1\(fun\(_2<:_3\)fun\(_4:_5\)_6\)})show
700 126 gm
(;)show
F T cp
%%Page: ? 27
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(27)show
102 126 gm
bu fc
2 F /|______Courier fnt
bn
(\(* Example:)show
120 126 gm
(  load Bool; load Product;)show
138 126 gm
(  Let Spec = Some\(X<:Bool\) X*{X->Bool};)show
151 126 gm
(  let impl: Spec =)show
160 126 gm
(    pack X<:Bool=True as X*{X->Bool})show
169 126 gm
(    with tt, fun\(x:True\)true end;)show
182 126 gm
(  open impl as X<:Bool p:X*{X->Bool})show
191 126 gm
(  in snd\(p\)\(fst\(p\)\) end;)show
204 126 gm
(Note: trying to extract fst\(p\) rightfully causes a type-inference)show
213 126 gm
(rank-check, which would not be captured by the normal first-order)show
222 126 gm
(unification algorithm.)show
231 126 gm
(*\))show
258 90 gm
3 fs
10 fz
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Untyped )show
258 127 gm
bu fc
2 T /|______Symbol fnt
bn
(l)show
bu fc
2 F /|______Times-BoldItalic fnt
bn
(-terms)show
272 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(This is the file \324)show
bu fc
2 F /|______Courier fnt
bn
(Scott.fsub)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325. It uses recursive types to encode the untyped )show
272 421 gm
bu fc
2 F /|______Symbol fnt
bn
(l)show
272 427 gm
bu fc
2 F /|______Times-Roman fnt
bn
(-calculus.)show
286 126 gm
8 fz
bu fc
2 F /|______Courier fnt
bn
(module Scott;)show
295 126 gm
(\(* Defines)show
304 144 gm
(V = V->V)show
313 144 gm
(\\x e)show
313 216 gm
(untyped lambda)show
322 144 gm
(e.e)show
322 216 gm
(untyped application)show
331 144 gm
(i,k,s,y: V)show
331 216 gm
(the usual combinators)show
340 126 gm
(*\))show
353 126 gm
(Let V = Rec\(V\) V->V;)show
366 126 gm
(syntax)show
375 126 gm
(  termBase ::= ...)show
384 126 gm
(    ["\\\\" termIde_1 term_2])show
393 126 gm
(      => fold\(:V\)\(fun\(_1:V\)_2\))show
402 126 gm
(  termOper ::= ... *_1)show
411 126 gm
(    ["." termAppl_2])show
420 126 gm
(      => unfold\(_1\)\(_2\);)show
433 126 gm
(let i = \\x x)show
442 126 gm
(    k = \\x \\y x)show
451 126 gm
(    s = \\x \\y \\z {x.z}.{y.z})show
460 126 gm
(    y = \\f {\\x f.{x.x}}.{\\x f.{x.x}};)show
473 126 gm
(\(* Note: the evaluator is eager; k.i.{y.i} will diverge. To fix this, use:)show
486 126 gm
(module Scott)show
495 126 gm
(import Unit;)show
508 126 gm
(Let V = Rec\(V\) {Unit->V}->V;)show
521 126 gm
(syntax)show
530 126 gm
(  termBase ::= ...)show
539 126 gm
(    { ["@" termIde_1])show
548 126 gm
(        => _1\(unit\))show
557 126 gm
(      ["\\\\" termIde_1 term_2])show
566 126 gm
(        => fold\(:V\)\(fun\(_1:Unit->V\)_2\) })show
575 126 gm
(  termOper ::= ... *_1)show
584 126 gm
(    ["." termAppl_2])show
593 126 gm
(        => unfold\(_1\)\(fun\(u:Unit\)_2\);)show
606 126 gm
(let i = \\x @x;)show
615 126 gm
(let k = \\x \\y @x;)show
624 126 gm
(let s = \\x \\y \\z {@x.@z}.{@y.@z};)show
633 126 gm
(let y = \\f {\\x @f.{@x.@x}}.{\\x @f.{@x.@x}};)show
646 126 gm
(k.i.{y.i};)show
659 126 gm
(*\))show
F T cp
%%Page: ? 28
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(28)show
117 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix B. Lexicon)show
138 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(The ASCII characters are divided into the following classes:)show
157 126 gm
(Blank)show
157 198 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(HT)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(LF)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(FF)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(CR)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(SP)show
171 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Reserved)show
171 198 gm
bu fc
2 F /|______Courier fnt
bn
(" ' ~)show
185 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Delimiter)show
185 198 gm
bu fc
2 F /|______Courier fnt
bn
(\( \) , . ; [ ] _ { } ? !)show
199 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Special)show
199 198 gm
bu fc
2 F /|______Courier fnt
bn
(# $ % & * + - / : < = > @ \\ ^ |)show
213 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Digit)show
213 198 gm
bu fc
2 F /|______Courier fnt
bn
(0 1 2 3 4 5 6 7 8 9)show
227 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Letter)show
227 198 gm
bu fc
2 F /|______Courier fnt
bn
(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)show
241 198 gm
(` a b c d e f g h i j k l m n o p q r s t u v w x y z)show
255 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Illegal)show
255 198 gm
(all the others)show
274 108 gm
(Moreover:)show
288 126 gm
(- a StringChar is either)show
302 144 gm
(- any single character that is not an Illegal character or one of \324)show
bu fc
2 F /|______Courier fnt
bn
(')show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, \324)show
302 413 gm
bu fc
2 F /|______Courier fnt
bn
(")show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, \324)show
302 431 gm
bu fc
2 F /|______Courier fnt
bn
(\\)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
316 144 gm
(- one of the pairs of characters \324)show
bu fc
2 F /|______Courier fnt
bn
(\\')show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, \324)show
316 295 gm
bu fc
2 F /|______Courier fnt
bn
(\\")show
bu fc
2 F /|______Times-Roman fnt
bn
(\325, \324)show
316 319 gm
bu fc
2 F /|______Courier fnt
bn
(\\\\)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
330 126 gm
(- a Comment is, recursively, a sequence of non-Illegal characters and comments)show
344 144 gm
(enclosed between \324\()show
344 224 gm
bu fc
2 F /|______Courier fnt
bn
(*)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325 and \324)show
bu fc
2 F /|______Courier fnt
bn
(*\))show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
363 108 gm
(From these, the following )show
363 214 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(lexemes)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( are formed:)show
377 126 gm
(Space)show
377 198 gm
(a sequence of Blanks and Comments.)show
391 126 gm
(AlphaNum)show
391 198 gm
(a sequence of Letters and Digits starting with a Letter.)show
405 126 gm
(Symbol)show
405 198 gm
(a sequence of Specials.)show
419 126 gm
(Char)show
419 198 gm
(a single StringChar enclosed between two \324)show
419 372 gm
bu fc
2 F /|______Courier fnt
bn
(')show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
433 126 gm
(String)show
433 198 gm
(a sequence of StringChars enclosed between two \324)show
bu fc
2 F /|______Courier fnt
bn
(")show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
447 126 gm
(Int)show
447 198 gm
(a sequence of Digits, possibly preceded by a single minus sign \324)show
bu fc
2 F /|______Courier fnt
bn
(~)show
bu fc
2 F /|______Times-Roman fnt
bn
(\325.)show
461 126 gm
(Delimiter)show
461 198 gm
(a single Delimiter character.)show
480 108 gm
0.58639 0. 32 0.05863 0.(A stream of characters is split into lexemes by always extracting the longest prefix that is a lexeme.)awidthshow
494 90 gm
0.88745 0. 32 0.08874 0.(Note that Delimiters do not stick to each other or to other tokens even when they are not separated by)awidthshow
508 90 gm
(Space, but some care must be taken so that Symbols are not inadvertently merged.)show
527 108 gm
0.15365 0. 32 0.01536 0.(A )awidthshow
527 118 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(token)show
527 140 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.10543 0. 32 0.01054 0.( is either a Char, String, Int, Delimiter, Identifier, or Keyword. Once a stream of characters has)awidthshow
541 90 gm
(been split into lexemes, )show
541 187 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(tokens)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( are extracted as follows.)show
555 126 gm
(- Space lexemes do not produce tokens.)show
569 126 gm
(- Char, String, Int, and Delimiter lexemes are also tokens.)show
583 126 gm
(- AlphaNum and Symbol lexemes are Identifier tokens, except when they have been)show
597 144 gm
(explicitly declared to be )show
597 243 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(keywords)show
597 281 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(, in which case they are Keyword tokens.)show
F T cp
%%Page: ? 29
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(29)show
117 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix C. Syntax)show
138 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(The predefined keywords are:)show
157 126 gm
(For grammar definitions:)show
171 144 gm
bu fc
2 F /|______Courier fnt
bn
(char end ide in int string syntax ::= => :> * =)show
185 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(For F-sub proper:)show
199 144 gm
bu fc
2 F /|______Courier fnt
bn
(All Let Rec Top fold fun judge let rec top unfold : <: -> = |-)show
218 90 gm
8 fz
bu fc
2 F /|______Symbol fnt
bn
(\250)show
218 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(The grammar of phrases is as follows.)show
237 126 gm
(phrase ::=)show
237 252 gm
(\(* public *\))show
251 144 gm
({ ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(")show
265 144 gm
(  [ ")show
265 159 gm
bu fc
2 F /|______Courier fnt
bn
(Let)show
bu fc
2 F /|______Times-Roman fnt
bn
(" typeBinding ")show
265 240 gm
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
279 144 gm
(  [ ")show
279 159 gm
bu fc
2 F /|______Courier fnt
bn
(let)show
bu fc
2 F /|______Times-Roman fnt
bn
(" termBinding ")show
279 241 gm
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
293 144 gm
(  [ ")show
293 159 gm
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
307 144 gm
(  [ term ")show
307 180 gm
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
321 144 gm
(  [ synDecl ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
335 144 gm
(  [ ")show
335 159 gm
bu fc
2 F /|______Courier fnt
bn
(judge)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { [ ")show
335 213 gm
bu fc
2 F /|______Courier fnt
bn
(env)show
bu fc
2 F /|______Times-Roman fnt
bn
(" env])show
349 198 gm
( [ ")show
bu fc
2 F /|______Courier fnt
bn
(type)show
bu fc
2 F /|______Times-Roman fnt
bn
(" env ")show
349 262 gm
bu fc
2 F /|______Courier fnt
bn
(|-)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ])show
363 198 gm
( [ ")show
bu fc
2 F /|______Courier fnt
bn
(subtype)show
bu fc
2 F /|______Times-Roman fnt
bn
(" env ")show
363 280 gm
bu fc
2 F /|______Courier fnt
bn
(|-)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ")show
bu fc
2 F /|______Courier fnt
bn
(<:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ])show
377 198 gm
( [ ")show
bu fc
2 F /|______Courier fnt
bn
(term)show
bu fc
2 F /|______Times-Roman fnt
bn
(" env ")show
377 262 gm
bu fc
2 F /|______Courier fnt
bn
(|-)show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ")show
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ])show
391 198 gm
(} ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
405 144 gm
(  [ ")show
405 159 gm
bu fc
2 F /|______Courier fnt
bn
(reload)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { ide string } ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
419 144 gm
(  [ ")show
419 159 gm
bu fc
2 F /|______Courier fnt
bn
(restore)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { ide [] } ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ] [ { ")show
419 286 gm
bu fc
2 F /|______Courier fnt
bn
(save)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
bu fc
2 F /|______Courier fnt
bn
(establish)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
419 385 gm
bu fc
2 F /|______Courier fnt
bn
(load)show
bu fc
2 F /|______Times-Roman fnt
bn
(" } ide ")show
419 442 gm
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
433 144 gm
(  [ ")show
433 159 gm
bu fc
2 F /|______Courier fnt
bn
(module)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ide { ")show
433 228 gm
bu fc
2 F /|______Courier fnt
bn
(import)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ideList } ")show
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
447 144 gm
(  [ ")show
447 159 gm
bu fc
2 F /|______Courier fnt
bn
(do)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { [ ide { ide [] }] [] } ")show
447 268 gm
bu fc
2 F /|______Courier fnt
bn
(;)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
461 144 gm
(})show
480 126 gm
(ideList ::=)show
494 144 gm
({ [ ide ideList ] [] })show
513 126 gm
(typeBinding ::=)show
527 144 gm
({ [ ide { [ ")show
bu fc
2 F /|______Courier fnt
bn
(<:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] [] } ")show
527 254 gm
bu fc
2 F /|______Courier fnt
bn
(=)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type typeBinding ] [] })show
546 126 gm
(termBinding ::=)show
560 144 gm
({ [ ide { [ ")show
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] [] } ")show
560 248 gm
bu fc
2 F /|______Courier fnt
bn
(=)show
bu fc
2 F /|______Times-Roman fnt
bn
(" term termBinding ] [] })show
579 126 gm
(env ::=)show
593 144 gm
({ [ ide { [ "<)show
593 195 gm
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] [ ")show
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] } ] [] })show
612 90 gm
8 fz
bu fc
2 F /|______Symbol fnt
bn
(\250)show
612 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(The grammar of types and terms is as follows.)show
631 126 gm
(pvar ::=)show
645 144 gm
([ ")show
645 154 gm
bu fc
2 F /|______Courier fnt
bn
(_)show
bu fc
2 F /|______Times-Roman fnt
bn
(" int ])show
664 126 gm
(binder ::=)show
678 144 gm
({ ide pvar })show
F T cp
%%Page: ? 30
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(30)show
102 126 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(type ::=)show
102 252 gm
(\(* public *\))show
116 144 gm
([ typeOper { [ ")show
116 207 gm
bu fc
2 F /|______Courier fnt
bn
(->)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type [] ] } ])show
135 126 gm
(typeOper ::=)show
135 252 gm
(\(* public, hook for client infixes *\))show
149 144 gm
(\( typeBase *_1 {} \))show
168 126 gm
(typeIde ::=)show
168 252 gm
(\(* public *\))show
182 144 gm
(ide)show
201 126 gm
(typeBase ::=)show
201 252 gm
(\(* public *\))show
215 144 gm
({ typeIde  pvar  ")show
bu fc
2 F /|______Courier fnt
bn
(Top)show
bu fc
2 F /|______Times-Roman fnt
bn
(")show
229 144 gm
(  [ ")show
229 159 gm
bu fc
2 F /|______Courier fnt
bn
(All)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
229 188 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" binder { ")show
bu fc
2 F /|______Courier fnt
bn
(?)show
bu fc
2 F /|______Times-Roman fnt
bn
(" [] } { [ ")show
bu fc
2 F /|______Courier fnt
bn
(<:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type] [] } ")show
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ])show
243 144 gm
(  [ ")show
243 159 gm
bu fc
2 F /|______Courier fnt
bn
(Rec)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
243 188 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" ide ")show
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ])show
257 144 gm
(  [ ")show
257 159 gm
bu fc
2 F /|______Courier fnt
bn
({)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ")show
bu fc
2 F /|______Courier fnt
bn
(})show
bu fc
2 F /|______Times-Roman fnt
bn
(" ] })show
276 126 gm
(term ::=)show
276 252 gm
(\(* public *\))show
290 144 gm
(termOper)show
309 126 gm
(termOper ::=)show
309 252 gm
(\(* public, hook for client infixes *\))show
323 144 gm
(\(termAppl *_1 {}\))show
342 126 gm
(termAppl ::=)show
342 252 gm
(\(* public *\))show
356 144 gm
(\( termBase *_1)show
370 144 gm
(  { [ ")show
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" { [ ")show
370 196 gm
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type] term } ")show
370 264 gm
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
384 144 gm
(     "!" } \))show
384 252 gm
(\(* "!" must follow an identifier or keyword *\))show
403 126 gm
(termIde ::=)show
403 252 gm
(\(* public *\))show
417 144 gm
(ide)show
436 126 gm
(termBase ::=)show
436 252 gm
(\(* public *\))show
450 144 gm
({ termIde  pvar ")show
450 212 gm
bu fc
2 F /|______Courier fnt
bn
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
(")show
464 144 gm
(  [ ")show
464 159 gm
bu fc
2 F /|______Courier fnt
bn
(fun)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
464 188 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" binder { [ ")show
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] [ ")show
bu fc
2 F /|______Courier fnt
bn
(<:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] [ ")show
bu fc
2 F /|______Courier fnt
bn
(?)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { [ ")show
464 377 gm
bu fc
2 F /|______Courier fnt
bn
(<:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ] [] } ] [] } ")show
464 464 gm
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ])show
478 144 gm
(  [ ")show
478 159 gm
bu fc
2 F /|______Courier fnt
bn
(fold)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
478 194 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ")show
478 247 gm
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ")show
478 301 gm
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
492 144 gm
(  [ ")show
492 159 gm
bu fc
2 F /|______Courier fnt
bn
(unfold)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
492 206 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ")show
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
506 144 gm
(  [ ")show
506 159 gm
bu fc
2 F /|______Courier fnt
bn
(rec)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
506 188 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" ide ")show
bu fc
2 F /|______Courier fnt
bn
(:)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ")show
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ])show
520 144 gm
(  [ ")show
520 159 gm
bu fc
2 F /|______Courier fnt
bn
({)show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ")show
bu fc
2 F /|______Courier fnt
bn
(})show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
534 144 gm
(  synTerm })show
553 90 gm
8 fz
bu fc
2 F /|______Symbol fnt
bn
(\250)show
553 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(The grammar of syntax extensions is as follows. Note that the grammar for synTerm cannot be )show
567 108 gm
(written down precisely in this notation.)show
586 126 gm
(synDecl ::=)show
600 144 gm
([ ")show
600 154 gm
bu fc
2 F /|______Courier fnt
bn
(syntax)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { ")show
600 208 gm
bu fc
2 F /|______Courier fnt
bn
(toplevel)show
bu fc
2 F /|______Times-Roman fnt
bn
(" [] } grammar ])show
619 126 gm
(synTerm ::=)show
633 144 gm
([ ")show
633 154 gm
bu fc
2 F /|______Courier fnt
bn
(syntax)show
bu fc
2 F /|______Times-Roman fnt
bn
(" grammar ")show
bu fc
2 F /|______Courier fnt
bn
(in)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ... ")show
633 272 gm
bu fc
2 F /|______Courier fnt
bn
(end)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
652 126 gm
(grammar ::=)show
666 144 gm
(clauseSeq)show
685 126 gm
(clauseSeq ::=)show
699 144 gm
([ ide ")show
699 169 gm
bu fc
2 F /|______Courier fnt
bn
(::=)show
bu fc
2 F /|______Times-Roman fnt
bn
(" extends gramExp { clauseSeq [] } ])show
F T cp
%%Page: ? 31
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(31)show
107 126 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(extends ::=)show
121 144 gm
({ [ ")show
bu fc
2 F /|______Courier fnt
bn
(.)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
121 178 gm
bu fc
2 F /|______Courier fnt
bn
(.)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
121 195 gm
bu fc
2 F /|______Courier fnt
bn
(.)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { [ ")show
bu fc
2 F /|______Courier fnt
bn
(*)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { pvar [] } [] } [] })show
140 126 gm
(gramExp ::=)show
154 144 gm
([ gramExpBase)show
168 144 gm
(  { [ ")show
bu fc
2 F /|______Courier fnt
bn
(=>)show
bu fc
2 F /|______Times-Roman fnt
bn
(" term ])show
182 144 gm
(    [ ")show
182 164 gm
bu fc
2 F /|______Courier fnt
bn
(:>)show
bu fc
2 F /|______Times-Roman fnt
bn
(" type ])show
196 144 gm
(    pvar)show
210 144 gm
(    [] } ])show
229 126 gm
(gramExpBase ::=)show
243 144 gm
({ ide string ")show
bu fc
2 F /|______Courier fnt
bn
(ide)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
243 224 gm
bu fc
2 F /|______Courier fnt
bn
(int)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
243 253 gm
bu fc
2 F /|______Courier fnt
bn
(char)show
bu fc
2 F /|______Times-Roman fnt
bn
(" ")show
243 288 gm
bu fc
2 F /|______Courier fnt
bn
(string)show
bu fc
2 F /|______Times-Roman fnt
bn
(")show
257 144 gm
(  [ ")show
257 159 gm
bu fc
2 F /|______Courier fnt
bn
([)show
bu fc
2 F /|______Times-Roman fnt
bn
(" gramExpList ")show
bu fc
2 F /|______Courier fnt
bn
(])show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
271 144 gm
(  [ ")show
271 159 gm
bu fc
2 F /|______Courier fnt
bn
({)show
bu fc
2 F /|______Times-Roman fnt
bn
(" gramExpList ")show
bu fc
2 F /|______Courier fnt
bn
(})show
bu fc
2 F /|______Times-Roman fnt
bn
(" ])show
285 144 gm
(  [ ")show
285 159 gm
bu fc
2 F /|______Courier fnt
bn
(\()show
bu fc
2 F /|______Times-Roman fnt
bn
(" gramExp { [ ")show
285 228 gm
bu fc
2 F /|______Courier fnt
bn
(*)show
bu fc
2 F /|______Times-Roman fnt
bn
(" { pvar [] } gramExp ] [] } ")show
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
(" ] })show
304 126 gm
(gramExpList ::=)show
318 144 gm
({ [ gramExp gramExpList ] [] })show
F T cp
%%Page: ? 32
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(32)show
117 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix D. Typing rules)show
138 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(These are the typing rules of F-sub, as described in [Cardelli, )show
138 355 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(et al.)show
138 375 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( 1991].)show
166 90 gm
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Environments)show
211 108 gm
(nc 174 108 211 431 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
211 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
211 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
211 431 gm
0 gr
211 431 lin
psb
currentpoint
pse
174 108 gm
174 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10336 div 1184 3 -1 roll exch div scale
currentpoint translate 64 52 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 674 moveto 1371 0 rlineto stroke
2120 683 moveto 3669 0 rlineto stroke
6538 683 moveto 3673 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Env ) -13 218 sh
(E) 37 1010 sh
(\(Env ) 2107 228 sh
(\)) 3010 228 sh
(E) 2157 557 sh
(E) 5458 557 sh
(E) 3353 1019 sh
(\(Env ) 6525 228 sh
(\)) 7444 228 sh
(E) 6575 557 sh
(E) 9880 557 sh
(E) 7635 1019 sh
320 /LicsPlain f1
(\360) 694 218 sh
(\272) 336 1010 sh
(\360) 624 1010 sh
(\272) 2456 557 sh
(\355) 4544 557 sh
(\272) 3089 1019 sh
(\272) 6874 557 sh
(\355) 8966 557 sh
(\272) 7371 1019 sh
320 /Times-Roman f1
(\)) 869 218 sh
320 /Times-Roman f1
( ) 232 1010 sh
( ) 520 1010 sh
( env) 808 1010 sh
( ) 2352 557 sh
( ) 2640 557 sh
( type) 2912 557 sh
( ) 4464 557 sh
( dom\() 4684 557 sh
(\)) 5667 557 sh
( ) 3273 1019 sh
(,) 3551 1019 sh
( env) 4288 1019 sh
( ) 6770 557 sh
( ) 7058 557 sh
( type) 7330 557 sh
( ) 8886 557 sh
( dom\() 9106 557 sh
(\)) 10089 557 sh
( ) 7555 1019 sh
(,) 7833 1019 sh
( env) 8846 1019 sh
320 /Courier-Oblique f1
(x) 2790 228 sh
(A) 2720 557 sh
(x) 4272 557 sh
(x) 3668 1019 sh
(A) 4096 1019 sh
(X) 7208 228 sh
(A) 7138 557 sh
(X) 8694 557 sh
(X) 7954 1019 sh
(A) 8654 1019 sh
320 /Courier f1
(:) 3886 1019 sh
(<:) 8252 1019 sh
end MTsave restore
pse
1 1 pen
237 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Types)show
282 108 gm
(nc 245 108 282 542 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
282 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
282 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
282 542 gm
0 gr
282 542 lin
psb
currentpoint
pse
245 108 gm
245 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13888 div 1184 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 682 moveto 2941 0 rlineto stroke
3690 682 moveto 1830 0 rlineto stroke
6269 682 moveto 3577 0 rlineto stroke
10595 682 moveto 3192 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Type ) -13 218 sh
(\)) 1030 218 sh
(E) 492 556 sh
(E') 1844 556 sh
(E) 37 1018 sh
(E') 1389 1018 sh
(\(Type ) 3677 218 sh
(\)) 5065 218 sh
(E) 4374 556 sh
(E) 3727 1018 sh
(\(Type ) 6256 218 sh
(\)) 7528 218 sh
(E) 6306 556 sh
(E) 8437 556 sh
(E) 7006 1018 sh
(\(Type ) 10582 218 sh
(\)) 11959 218 sh
(E) 10997 556 sh
(E) 10632 1018 sh
320 /Courier-Oblique f1
(X) 794 218 sh
(X) 811 556 sh
(A) 1511 556 sh
(X) 356 1018 sh
(A) 1056 1018 sh
(X) 2095 1018 sh
(A) 6869 556 sh
(B) 9000 556 sh
(A) 7569 1018 sh
(B) 8300 1018 sh
(X) 11316 556 sh
(A) 12016 556 sh
(B) 12576 556 sh
(X) 11940 1018 sh
(A) 12640 1018 sh
(B) 12941 1018 sh
320 /LicsPlain f1
(\272) 228 556 sh
(\272) 1831 1018 sh
(\272) 4110 556 sh
(\272) 4026 1018 sh
(\272) 6605 556 sh
(\272) 8736 556 sh
(\272) 7305 1018 sh
(\272) 12312 556 sh
(\272) 10931 1018 sh
320 /Times-Roman f1
( ) 412 556 sh
(,) 690 556 sh
(,) 1711 556 sh
( env) 2182 556 sh
(,) 235 1018 sh
(,) 1256 1018 sh
( ) 1727 1018 sh
( ) 2015 1018 sh
( type) 2287 1018 sh
( ) 4294 556 sh
( env) 4569 556 sh
( ) 3922 1018 sh
( ) 4210 1018 sh
( type) 4866 1018 sh
( ) 6501 556 sh
( ) 6789 556 sh
( type) 7061 556 sh
( ) 8632 556 sh
( ) 8920 556 sh
( type) 9192 556 sh
( ) 7201 1018 sh
( ) 7489 1018 sh
( type) 8492 1018 sh
(,) 11195 556 sh
( ) 12208 556 sh
( ) 12496 556 sh
( type) 12768 556 sh
( ) 10827 1018 sh
( ) 11115 1018 sh
( type) 13133 1018 sh
320 /Courier f1
(<:) 1109 556 sh
(<:) 654 1018 sh
(Top) 4484 218 sh
(Top) 4290 1018 sh
(All) 11389 218 sh
(<:) 11614 556 sh
(All\() 11195 1018 sh
(<:) 12238 1018 sh
(\)) 12820 1018 sh
320 /Symbol f1
(-) 7084 218 sh
(>) 7343 218 sh
(-) 7786 1018 sh
(>) 8045 1018 sh
end MTsave restore
pse
1 1 pen
308 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Subtypes)show
353 108 gm
(nc 316 108 353 496 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
353 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
353 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
353 496 gm
0 gr
353 496 lin
psb
currentpoint
pse
316 108 gm
316 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12416 div 1184 3 -1 roll exch div scale
currentpoint translate 64 47 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 713 moveto 1506 0 rlineto stroke
2255 705 moveto 3667 0 rlineto stroke
6671 688 moveto 3023 0 rlineto stroke
10443 682 moveto 1855 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Sub refl\)) -13 249 sh
(E) 67 587 sh
(E) 37 1049 sh
(\(Sub trans\)) 2242 250 sh
(E) 2292 579 sh
(E) 4472 579 sh
(E) 3381 1041 sh
(\(Sub ) 6658 233 sh
(\)) 7560 233 sh
(E) 7204 562 sh
(E') 8556 562 sh
(E) 6708 1024 sh
(E') 8060 1024 sh
(\(Sub ) 10430 218 sh
(\)) 11677 218 sh
(E) 10684 556 sh
(E) 10480 1018 sh
320 /Times-Roman f1
( ) 262 587 sh
( ) 550 587 sh
( type) 822 587 sh
( ) 232 1049 sh
( ) 520 1049 sh
( ) 2487 579 sh
( ) 2775 579 sh
( ) 4667 579 sh
( ) 4955 579 sh
( ) 3576 1041 sh
( ) 3864 1041 sh
( ) 7124 562 sh
(,) 7402 562 sh
(,) 8423 562 sh
( env) 8894 562 sh
(,) 6906 1024 sh
(,) 7927 1024 sh
( ) 8398 1024 sh
( ) 8686 1024 sh
( ) 10879 556 sh
( ) 11167 556 sh
( type) 11439 556 sh
( ) 10675 1018 sh
( ) 10963 1018 sh
320 /LicsPlain f1
(\272) 366 587 sh
(\272) 336 1049 sh
(\272) 2591 579 sh
(\272) 4771 579 sh
(\272) 3680 1041 sh
(\272) 6940 562 sh
(\272) 8502 1024 sh
(\272) 10983 556 sh
(\272) 10779 1018 sh
320 /Courier-Oblique f1
(A) 630 587 sh
(A) 600 1049 sh
(A) 1278 1049 sh
(A) 2855 579 sh
(B) 3523 579 sh
(B) 5035 579 sh
(C) 5681 579 sh
(A) 3944 1041 sh
(C) 4591 1041 sh
(X) 7324 233 sh
(X) 7523 562 sh
(A) 8223 562 sh
(X) 7027 1024 sh
(A) 7727 1024 sh
(X) 8766 1024 sh
(A) 9466 1024 sh
(A) 11247 556 sh
(A) 11043 1018 sh
320 /Courier f1
(<:) 876 1049 sh
(<:) 3131 579 sh
(<:) 5310 579 sh
(<:) 4220 1041 sh
(<:) 7821 562 sh
(<:) 7325 1024 sh
(<:) 9064 1024 sh
(Top) 11096 218 sh
(<:Top) 11319 1018 sh
end MTsave restore
pse
1 1 pen
395 108 gm
(nc 359 108 395 436 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
395 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
395 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
395 436 gm
0 gr
395 436 lin
psb
currentpoint
pse
359 108 gm
359 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10496 div 1152 3 -1 roll exch div scale
currentpoint translate 64 62 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 693 moveto 3940 0 rlineto stroke
4689 673 moveto 5702 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Sub ) -13 238 sh
(\)) 1118 238 sh
(E) 37 567 sh
(E) 2339 567 sh
(E) 171 1029 sh
(\(Sub ) 4676 218 sh
(\)) 5912 218 sh
(E) 4994 547 sh
(E) 7296 547 sh
(E) 4726 1009 sh
320 /Symbol f1
(-) 674 238 sh
(>) 933 238 sh
(-) 951 1029 sh
(>) 1210 1029 sh
(-) 2921 1029 sh
(>) 3180 1029 sh
320 /Times-Roman f1
( ) 232 567 sh
( ) 520 567 sh
( ) 2534 567 sh
( ) 2822 567 sh
( ) 366 1029 sh
( ) 654 1029 sh
( ) 5189 547 sh
( ) 5477 547 sh
(,) 7494 547 sh
( ) 8718 547 sh
( ) 9006 547 sh
( ) 4921 1009 sh
( ) 5209 1009 sh
320 /LicsPlain f1
(\272) 336 567 sh
(\272) 2638 567 sh
(\272) 470 1029 sh
(\272) 5293 547 sh
(\272) 8822 547 sh
(\272) 5025 1009 sh
320 /Courier-Oblique f1
(A\251) 600 567 sh
(A) 1389 567 sh
(B) 2902 567 sh
(B\251) 3569 567 sh
(A) 734 1029 sh
(B) 1465 1029 sh
(A\251) 2521 1029 sh
(B\251) 3435 1029 sh
(A\251) 5557 547 sh
(A) 6346 547 sh
(X) 7615 547 sh
(A\251) 8315 547 sh
(B) 9086 547 sh
(B\251) 9753 547 sh
(X) 6034 1009 sh
(A) 6734 1009 sh
(B) 7035 1009 sh
(X) 8836 1009 sh
(A\251) 9536 1009 sh
(B\251) 10020 1009 sh
320 /Courier f1
(<:) 987 567 sh
(<:) 3177 567 sh
( ) 1657 1029 sh
(<:) 1929 1029 sh
( ) 2329 1029 sh
(All) 5342 218 sh
(<:) 5944 547 sh
(<:) 7913 547 sh
(<:) 9361 547 sh
(All\() 5289 1009 sh
(<:) 6332 1009 sh
(\)) 6914 1009 sh
( ) 7227 1009 sh
(<:) 7499 1009 sh
( All\() 7899 1009 sh
(<:) 9134 1009 sh
(\)) 9899 1009 sh
end MTsave restore
pse
1 1 pen
421 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Terms)show
466 108 gm
(nc 429 108 466 404 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
466 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
466 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
466 404 gm
0 gr
466 404 lin
psb
currentpoint
pse
429 108 gm
429 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9472 div 1184 3 -1 roll exch div scale
currentpoint translate 64 47 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 709 moveto 3414 0 rlineto stroke
4163 688 moveto 2475 0 rlineto stroke
7387 682 moveto 1966 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Subsumption\)) -13 246 sh
(E) 37 583 sh
(E) 1956 583 sh
(E) 1133 1045 sh
(\(Term ) 4150 233 sh
(\)) 5210 233 sh
(E) 4560 562 sh
(E') 5636 562 sh
(E) 4200 1024 sh
(E') 5276 1024 sh
(\(Term ) 7374 218 sh
(\)) 8815 218 sh
(E) 8139 556 sh
(E) 7424 1018 sh
320 /Times-Roman f1
( ) 232 583 sh
( ) 520 583 sh
( ) 2151 583 sh
( ) 2439 583 sh
( ) 1328 1045 sh
( ) 1616 1045 sh
( ) 4480 562 sh
(,) 4758 562 sh
(,) 5503 562 sh
( env) 5974 562 sh
(,) 4398 1024 sh
(,) 5143 1024 sh
( ) 5614 1024 sh
( ) 5902 1024 sh
( ) 8059 556 sh
( env) 8334 556 sh
( ) 7619 1018 sh
( ) 7907 1018 sh
320 /LicsPlain f1
(\272) 336 583 sh
(\272) 2255 583 sh
(\272) 1432 1045 sh
(\272) 4296 562 sh
(\272) 5718 1024 sh
(\272) 7875 556 sh
(\272) 7723 1018 sh
320 /Courier-Oblique f1
(a) 600 583 sh
(A) 1006 583 sh
(A) 2519 583 sh
(B) 3187 583 sh
(a) 1696 1045 sh
(B) 2092 1045 sh
(x) 4875 562 sh
(A) 5303 562 sh
(x) 4515 1024 sh
(A) 4943 1024 sh
(x) 5982 1024 sh
(A) 6410 1024 sh
320 /Courier f1
(:) 796 583 sh
(<:) 2795 583 sh
(:) 1892 1045 sh
(x) 5010 233 sh
(:) 5093 562 sh
(:) 4733 1024 sh
(:) 6200 1024 sh
(top) 8234 218 sh
(top) 7987 1018 sh
(:Top) 8566 1018 sh
end MTsave restore
pse
1 1 pen
509 108 gm
(nc 472 108 509 377 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
509 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
509 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
509 377 gm
0 gr
509 377 lin
psb
currentpoint
pse
472 108 gm
472 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8608 div 1184 3 -1 roll exch div scale
currentpoint translate 64 57 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 682 moveto 3835 0 rlineto stroke
4584 682 moveto 3898 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term fun\)) -13 218 sh
(E) 965 556 sh
(E) 37 1018 sh
(\(Term appl\)) 4571 219 sh
(E) 4621 556 sh
(E) 7285 556 sh
(E) 5532 1018 sh
320 /Times-Roman f1
(,) 1163 556 sh
( ) 1900 556 sh
( ) 2188 556 sh
( ) 232 1018 sh
( ) 520 1018 sh
( ) 4816 556 sh
( ) 5104 556 sh
( ) 7480 556 sh
( ) 7768 556 sh
( ) 5727 1018 sh
( ) 6015 1018 sh
320 /Courier-Oblique f1
(x) 1280 556 sh
(A) 1708 556 sh
(b) 2268 556 sh
(B) 2679 556 sh
(x) 1341 1018 sh
(A) 1769 1018 sh
(b) 2077 1018 sh
(A) 2877 1018 sh
(B) 3608 1018 sh
(b) 5184 556 sh
(A) 5605 556 sh
(B) 6336 556 sh
(a) 7848 556 sh
(A) 8254 556 sh
(b) 6095 1018 sh
(a) 6380 1018 sh
(B) 7344 1018 sh
320 /Courier f1
(:) 1498 556 sh
(:) 2479 556 sh
(fun\() 600 1018 sh
(:) 1559 1018 sh
(\)) 1949 1018 sh
( ) 2269 1018 sh
(:) 2477 1018 sh
( ) 2685 1018 sh
(:) 5395 556 sh
(:) 8044 556 sh
(\() 6227 1018 sh
(\) ) 6544 1018 sh
(:) 6944 1018 sh
( ) 7152 1018 sh
320 /LicsPlain f1
(\272) 2004 556 sh
(\272) 336 1018 sh
(\272) 4920 556 sh
(\272) 7584 556 sh
(\272) 5831 1018 sh
320 /Symbol f1
(-) 3094 1018 sh
(>) 3353 1018 sh
(-) 5822 556 sh
(>) 6081 556 sh
end MTsave restore
pse
1 1 pen
552 108 gm
(nc 515 108 552 461 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
552 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
552 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
552 461 gm
0 gr
552 461 lin
psb
currentpoint
pse
515 108 gm
515 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11296 div 1184 3 -1 roll exch div scale
currentpoint translate 64 54 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 685 moveto 5126 0 rlineto stroke
5875 682 moveto 5297 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term fun2\)) -13 221 sh
(E) 1473 559 sh
(E) 37 1021 sh
(\(Term appl2\)) 5862 219 sh
(E) 5912 556 sh
(E) 9592 556 sh
(E) 6651 1018 sh
320 /Times-Roman f1
(,) 1671 559 sh
( ) 2684 559 sh
( ) 2972 559 sh
( ) 232 1021 sh
( ) 520 1021 sh
( ) 6107 556 sh
( ) 6395 556 sh
( ) 9787 556 sh
( ) 10075 556 sh
( ) 6846 1018 sh
( ) 7134 1018 sh
({) 9095 1018 sh
(}) 10283 1018 sh
320 /Courier-Oblique f1
(X) 1792 559 sh
(A) 2492 559 sh
(b) 3052 559 sh
(B) 3463 559 sh
(X) 1345 1021 sh
(A) 2045 1021 sh
(b) 2353 1021 sh
(X) 3898 1021 sh
(A) 4598 1021 sh
(B) 4899 1021 sh
(b) 6475 556 sh
(X) 7642 556 sh
(A) 8342 556 sh
(B) 8643 556 sh
(A\251) 10155 556 sh
(A) 10944 556 sh
(b) 7214 1018 sh
(A\251) 7748 1018 sh
(B) 8911 1018 sh
(X) 9221 1018 sh
(A\251) 9924 1018 sh
320 /Courier f1
(<:) 2090 559 sh
(:) 3263 559 sh
(fun\() 600 1021 sh
(<:) 1643 1021 sh
(\)) 2225 1021 sh
( ) 2545 1021 sh
(:) 2753 1021 sh
( All\() 2961 1021 sh
(<:) 4196 1021 sh
(\)) 4778 1021 sh
(:) 6686 556 sh
(All\() 6897 556 sh
(<:) 7940 556 sh
(\)) 8522 556 sh
(<:) 10542 556 sh
(\(:) 7346 1018 sh
(\) ) 8111 1018 sh
(:) 8511 1018 sh
( ) 8719 1018 sh
320 /LicsPlain f1
(\272) 2788 559 sh
(\272) 336 1021 sh
(\272) 6211 556 sh
(\272) 9891 556 sh
(\272) 6950 1018 sh
320 /Symbol f1
(\254) 9525 1018 sh
end MTsave restore
pse
F T cp
%%Page: ? 33
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(33)show
102 108 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
-0.00218 0.(In preparation for the typing algorithms, these are the same type rules expressed with de Bruijn indices.)ashow
116 90 gm
0.06973 0. 32 0.00697 0.(The notation )awidthshow
116 144 gm
9 fz
bu fc
2 F /|______LicsPlain fnt
bn
(\354)show
2 fs
10 fz
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.06683 0. 32 0.00668 0.( stands for either )awidthshow
116 224 gm
bu fc
2 F /|______Courier fnt
bn
0.05354 0.(:)ashow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.05354 0.(A)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.05172 0. 32 0.00517 0.( or )awidthshow
116 250 gm
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01037 0.(Lifting)ashow
116 300 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.09704 0. 32 0.00970 0.( is )awidthshow
120 312 gm
(nc 106 312 120 329 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
120 312 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
120 329 gm
0 gr
120 329 lin
psb
currentpoint
pse
106 312 gm
106 312 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
544 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 288 sh
320 /LicsPlain f1
(\246) 158 288 sh
192 /Times-Italic f1
(i) 383 368 sh
end MTsave restore
pse
116 329 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02746 0. 32 0.00274 0.(, and )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.01379 0.(substitution)ashow
116 398 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.09704 0. 32 0.00970 0.( is )awidthshow
119 410 gm
(nc 108 410 119 450 6 rc)kp
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
119 450 gm
0 gr
119 450 lin
psb
currentpoint
pse
108 410 gm
108 410 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
1280 div 352 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) -8 218 sh
(A) 865 218 sh
320 /Times-Roman f1
({) 176 218 sh
(}) 1041 218 sh
320 /Times-Italic f1
(i) 296 218 sh
320 /Symbol f1
(\254) 466 218 sh
end MTsave restore
pse
116 450 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07965 0. 32 0.00796 0.(; the latter is to be)awidthshow
130 90 gm
(invoked as )show
133 136 gm
(nc 122 136 133 178 6 rc)kp
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
133 178 gm
0 gr
133 178 lin
psb
currentpoint
pse
122 136 gm
122 136 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
1344 div 352 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) -8 218 sh
(A) 940 218 sh
320 /Times-Roman f1
({1) 176 218 sh
(}) 1116 218 sh
320 /Symbol f1
(\254) 541 218 sh
end MTsave restore
pse
130 178 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
152 108 gm
(nc 138 108 152 432 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
152 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
152 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
152 432 gm
0 gr
152 432 lin
psb
currentpoint
pse
138 108 gm
138 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10368 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 288 sh
(A) 827 288 sh
(n) 2200 288 sh
(n ) 2996 288 sh
(n) 3499 288 sh
(n) 5158 288 sh
(n) 5954 288 sh
( ) 6560 288 sh
(n) 6871 288 sh
320 /LicsPlain f1
(\246) 158 288 sh
(\246) 983 288 sh
(\246) 2340 288 sh
(\246) 5298 288 sh
(\246) 9048 288 sh
192 /Times-Italic f1
(i) 383 368 sh
(i) 1208 368 sh
(i) 2565 368 sh
(j) 2552 146 sh
(i) 5523 368 sh
(j) 5510 146 sh
(i) 9273 368 sh
(j) 9260 146 sh
320 ns
(j) 4064 288 sh
(i) 6472 288 sh
(j) 7436 288 sh
320 /Symbol f1
(=) 558 288 sh
(=) 2740 288 sh
(=) 5698 288 sh
(=) 9448 288 sh
192 /Times-Roman f1
(0) 1171 146 sh
320 /Times-Roman f1
( ;) 1318 288 sh
(\() 3389 288 sh
(\) ;) 4170 288 sh
(\() 6761 288 sh
(\) ;) 7542 288 sh
320 /Symbol f1
(\243) 3766 288 sh
(>) 7139 288 sh
320 /Courier f1
(+) 6214 288 sh
(Top) 8525 288 sh
(Top) 9699 288 sh
end MTsave restore
pse
167 108 gm
(nc 153 108 167 401 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
167 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
167 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
167 401 gm
0 gr
167 401 lin
psb
currentpoint
pse
153 108 gm
153 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9376 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Roman f1
(\() -15 288 sh
(\)) 1049 288 sh
( ;) 3459 288 sh
(\() 4337 288 sh
(\)) 6142 288 sh
320 /Courier-Oblique f1
(A) 108 288 sh
(B) 839 288 sh
(A) 1768 288 sh
(B) 2766 288 sh
(A) 5631 288 sh
(B) 5932 288 sh
(A) 8032 288 sh
(B) 8600 288 sh
320 /Symbol f1
(-) 325 288 sh
(>) 584 288 sh
(-) 2252 288 sh
(>) 2511 288 sh
320 /LicsPlain f1
(\246) 1099 288 sh
(\246) 1924 288 sh
(\246) 2921 288 sh
(\246) 6192 288 sh
(\246) 8188 288 sh
(\246) 8755 288 sh
192 /Times-Italic f1
(i) 1324 368 sh
(j) 1311 146 sh
(i) 2149 368 sh
(j) 2136 146 sh
(i) 3146 368 sh
(j) 3133 146 sh
(i) 6417 368 sh
(j) 6404 146 sh
(i) 8413 368 sh
(j) 8400 146 sh
(i) 8980 368 sh
(j) 8967 146 sh
320 /Symbol f1
(=) 1499 288 sh
(=) 6592 288 sh
192 /Times-Roman f1
(+) 3215 146 sh
(1) 3328 146 sh
(+) 9049 146 sh
(1) 9162 146 sh
320 /Courier f1
(All\(<:) 4461 288 sh
(\)) 5811 288 sh
(All\(<:) 6862 288 sh
(\)) 8479 288 sh
end MTsave restore
pse
187 108 gm
(nc 173 108 187 521 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
187 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
187 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
187 521 gm
0 gr
187 521 lin
psb
currentpoint
pse
173 108 gm
173 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13216 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(n) -11 288 sh
(C) 816 288 sh
(n ) 1472 288 sh
(n) 1975 288 sh
(n) 3580 288 sh
(n) 3871 288 sh
(C) 4505 288 sh
(C) 5143 288 sh
(n) 6734 288 sh
(C) 7561 288 sh
(n) 8217 288 sh
( ) 8783 288 sh
(n) 9094 288 sh
(C) 11904 288 sh
320 /Times-Roman f1
({) 158 288 sh
(}) 1005 288 sh
(\() 1865 288 sh
(\) ;) 2592 288 sh
({) 3749 288 sh
(}) 4694 288 sh
( ;) 5852 288 sh
({) 6903 288 sh
(}) 7750 288 sh
(\() 8984 288 sh
(\) ;) 9711 288 sh
({) 11246 288 sh
(}) 12093 288 sh
320 /Times-Italic f1
(i) 278 288 sh
(i) 2493 288 sh
(i) 7023 288 sh
(i) 9612 288 sh
(i) 11366 288 sh
192 ns
(n) 5541 368 sh
320 /Symbol f1
(\254) 448 288 sh
(<) 2243 288 sh
(\254) 4137 288 sh
(\254) 7193 288 sh
(>) 9362 288 sh
(\254) 11536 288 sh
320 /Symbol f1
(=) 1216 288 sh
(=) 4905 288 sh
(=) 7961 288 sh
(=) 12304 288 sh
320 /LicsPlain f1
(\246) 5312 288 sh
192 /Times-Roman f1
(-) 5655 368 sh
(1) 5721 368 sh
320 ns
(-) 8480 288 sh
(1) 8633 288 sh
320 /Courier f1
(Top) 10694 288 sh
(Top) 12555 288 sh
end MTsave restore
pse
201 108 gm
(nc 189 108 201 547 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
201 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
201 547 gm
0 gr
201 547 lin
psb
currentpoint
pse
189 108 gm
189 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
14048 div 384 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Roman f1
(\() -15 218 sh
(\){) 1049 218 sh
(}) 2002 218 sh
({) 2667 218 sh
(}) 3514 218 sh
({) 4351 218 sh
(} ;) 5642 218 sh
(\() 6673 218 sh
(\){) 8478 218 sh
(}) 9431 218 sh
({) 11267 218 sh
(}) 12114 218 sh
({) 12521 218 sh
(}) 13812 218 sh
320 /Courier-Oblique f1
(A) 108 218 sh
(B) 839 218 sh
(C) 1813 218 sh
(A) 2482 218 sh
(C) 3325 218 sh
(B) 4167 218 sh
(C) 5453 218 sh
(A) 7967 218 sh
(B) 8268 218 sh
(C) 9242 218 sh
(A) 11082 218 sh
(C) 11925 218 sh
(B) 12337 218 sh
(C) 13623 218 sh
320 /Symbol f1
(-) 325 218 sh
(>) 584 218 sh
(\254) 1445 218 sh
(\254) 2957 218 sh
(-) 3653 218 sh
(>) 3912 218 sh
(\254) 5085 218 sh
(\254) 8874 218 sh
(\254) 11557 218 sh
(\254) 13255 218 sh
320 /Times-Italic f1
(i) 1275 218 sh
(i) 2787 218 sh
(i) 4471 218 sh
(i) 8704 218 sh
(i) 11387 218 sh
(i) 12641 218 sh
320 /Symbol f1
(=) 2213 218 sh
(=) 9642 218 sh
320 /Times-Roman f1
(+) 4642 218 sh
(1) 4873 218 sh
(+) 12812 218 sh
(1) 13043 218 sh
320 /Courier f1
(All\(<:) 6797 218 sh
(\)) 8147 218 sh
(All\(<:) 9912 218 sh
(\)) 12216 218 sh
end MTsave restore
pse
227 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Environments)show
272 108 gm
(nc 235 108 272 303 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
272 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
272 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
272 303 gm
0 gr
272 303 lin
psb
currentpoint
pse
235 108 gm
235 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6240 div 1184 3 -1 roll exch div scale
currentpoint translate 64 52 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 674 moveto 1371 0 rlineto stroke
2120 683 moveto 1507 0 rlineto stroke
4376 683 moveto 1763 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Env ) -13 218 sh
(\)) 872 218 sh
(E) 37 1010 sh
(\(Env ) 2107 228 sh
(\)) 3010 228 sh
(E) 2187 557 sh
(E) 2416 1019 sh
(\(Env ) 4363 228 sh
(\)) 5282 228 sh
(E) 4571 557 sh
(E) 4672 1019 sh
320 /LicsPlain f1
(\360) 694 218 sh
(\272) 336 1010 sh
(\360) 624 1010 sh
(\272) 2486 557 sh
(\272) 2152 1019 sh
(\272) 4870 557 sh
(\272) 4408 1019 sh
320 /Times-Roman f1
( ) 232 1010 sh
( ) 520 1010 sh
( env) 808 1010 sh
( ) 2382 557 sh
( ) 2670 557 sh
( type) 2942 557 sh
( ) 2336 1019 sh
(,) 2614 1019 sh
( env) 3064 1019 sh
( ) 4766 557 sh
( ) 5054 557 sh
( type) 5326 557 sh
( ) 4592 1019 sh
(,) 4870 1019 sh
( env) 5576 1019 sh
320 /Courier-Oblique f1
(x) 2790 228 sh
(A) 2750 557 sh
(A) 2872 1019 sh
(X) 5046 228 sh
(A) 5134 557 sh
(A) 5384 1019 sh
320 /Courier f1
(:) 2662 1019 sh
(<:) 4982 1019 sh
end MTsave restore
pse
1 1 pen
298 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Types)show
343 108 gm
(nc 306 108 343 518 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
343 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
343 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
343 518 gm
0 gr
343 518 lin
psb
currentpoint
pse
306 108 gm
306 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13120 div 1184 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 685 moveto 3837 0 rlineto stroke
4586 690 moveto 1830 0 rlineto stroke
7165 690 moveto 2177 0 rlineto stroke
10091 690 moveto 2917 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Type ) -13 218 sh
(\)) 1030 218 sh
(E) 492 556 sh
(E) 37 1021 sh
(\(Type ) 4573 226 sh
(\)) 5961 226 sh
(E) 5270 564 sh
(E) 4623 1026 sh
(\(Type ) 7152 226 sh
(\)) 8424 226 sh
(E) 7341 564 sh
(E) 7202 1026 sh
(\(Type ) 10078 226 sh
(\)) 11455 226 sh
(E) 10509 564 sh
(E) 10128 1026 sh
192 ns
(n) 1877 636 sh
(n) 1422 1101 sh
320 /Courier-Oblique f1
(X) 794 218 sh
(A) 1204 556 sh
(A) 1672 556 sh
(A) 2783 556 sh
(A) 749 1021 sh
(A) 1217 1021 sh
(A) 2328 1021 sh
(n) 2991 1021 sh
(A) 7797 564 sh
(B) 8357 564 sh
(A) 7765 1026 sh
(B) 8496 1026 sh
(A) 11221 564 sh
(B) 11781 564 sh
(A) 11861 1026 sh
(B) 12162 1026 sh
320 /LicsPlain f1
(\272) 228 556 sh
(\354) 1532 556 sh
(\354) 2643 556 sh
(\354) 1077 1021 sh
(\354) 2188 1021 sh
(\272) 2727 1021 sh
(\272) 5006 564 sh
(\272) 4922 1026 sh
(\272) 8093 564 sh
(\272) 7501 1026 sh
(\272) 11517 564 sh
(\272) 10427 1026 sh
320 /Times-Roman f1
( ) 412 556 sh
(,) 690 556 sh
(,) 1404 556 sh
(,) 2168 556 sh
(...,) 2275 556 sh
( env) 3078 556 sh
(,) 235 1021 sh
(,) 949 1021 sh
(,) 1713 1021 sh
(...,) 1820 1021 sh
( ) 2623 1021 sh
( ) 2911 1021 sh
( type) 3183 1021 sh
( ) 5190 564 sh
( env) 5465 564 sh
( ) 4818 1026 sh
( ) 5106 1026 sh
( type) 5762 1026 sh
(,) 7539 564 sh
( ) 7989 564 sh
( ) 8277 564 sh
( type) 8549 564 sh
( ) 7397 1026 sh
( ) 7685 1026 sh
( type) 8688 1026 sh
(,) 10707 564 sh
( ) 11413 564 sh
( ) 11701 564 sh
( type) 11973 564 sh
( ) 10323 1026 sh
( ) 10611 1026 sh
( type) 12354 1026 sh
320 /Courier f1
(<:) 802 556 sh
(<:) 347 1021 sh
(Top) 5380 226 sh
(Top) 5186 1026 sh
(:) 7587 564 sh
(All) 10885 226 sh
(<:) 10819 564 sh
(All\(<:) 10691 1026 sh
(\)) 12041 1026 sh
192 /Times-Roman f1
(-) 1991 636 sh
(1) 2057 636 sh
(1) 2971 636 sh
(-) 1536 1101 sh
(1) 1602 1101 sh
(1) 2516 1101 sh
320 /Symbol f1
(-) 7980 226 sh
(>) 8239 226 sh
(-) 7982 1026 sh
(>) 8241 1026 sh
end MTsave restore
pse
1 1 pen
369 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Subtypes)show
414 108 gm
(nc 377 108 414 532 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
414 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
414 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
414 532 gm
0 gr
414 532 lin
psb
currentpoint
pse
377 108 gm
377 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13568 div 1184 3 -1 roll exch div scale
currentpoint translate 64 43 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 717 moveto 1506 0 rlineto stroke
2255 709 moveto 3667 0 rlineto stroke
6671 676 moveto 4192 0 rlineto stroke
11612 686 moveto 1855 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Sub refl\)) -13 253 sh
(E) 67 591 sh
(E) 37 1053 sh
(\(Sub trans\)) 2242 254 sh
(E) 2292 583 sh
(E) 4472 583 sh
(E) 3381 1045 sh
(\(Sub ) 6658 218 sh
(\)) 7560 218 sh
(E) 7341 547 sh
(E) 6708 1012 sh
(\(Sub ) 11599 222 sh
(\)) 12846 222 sh
(E) 11853 560 sh
(E) 11649 1022 sh
192 ns
(n) 8726 627 sh
(n) 8093 1092 sh
(n) 10709 1092 sh
320 /Times-Roman f1
( ) 262 591 sh
( ) 550 591 sh
( type) 822 591 sh
( ) 232 1053 sh
( ) 520 1053 sh
( ) 2487 583 sh
( ) 2775 583 sh
( ) 4667 583 sh
( ) 4955 583 sh
( ) 3576 1045 sh
( ) 3864 1045 sh
( ) 7261 547 sh
(,) 7539 547 sh
(,) 8253 547 sh
(,) 9017 547 sh
(...,) 9124 547 sh
( env) 9927 547 sh
(,) 6906 1012 sh
(,) 7620 1012 sh
(,) 8384 1012 sh
(...,) 8491 1012 sh
( ) 9294 1012 sh
( ) 9582 1012 sh
( ) 12048 560 sh
( ) 12336 560 sh
( type) 12608 560 sh
( ) 11844 1022 sh
( ) 12132 1022 sh
320 /LicsPlain f1
(\272) 366 591 sh
(\272) 336 1053 sh
(\272) 2591 583 sh
(\272) 4771 583 sh
(\272) 3680 1045 sh
(\272) 7077 547 sh
(\354) 8381 547 sh
(\354) 9492 547 sh
(\354) 7748 1012 sh
(\354) 8859 1012 sh
(\272) 9398 1012 sh
(\246) 10480 1012 sh
(\272) 12152 560 sh
(\272) 11948 1022 sh
320 /Courier-Oblique f1
(A) 630 591 sh
(A) 600 1053 sh
(A) 1278 1053 sh
(A) 2855 583 sh
(B) 3523 583 sh
(B) 5035 583 sh
(C) 5681 583 sh
(A) 3944 1045 sh
(C) 4591 1045 sh
(X) 7324 218 sh
(A) 8053 547 sh
(A) 8521 547 sh
(A) 9632 547 sh
(A) 7420 1012 sh
(A) 7888 1012 sh
(A) 8999 1012 sh
(n) 9662 1012 sh
(A) 10324 1012 sh
(A) 12416 560 sh
(A) 12212 1022 sh
320 /Courier f1
(<:) 876 1053 sh
(<:) 3131 583 sh
(<:) 5310 583 sh
(<:) 4220 1045 sh
(<:) 7651 547 sh
(<:) 7018 1012 sh
(<:) 9922 1012 sh
(Top) 12265 222 sh
(<:Top) 12488 1022 sh
192 /Times-Roman f1
(-) 8840 627 sh
(1) 8906 627 sh
(1) 9820 627 sh
(-) 8207 1092 sh
(1) 8273 1092 sh
(1) 9187 1092 sh
end MTsave restore
pse
1 1 pen
456 108 gm
(nc 420 108 456 440 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
456 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
456 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
456 440 gm
0 gr
456 440 lin
psb
currentpoint
pse
420 108 gm
420 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10624 div 1152 3 -1 roll exch div scale
currentpoint translate 64 62 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 693 moveto 4604 0 rlineto stroke
5353 673 moveto 5152 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Sub ) -13 238 sh
(\)) 1118 238 sh
(E) 37 567 sh
(E) 2339 567 sh
(E) 503 1029 sh
(\(Sub ) 5340 218 sh
(\)) 6576 218 sh
(E) 5536 547 sh
(E) 7838 547 sh
(E) 5390 1009 sh
320 /Symbol f1
(-) 674 238 sh
(>) 933 238 sh
(-) 1283 1029 sh
(>) 1542 1029 sh
(-) 3253 1029 sh
(>) 3512 1029 sh
320 /Times-Roman f1
( ) 232 567 sh
( ) 520 567 sh
(,) 2537 567 sh
( ) 3198 567 sh
( ) 3486 567 sh
( ) 698 1029 sh
( ) 986 1029 sh
( ) 5731 547 sh
( ) 6019 547 sh
(,) 8036 547 sh
( ) 8953 547 sh
( ) 9241 547 sh
( ) 5585 1009 sh
( ) 5873 1009 sh
320 /LicsPlain f1
(\272) 336 567 sh
(\272) 3302 567 sh
(\272) 802 1029 sh
(\272) 5835 547 sh
(\272) 9057 547 sh
(\272) 5689 1009 sh
320 /Courier-Oblique f1
(A\251) 600 567 sh
(A) 1389 567 sh
(A\251) 2795 567 sh
(B) 3566 567 sh
(B\251) 4233 567 sh
(A) 1066 1029 sh
(B) 1797 1029 sh
(A\251) 2853 1029 sh
(B\251) 3767 1029 sh
(A\251) 6099 547 sh
(A) 6888 547 sh
(A\251) 8550 547 sh
(B) 9321 547 sh
(B\251) 9988 547 sh
(A) 7123 1009 sh
(B) 7424 1009 sh
(A\251) 9650 1009 sh
(B\251) 10134 1009 sh
320 /Courier f1
(<:) 987 567 sh
(:) 2585 567 sh
(<:) 3841 567 sh
( ) 1989 1029 sh
(<:) 2261 1029 sh
( ) 2661 1029 sh
(All) 6006 218 sh
(<:) 6486 547 sh
(<:) 8148 547 sh
(<:) 9596 547 sh
(All\(<:) 5953 1009 sh
(\)) 7303 1009 sh
( ) 7616 1009 sh
(<:) 7888 1009 sh
( All\(<:) 8288 1009 sh
(\)) 10013 1009 sh
end MTsave restore
pse
1 1 pen
482 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Terms)show
527 108 gm
(nc 490 108 527 441 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
527 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
527 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
527 441 gm
0 gr
527 441 lin
psb
currentpoint
pse
490 108 gm
490 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10656 div 1184 3 -1 roll exch div scale
currentpoint translate 64 43 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 713 moveto 3414 0 rlineto stroke
4163 676 moveto 3680 0 rlineto stroke
8592 686 moveto 1966 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Subsumption\)) -13 250 sh
(E) 37 587 sh
(E) 1956 587 sh
(E) 1133 1049 sh
(\(Term ) 4150 218 sh
(\)) 5210 218 sh
(E) 4705 547 sh
(E) 4200 1012 sh
(\(Term ) 8579 222 sh
(\)) 10020 222 sh
(E) 9344 560 sh
(E) 8629 1022 sh
192 ns
(n) 5834 627 sh
(n) 5329 1092 sh
(n) 7689 1092 sh
320 /Times-Roman f1
( ) 232 587 sh
( ) 520 587 sh
( ) 2151 587 sh
( ) 2439 587 sh
( ) 1328 1049 sh
( ) 1616 1049 sh
( ) 4625 547 sh
(,) 4903 547 sh
(,) 5361 547 sh
(,) 6125 547 sh
(...,) 6232 547 sh
( env) 7035 547 sh
(,) 4398 1012 sh
(,) 4856 1012 sh
(,) 5620 1012 sh
(...,) 5727 1012 sh
( ) 6530 1012 sh
( ) 6818 1012 sh
( ) 9264 560 sh
( env) 9539 560 sh
( ) 8824 1022 sh
( ) 9112 1022 sh
320 /LicsPlain f1
(\272) 336 587 sh
(\272) 2255 587 sh
(\272) 1432 1049 sh
(\272) 4441 547 sh
(\354) 5489 547 sh
(\354) 6600 547 sh
(\354) 4984 1012 sh
(\354) 6095 1012 sh
(\272) 6634 1012 sh
(\246) 7460 1012 sh
(\272) 9080 560 sh
(\272) 8928 1022 sh
320 /Courier-Oblique f1
(a) 600 587 sh
(A) 1006 587 sh
(A) 2519 587 sh
(B) 3187 587 sh
(a) 1696 1049 sh
(B) 2092 1049 sh
(A) 5161 547 sh
(A) 5629 547 sh
(A) 6740 547 sh
(A) 4656 1012 sh
(A) 5124 1012 sh
(A) 6235 1012 sh
(n) 6898 1012 sh
(A) 7304 1012 sh
320 /Courier f1
(:) 796 587 sh
(<:) 2795 587 sh
(:) 1892 1049 sh
(x) 5010 218 sh
(:) 4951 547 sh
(:) 4446 1012 sh
(:) 7094 1012 sh
(top) 9439 222 sh
(top) 9192 1022 sh
(:Top) 9771 1022 sh
192 /Times-Roman f1
(-) 5948 627 sh
(1) 6014 627 sh
(1) 6928 627 sh
(-) 5443 1092 sh
(1) 5509 1092 sh
(1) 6423 1092 sh
end MTsave restore
pse
1 1 pen
570 108 gm
(nc 533 108 570 371 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
570 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
570 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
570 371 gm
0 gr
570 371 lin
psb
currentpoint
pse
533 108 gm
533 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8416 div 1184 3 -1 roll exch div scale
currentpoint translate 64 57 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 682 moveto 3644 0 rlineto stroke
4393 682 moveto 3898 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term fun\)) -13 218 sh
(E) 1014 556 sh
(E) 37 1018 sh
(\(Term appl\)) 4380 219 sh
(E) 4430 556 sh
(E) 7094 556 sh
(E) 5341 1018 sh
320 /Times-Roman f1
(,) 1212 556 sh
( ) 1662 556 sh
( ) 1950 556 sh
( ) 232 1018 sh
( ) 520 1018 sh
( ) 4625 556 sh
( ) 4913 556 sh
( ) 7289 556 sh
( ) 7577 556 sh
( ) 5536 1018 sh
( ) 5824 1018 sh
320 /Courier f1
(:) 1260 556 sh
(:) 2241 556 sh
(fun\(:) 600 1018 sh
(\)) 1758 1018 sh
( ) 2078 1018 sh
(:) 2286 1018 sh
( ) 2494 1018 sh
(:) 5204 556 sh
(:) 7853 556 sh
(\() 6036 1018 sh
(\) ) 6353 1018 sh
(:) 6753 1018 sh
( ) 6961 1018 sh
320 /Courier-Oblique f1
(A) 1470 556 sh
(b) 2030 556 sh
(B) 2441 556 sh
(A) 1578 1018 sh
(b) 1886 1018 sh
(A) 2686 1018 sh
(B) 3417 1018 sh
(b) 4993 556 sh
(A) 5414 556 sh
(B) 6145 556 sh
(a) 7657 556 sh
(A) 8063 556 sh
(b) 5904 1018 sh
(a) 6189 1018 sh
(B) 7153 1018 sh
320 /LicsPlain f1
(\272) 1766 556 sh
(\272) 336 1018 sh
(\272) 4729 556 sh
(\272) 7393 556 sh
(\272) 5640 1018 sh
320 /Symbol f1
(-) 2903 1018 sh
(>) 3162 1018 sh
(-) 5631 556 sh
(>) 5890 556 sh
end MTsave restore
pse
1 1 pen
613 108 gm
(nc 576 108 613 435 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
613 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
613 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
613 435 gm
0 gr
613 435 lin
psb
currentpoint
pse
576 108 gm
576 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10464 div 1184 3 -1 roll exch div scale
currentpoint translate 64 54 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 685 moveto 4576 0 rlineto stroke
5325 682 moveto 5022 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term fun2\)) -13 221 sh
(E) 1352 559 sh
(E) 37 1021 sh
(\(Term appl2\)) 5312 219 sh
(E) 5362 556 sh
(E) 8767 556 sh
(E) 6003 1018 sh
320 /Times-Roman f1
(,) 1550 559 sh
( ) 2256 559 sh
( ) 2544 559 sh
( ) 232 1021 sh
( ) 520 1021 sh
( ) 5557 556 sh
( ) 5845 556 sh
( ) 8962 556 sh
( ) 9250 556 sh
( ) 6198 1018 sh
( ) 6486 1018 sh
({) 8447 1018 sh
(}) 9557 1018 sh
320 /Courier f1
(<:) 1662 559 sh
(:) 2835 559 sh
(fun\(<:) 600 1021 sh
(\)) 1950 1021 sh
( ) 2270 1021 sh
(:) 2478 1021 sh
( All\(<:) 2686 1021 sh
(\)) 4228 1021 sh
(:) 6136 556 sh
(All\(<:) 6347 556 sh
(\)) 7697 556 sh
(<:) 9717 556 sh
(\(:) 6698 1018 sh
(\) ) 7463 1018 sh
(:) 7863 1018 sh
( ) 8071 1018 sh
(1) 8551 1018 sh
320 /Courier-Oblique f1
(A) 2064 559 sh
(b) 2624 559 sh
(B) 3035 559 sh
(A) 1770 1021 sh
(b) 2078 1021 sh
(A) 4048 1021 sh
(B) 4349 1021 sh
(b) 5925 556 sh
(A) 7517 556 sh
(B) 7818 556 sh
(A\251) 9330 556 sh
(A) 10119 556 sh
(b) 6566 1018 sh
(A\251) 7100 1018 sh
(B) 8263 1018 sh
(A\251) 9198 1018 sh
320 /LicsPlain f1
(\272) 2360 559 sh
(\272) 336 1021 sh
(\272) 5661 556 sh
(\272) 9066 556 sh
(\272) 6302 1018 sh
320 /Symbol f1
(\254) 8799 1018 sh
end MTsave restore
pse
F T cp
%%Page: ? 34
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(34)show
117 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix E. Typing algorithm)show
138 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.01205 0. 32 0.00120 0.(The parsing phase eliminates all the syntax extensions. A scoping phase converts variables to de Bruijn)awidthshow
152 90 gm
0.50445 0. 32 0.05044 0.(indices, and checks that all variables are properly bound. \(Variables in type contexts should be bound by)awidthshow
166 90 gm
0.54992 0. 32 0.05499 0.(type binders, while variables in term contexts should be bound by term binders.\) The scoping phase also)awidthshow
180 90 gm
0.37734 0. 32 0.03773 0.(expands all the top-level type definitions. Therefore, only the following data structures have to be consid)awidthshow
180 519 gm
(-)show
194 90 gm
(ered for typechecking \(where )show
194 210 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\263)show
bu fc
2 F /|______Times-Roman fnt
bn
(1\):)show
213 126 gm
(PreType)show
227 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S,T)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | Top | )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(->)show
227 263 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(T)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | All\(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(T)show
246 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(PreTerm)show
260 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a,b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | top | fun\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\) | fun\(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
279 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Env)show
293 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
bu fc
2 F /|______Courier fnt
bn
( | )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
312 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Type)show
326 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A,B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | Top | )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(->)show
326 263 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( | All\(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
354 108 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.07278 0. 32 0.00727 0.(The following algorithms are expressed in the form of deterministic labeled transition systems [Plotkin)awidthshow
368 90 gm
0.32897 0. 32 0.03289 0.(1981]. \(They can be read much as Prolog programs.\) Each kind of \322arrow\323 defines a \(functional\) relation.)awidthshow
382 90 gm
0.32958 0. 32 0.03295 0.(The name of the relation is on top of the arrow, the main parameters are on the left, additional parameters)awidthshow
396 90 gm
0.35354 0. 32 0.03535 0.(are below, and results are on the right. The main parameters are, by convention, the ones subject to struc)awidthshow
396 518 gm
(-)show
410 90 gm
0.72982 0. 32 0.07298 0.(tural induction. The signature of each relation is given in a box, and includes parameter names as com)awidthshow
410 518 gm
(-)show
424 90 gm
0.56228 0. 32 0.05622 0.(ments; the notation )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.17761 0.(a)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(:)show
424 180 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\(=)show
424 195 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.27389 0.(b)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.67001 0. 32 0.06700 0.(\) means that )awidthshow
424 255 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.24261 0.(b)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.60684 0. 32 0.06068 0.( is the default value of the parameter )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.24261 0.(a)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.73776 0. 32 0.07377 0.(, when that parameter is)awidthshow
438 90 gm
(omitted.)show
452 108 gm
0.41778 0. 32 0.04177 0.(There is a direct correspondence between each relation and a recursive procedure in the implementa)awidthshow
452 518 gm
(-)show
466 90 gm
(tion code, and between each rule and a case branch in the implementation code.)show
480 108 gm
0.13092 0. 32 0.01309 0.(To preserve all the internal invariants, we assumed that )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.04786 0.(type)ashow
480 350 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.19149 0. 32 0.01914 0.( and )awidthshow
480 370 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.03501 0.(term)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.12176 0. 32 0.01217 0.( are the top-level algorithms, and)awidthshow
494 90 gm
1.09542 0. 32 0.10954 0.(that they are started with an empty environment. Typechecking failure is \(implicitly\) represented as a)awidthshow
508 90 gm
(\322stuck\323 condition of the transition system.)show
522 108 gm
0.47790 0. 32 0.04779 0.(What follows is the now well known sound and complete algorithm for F-sub [Curien, Ghelli 1991])awidthshow
522 519 gm
(.)show
536 90 gm
0.02883 0. 32 0.00288 0.(Giorgio Ghelli has shown that this algorithm diverges in some situations where it should fail, and Benjamin)awidthshow
550 90 gm
(Pierce has further shown that the type system of Appendix D is undecidable [Pierce 1992].)show
578 90 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Lift)show
578 104 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( increases indices above a cutoff index.)show
624 90 gm
(nc 595 90 624 300 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
624 300 gm
0 gr
624 300 lin
psb
currentpoint
pse
595 90 gm
595 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6720 div 928 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 393 moveto 3103 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 6605 0 rlineto stroke
sol 0 835 moveto 6605 0 rlineto stroke
sol 8 0 moveto 0 843 rlineto stroke
sol 6597 0 moveto 0 843 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 476 sh
(:) 738 476 sh
(Type) 914 476 sh
(lift) 2955 267 sh
(by) 1613 729 sh
(:) 1976 729 sh
(Int,) 2170 729 sh
(cutoff) 2640 729 sh
(:) 3479 729 sh
(Int\() 3673 729 sh
(0\)) 4408 729 sh
(result) 4860 476 sh
(:) 5659 476 sh
(Type) 5835 476 sh
320 /Symbol f1
(=) 4147 729 sh
256 /LicsPlain f1
(\305) 4715 476 sh
end MTsave restore
pse
1 1 pen
665 108 gm
(nc 639 108 665 347 6 rc)kp
F 1 setTxMode
(  )show
665 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
665 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
665 347 gm
0 gr
665 347 lin
psb
currentpoint
pse
639 108 gm
639 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7648 div 832 3 -1 roll exch div scale
currentpoint translate 64 52 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 233 345 moveto 407 0 rlineto stroke
2930 345 moveto 407 0 rlineto stroke
6421 345 moveto 407 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(n) -11 428 sh
(n) 805 428 sh
(n) 1187 428 sh
(n) 2686 428 sh
(n) 3502 428 sh
(n) 4300 428 sh
320 /Times-Italic f1
(lift) 252 219 sh
(i,) 260 681 sh
(j) 508 681 sh
(j) 1752 428 sh
(lift) 2949 219 sh
(i,) 2957 681 sh
(j) 3205 681 sh
(i) 4022 428 sh
(j) 4865 428 sh
(lift) 6440 219 sh
(i,) 6448 681 sh
(j) 6696 681 sh
256 /LicsPlain f1
(\305) 664 428 sh
(\305) 3361 428 sh
(\305) 6852 428 sh
320 /Times-Roman f1
( \() 997 428 sh
(\)) 1858 428 sh
( \() 4110 428 sh
(\)) 4971 428 sh
320 /Symbol f1
(\243) 1454 428 sh
(>) 4568 428 sh
320 /Times-Roman f1
(+) 3769 428 sh
320 /Courier f1
(Top) 5794 428 sh
(Top) 6988 428 sh
end MTsave restore
pse
F T cp
%%Page: ? 35
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(35)show
144 108 gm
(nc 91 108 144 384 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
144 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
144 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
144 384 gm
0 gr
144 384 lin
psb
currentpoint
pse
91 108 gm
91 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8832 div 1696 3 -1 roll exch div scale
currentpoint translate 64 50 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 294 345 moveto 407 0 rlineto stroke
2218 345 moveto 834 0 rlineto stroke
1372 1188 moveto 407 0 rlineto stroke
16 th 0 795 moveto 3591 0 rlineto stroke
8 th 5027 345 moveto 407 0 rlineto stroke
6951 345 moveto 834 0 rlineto stroke
6105 1188 moveto 407 0 rlineto stroke
16 th 4340 795 moveto 4376 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 34 428 sh
(A\251) 879 428 sh
(B) 1959 428 sh
(B\251) 3220 428 sh
(A) 382 1271 sh
(B) 1113 1271 sh
(A\251) 1957 1271 sh
(B\251) 2871 1271 sh
(A) 4767 428 sh
(A\251) 5612 428 sh
(B) 6692 428 sh
(B\251) 7953 428 sh
(A) 5545 1271 sh
(B) 5846 1271 sh
(A\251) 7861 1271 sh
(B\251) 8345 1271 sh
320 /Times-Italic f1
(lift) 313 219 sh
(i,) 321 681 sh
(j) 569 681 sh
(lift) 2451 219 sh
(i,) 2237 681 sh
(j) 2485 681 sh
(lift) 1391 1062 sh
(i,) 1399 1524 sh
(j) 1647 1524 sh
(lift) 5046 219 sh
(i,) 5054 681 sh
(j) 5302 681 sh
(lift) 7184 219 sh
(i,) 6970 681 sh
(j) 7218 681 sh
(lift) 6124 1062 sh
(i,) 6132 1524 sh
(j) 6380 1524 sh
256 /LicsPlain f1
(\305) 725 428 sh
(\305) 3076 428 sh
(\305) 1803 1271 sh
(\305) 5458 428 sh
(\305) 7809 428 sh
(\305) 6536 1271 sh
320 /Times-Roman f1
(+) 2663 681 sh
(1) 2894 681 sh
(+) 7396 681 sh
(1) 7627 681 sh
320 /Symbol f1
(-) 599 1271 sh
(>) 858 1271 sh
(-) 2357 1271 sh
(>) 2616 1271 sh
320 /Courier f1
(All\(<:) 4375 1271 sh
(\)) 5725 1271 sh
(All\(<:) 6691 1271 sh
(\)) 8224 1271 sh
end MTsave restore
pse
1 1 pen
170 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Replace)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( performs a substitution and lowers the )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(free)show
170 296 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( indices.)show
216 90 gm
(nc 187 90 216 352 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
216 352 gm
0 gr
216 352 lin
psb
currentpoint
pse
187 90 gm
187 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8384 div 928 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1562 393 moveto 4788 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 8264 0 rlineto stroke
sol 0 835 moveto 8264 0 rlineto stroke
sol 8 0 moveto 0 843 rlineto stroke
sol 8256 0 moveto 0 843 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(t) 148 476 sh
(replace) 3479 267 sh
(index) 1581 729 sh
(:) 2344 729 sh
(Int,) 2538 729 sh
( ) 3018 729 sh
(ith) 3311 729 sh
(:) 3707 729 sh
(Type,) 3883 729 sh
( lift) 4630 729 sh
(:) 5135 729 sh
(Int\(=) 5329 729 sh
(0\)) 6067 729 sh
(result) 6519 476 sh
(:) 7318 476 sh
(Type) 7494 476 sh
320 /Times-Italic f1
(ype) 236 476 sh
(Type) 888 476 sh
(w) 3098 729 sh
320 /Times-Roman f1
(:) 740 476 sh
256 /LicsPlain f1
(\305) 6374 476 sh
end MTsave restore
pse
1 1 pen
281 108 gm
(nc 231 108 281 478 6 rc)kp
F 1 setTxMode
(  )show
281 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
281 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
281 478 gm
0 gr
281 478 lin
psb
currentpoint
pse
231 108 gm
231 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11840 div 1600 3 -1 roll exch div scale
currentpoint translate 64 49 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 233 732 moveto 1004 0 rlineto stroke
8 th 3809 345 moveto 407 0 rlineto stroke
3505 1125 moveto 1004 0 rlineto stroke
16 th 3240 732 moveto 1787 0 rlineto stroke
6009 732 moveto 1004 0 rlineto stroke
10001 732 moveto 1004 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(n) -11 815 sh
(C) 613 1068 sh
(n) 1402 815 sh
(n) 1784 815 sh
(C) 3536 428 sh
(C\251) 4363 428 sh
(n) 3261 1208 sh
(n) 3652 1461 sh
(C) 3935 1461 sh
(C\251) 4656 1208 sh
(n) 5765 815 sh
(C) 6389 1068 sh
(n) 7178 815 sh
(n) 7934 815 sh
(C) 10381 1068 sh
320 /Times-Italic f1
(replace) 258 606 sh
(i,) 428 1068 sh
(,) 828 1068 sh
(l) 941 1068 sh
(i) 2302 815 sh
(lift) 3828 219 sh
(l) 3962 681 sh
(replace) 3530 999 sh
(,) 3838 1461 sh
(,) 4150 1461 sh
(l) 4263 1461 sh
(replace) 6034 606 sh
(i,) 6204 1068 sh
(,) 6604 1068 sh
(l) 6717 1068 sh
(i) 8452 815 sh
(replace) 10026 606 sh
(i,) 10196 1068 sh
(,) 10596 1068 sh
(l) 10709 1068 sh
256 /LicsPlain f1
(\305) 1261 815 sh
(\305) 4240 428 sh
(\305) 4533 1208 sh
(\305) 7037 815 sh
(\305) 11029 815 sh
320 /Times-Roman f1
( \() 1594 815 sh
(\)) 2401 815 sh
( \() 7744 815 sh
(\)) 8551 815 sh
320 /Symbol f1
(<) 2052 815 sh
(>) 8202 815 sh
320 /Times-Roman f1
(-) 7441 815 sh
(1) 7594 815 sh
320 /Courier f1
(Top) 9374 815 sh
(Top) 11165 815 sh
end MTsave restore
pse
1 1 pen
345 108 gm
(nc 294 108 345 443 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
345 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
345 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
345 443 gm
0 gr
345 443 lin
psb
currentpoint
pse
294 108 gm
294 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10720 div 1632 3 -1 roll exch div scale
currentpoint translate 64 44 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 294 345 moveto 1004 0 rlineto stroke
2815 345 moveto 1542 0 rlineto stroke
1727 1162 moveto 1004 0 rlineto stroke
16 th 0 769 moveto 4896 0 rlineto stroke
8 th 5977 345 moveto 1004 0 rlineto stroke
8498 345 moveto 1542 0 rlineto stroke
7410 1162 moveto 1004 0 rlineto stroke
16 th 5645 769 moveto 4973 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 34 428 sh
(C) 674 681 sh
(A\251) 1476 428 sh
(B) 2556 428 sh
(C) 3465 681 sh
(B\251) 4525 428 sh
(A) 737 1245 sh
(B) 1468 1245 sh
(C) 2107 1498 sh
(A\251) 2909 1245 sh
(B\251) 3823 1245 sh
(A) 5717 428 sh
(C) 6357 681 sh
(A\251) 7159 428 sh
(B) 8239 428 sh
(C) 9148 681 sh
(B\251) 10208 428 sh
(A) 6850 1245 sh
(B) 7151 1245 sh
(C) 7790 1498 sh
(A\251) 9763 1245 sh
(B\251) 10247 1245 sh
320 /Times-Italic f1
(replace) 319 219 sh
(i,) 489 681 sh
(,) 889 681 sh
(l) 1002 681 sh
(replace) 3109 219 sh
(i) 2834 681 sh
(,) 3368 681 sh
(,) 3680 681 sh
(l) 3793 681 sh
(replace) 1752 1036 sh
(i,) 1922 1498 sh
(,) 2322 1498 sh
(l) 2435 1498 sh
(replace) 6002 219 sh
(i,) 6172 681 sh
(,) 6572 681 sh
(l) 6685 681 sh
(replace) 8792 219 sh
(i) 8517 681 sh
(,) 9051 681 sh
(,) 9363 681 sh
(l) 9476 681 sh
(replace) 7435 1036 sh
(i,) 7605 1498 sh
(,) 8005 1498 sh
(l) 8118 1498 sh
256 /LicsPlain f1
(\305) 1322 428 sh
(\305) 4381 428 sh
(\305) 2755 1245 sh
(\305) 7005 428 sh
(\305) 10064 428 sh
(\305) 8438 1245 sh
320 /Times-Roman f1
(+) 3005 681 sh
(1) 3236 681 sh
(+) 3968 681 sh
(1) 4199 681 sh
(+) 8688 681 sh
(1) 8919 681 sh
(+) 9651 681 sh
(1) 9882 681 sh
320 /Symbol f1
(-) 954 1245 sh
(>) 1213 1245 sh
(-) 3309 1245 sh
(>) 3568 1245 sh
320 /Courier f1
(All\(<:) 5680 1245 sh
(\)) 7030 1245 sh
(All\(<:) 8593 1245 sh
(\)) 10126 1245 sh
end MTsave restore
pse
1 1 pen
369 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(TypeIde)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( extracts the bound of a type identifier from an environment.)show
415 90 gm
(nc 386 90 415 324 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
415 324 gm
0 gr
415 324 lin
psb
currentpoint
pse
386 90 gm
386 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7488 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1401 392 moveto 4063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 7378 0 rlineto stroke
sol 0 833 moveto 7378 0 rlineto stroke
sol 8 0 moveto 0 841 rlineto stroke
sol 7370 0 moveto 0 841 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(env) 150 475 sh
(:) 656 475 sh
(Env) 847 475 sh
(typeIde) 2962 266 sh
(index) 1420 728 sh
(:) 2183 728 sh
(Int,) 2377 728 sh
( depth) 2857 728 sh
(:) 3707 728 sh
(Int\() 3901 728 sh
(i) 4629 728 sh
(\)) 5341 728 sh
(result) 5633 475 sh
(:) 6432 475 sh
(Type) 6608 475 sh
320 /Symbol f1
(=) 4375 728 sh
320 /Times-Italic f1
(ndex) 4717 728 sh
256 /LicsPlain f1
(\305) 5488 475 sh
end MTsave restore
pse
1 1 pen
481 108 gm
(nc 430 108 481 374 6 rc)kp
F 1 setTxMode
(  )show
481 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
481 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
481 374 gm
0 gr
481 374 lin
psb
currentpoint
pse
430 108 gm
430 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8512 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 902 386 moveto 407 0 rlineto stroke
936 1165 moveto 981 0 rlineto stroke
16 th 0 773 moveto 2466 0 rlineto stroke
8 th 3831 344 moveto 981 0 rlineto stroke
4151 1165 moveto 981 0 rlineto stroke
16 th 3215 773 moveto 2312 0 rlineto stroke
8 th 6800 344 moveto 981 0 rlineto stroke
7029 1165 moveto 981 0 rlineto stroke
16 th 6276 773 moveto 2129 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 642 469 sh
(A\251) 1487 469 sh
(A) 676 1248 sh
(A\251) 2095 1248 sh
(n) 4079 680 sh
(B) 4980 427 sh
(A) 3891 1248 sh
(n) 4177 1501 sh
(B) 5300 1248 sh
(n) 7048 680 sh
(B) 7949 427 sh
(A) 6769 1248 sh
(n) 7055 1501 sh
(B) 8178 1248 sh
320 /Times-Italic f1
(lift) 921 260 sh
(d) 1020 722 sh
(E) 37 1248 sh
(typeIde) 956 1039 sh
(,) 1352 1501 sh
(d) 1474 1501 sh
(E) 3573 427 sh
(typeIde) 3851 218 sh
(d) 4387 680 sh
(E) 3252 1248 sh
(typeIde) 4171 1039 sh
(,) 4807 1501 sh
(d) 4929 1501 sh
(E) 6542 427 sh
(typeIde) 6820 218 sh
(d) 7356 680 sh
(E) 6313 1248 sh
(typeIde) 7049 1039 sh
(,) 7685 1501 sh
(d) 7807 1501 sh
256 /LicsPlain f1
(\305) 1333 469 sh
(\305) 1941 1248 sh
(\305) 4836 427 sh
(\305) 5156 1248 sh
(\305) 7805 427 sh
(\305) 8034 1248 sh
320 /Times-Roman f1
(,) 235 1248 sh
(,) 3450 1248 sh
(,) 6511 1248 sh
320 /Symbol f1
(<) 355 1248 sh
(<) 3570 1248 sh
320 /Courier f1
(:) 466 1248 sh
(1) 1184 1501 sh
(:) 3681 1248 sh
(:) 6559 1248 sh
320 /Times-Roman f1
(,) 4263 680 sh
(,) 7232 680 sh
320 /Times-Roman f1
(+) 4444 1501 sh
(1) 4675 1501 sh
(+) 7322 1501 sh
(1) 7553 1501 sh
end MTsave restore
pse
1 1 pen
505 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(TermIde)show
505 124 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( extracts the type of a type identifier from an environment.)show
551 90 gm
(nc 522 90 551 324 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
551 324 gm
0 gr
551 324 lin
psb
currentpoint
pse
522 90 gm
522 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7488 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1401 392 moveto 4063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 7378 0 rlineto stroke
sol 0 833 moveto 7378 0 rlineto stroke
sol 8 0 moveto 0 841 rlineto stroke
sol 7370 0 moveto 0 841 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(env) 150 475 sh
(:) 656 475 sh
(Env) 847 475 sh
(termIde) 2935 266 sh
(index) 1420 728 sh
(:) 2183 728 sh
(Int,) 2377 728 sh
( depth) 2857 728 sh
(:) 3707 728 sh
(Int\() 3901 728 sh
(i) 4629 728 sh
(\)) 5341 728 sh
(result) 5633 475 sh
(:) 6432 475 sh
(Type) 6608 475 sh
320 /Symbol f1
(=) 4375 728 sh
320 /Times-Italic f1
(ndex) 4717 728 sh
256 /LicsPlain f1
(\305) 5488 475 sh
end MTsave restore
pse
1 1 pen
617 108 gm
(nc 566 108 617 373 6 rc)kp
F 1 setTxMode
(  )show
617 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
617 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
617 373 gm
0 gr
617 373 lin
psb
currentpoint
pse
566 108 gm
566 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8480 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 837 386 moveto 407 0 rlineto stroke
753 1165 moveto 1034 0 rlineto stroke
16 th 0 773 moveto 2336 0 rlineto stroke
8 th 3700 344 moveto 1034 0 rlineto stroke
4021 1165 moveto 1034 0 rlineto stroke
16 th 3085 773 moveto 2365 0 rlineto stroke
8 th 6723 344 moveto 1034 0 rlineto stroke
6952 1165 moveto 1034 0 rlineto stroke
16 th 6199 773 moveto 2182 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 577 469 sh
(A\251) 1422 469 sh
(A) 493 1248 sh
(A\251) 1965 1248 sh
(n) 3975 680 sh
(B) 4902 427 sh
(A) 3761 1248 sh
(n) 4074 1501 sh
(B) 5223 1248 sh
(n) 6998 680 sh
(B) 7925 427 sh
(A) 6692 1248 sh
(n) 7005 1501 sh
(B) 8154 1248 sh
320 /Times-Italic f1
(lift) 856 260 sh
(d) 955 722 sh
(E) 37 1248 sh
(termIde) 773 1039 sh
(,) 1196 1501 sh
(d) 1318 1501 sh
(E) 3442 427 sh
(termIde) 3720 218 sh
(d) 4283 680 sh
(E) 3122 1248 sh
(termIde) 4041 1039 sh
(,) 4704 1501 sh
(d) 4826 1501 sh
(E) 6465 427 sh
(termIde) 6743 218 sh
(d) 7306 680 sh
(E) 6236 1248 sh
(termIde) 6972 1039 sh
(,) 7635 1501 sh
(d) 7757 1501 sh
256 /LicsPlain f1
(\305) 1268 469 sh
(\305) 1811 1248 sh
(\305) 4758 427 sh
(\305) 5079 1248 sh
(\305) 7781 427 sh
(\305) 8010 1248 sh
320 /Times-Roman f1
(,) 235 1248 sh
(,) 3320 1248 sh
(,) 6434 1248 sh
320 /Courier f1
(:) 283 1248 sh
(1) 1028 1501 sh
(:) 3551 1248 sh
(:) 6482 1248 sh
320 /Times-Roman f1
(,) 4159 680 sh
(,) 7182 680 sh
320 /Symbol f1
(<) 3440 1248 sh
320 /Times-Roman f1
(+) 4341 1501 sh
(1) 4572 1501 sh
(+) 7272 1501 sh
(1) 7503 1501 sh
end MTsave restore
pse
1 1 pen
641 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(ExposeArrow)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( strips type variables until it finds an arrow type.)show
685 90 gm
(nc 658 90 685 265 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
685 265 gm
0 gr
685 265 lin
psb
currentpoint
pse
658 90 gm
658 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5600 div 864 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1562 392 moveto 1735 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5498 0 rlineto stroke
sol 0 772 moveto 5498 0 rlineto stroke
sol 8 0 moveto 0 780 rlineto stroke
sol 5490 0 moveto 0 780 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(t) 148 475 sh
(exposeArrow) 1584 266 sh
(env) 1831 728 sh
(:) 2337 728 sh
(Env) 2528 728 sh
(outType) 3465 475 sh
(:) 4552 475 sh
(Type) 4728 475 sh
320 /Times-Italic f1
(ype) 236 475 sh
(Type) 888 475 sh
320 /Times-Roman f1
(:) 740 475 sh
256 /LicsPlain f1
(\305) 3321 475 sh
end MTsave restore
pse
F T cp
%%Page: ? 36
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(36)show
140 108 gm
(nc 91 108 140 409 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
140 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
140 409 gm
0 gr
140 409 lin
psb
currentpoint
pse
91 108 gm
91 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9632 div 1568 3 -1 roll exch div scale
currentpoint translate 64 47 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 344 moveto 981 0 rlineto stroke
2661 344 moveto 1735 0 rlineto stroke
1463 1126 moveto 1735 0 rlineto stroke
16 th 0 734 moveto 4945 0 rlineto stroke
6686 734 moveto 1735 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 427 sh
(typeIde) 315 218 sh
(exposeArrow) 2683 218 sh
(E) 3434 680 sh
(exposeArrow) 1485 1000 sh
(E) 2236 1462 sh
(exposeArrow) 6708 608 sh
(E) 7459 1070 sh
320 /Courier-Oblique f1
(n) 690 680 sh
(A) 1454 427 sh
(A) 2401 427 sh
(A\251) 4574 427 sh
(n) 1219 1209 sh
(A\251) 3376 1209 sh
(A) 5696 817 sh
(B) 6427 817 sh
(A) 8599 817 sh
(B) 9330 817 sh
256 /LicsPlain f1
(\305) 1300 427 sh
(\305) 4420 427 sh
(\305) 3222 1209 sh
(\305) 8445 817 sh
320 /Symbol f1
(-) 5913 817 sh
(>) 6172 817 sh
(-) 8816 817 sh
(>) 9075 817 sh
end MTsave restore
pse
1 1 pen
166 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______Times-Italic fnt
bn
(ExposeAll)show
166 131 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( strips type variables until it finds a forall type)show
210 90 gm
(nc 183 90 210 252 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
210 252 gm
0 gr
210 252 lin
psb
currentpoint
pse
183 90 gm
183 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5184 div 864 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1562 393 moveto 1295 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5058 0 rlineto stroke
sol 0 773 moveto 5058 0 rlineto stroke
sol 8 0 moveto 0 781 rlineto stroke
sol 5050 0 moveto 0 781 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(t) 148 476 sh
(exposeAll) 1584 267 sh
(env) 1611 729 sh
(:) 2117 729 sh
(Env) 2308 729 sh
(outType) 3025 476 sh
(:) 4112 476 sh
(Type) 4288 476 sh
320 /Times-Italic f1
(ype) 236 476 sh
(Type) 888 476 sh
320 /Times-Roman f1
(:) 740 476 sh
256 /LicsPlain f1
(\305) 2881 476 sh
end MTsave restore
pse
1 1 pen
274 108 gm
(nc 225 108 274 428 6 rc)kp
F 1 setTxMode
(  )show
274 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
274 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
274 428 gm
0 gr
274 428 lin
psb
currentpoint
pse
225 108 gm
225 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10240 div 1568 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 345 moveto 981 0 rlineto stroke
2661 345 moveto 1295 0 rlineto stroke
1463 1128 moveto 1295 0 rlineto stroke
16 th 0 735 moveto 4505 0 rlineto stroke
6987 735 moveto 1295 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 428 sh
(typeIde) 315 219 sh
(exposeAll) 2683 219 sh
(E) 3214 681 sh
(exposeAll) 1485 1002 sh
(E) 2016 1464 sh
(exposeAll) 7009 609 sh
(E) 7540 1071 sh
320 /Courier-Oblique f1
(n) 690 681 sh
(A) 1454 428 sh
(A) 2401 428 sh
(A\251) 4134 428 sh
(n) 1219 1211 sh
(A\251) 2936 1211 sh
(A) 6427 818 sh
(B) 6728 818 sh
(A) 9631 818 sh
(B) 9932 818 sh
256 /LicsPlain f1
(\305) 1300 428 sh
(\305) 3980 428 sh
(\305) 2782 1211 sh
(\305) 8306 818 sh
320 /Courier f1
(All\(<:) 5257 818 sh
(\)) 6607 818 sh
(All\(<:) 8461 818 sh
(\)) 9811 818 sh
end MTsave restore
pse
1 1 pen
300 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Sub)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( tests subtyping between two types.)show
344 90 gm
(nc 317 90 344 261 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
344 261 gm
0 gr
344 261 lin
psb
currentpoint
pse
317 90 gm
317 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5472 div 864 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 2262 392 moveto 1241 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5373 0 rlineto stroke
sol 0 772 moveto 5373 0 rlineto stroke
sol 8 0 moveto 0 780 rlineto stroke
sol 5365 0 moveto 0 780 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(small) 155 475 sh
(big) 971 475 sh
(Type) 1588 475 sh
320 /Times-Roman f1
(,) 850 475 sh
(:) 1440 475 sh
320 /Times-Italic f1
(sub) 2662 266 sh
(env) 2284 728 sh
(:) 2790 728 sh
(Env) 2981 728 sh
(result) 3672 475 sh
(:) 4471 475 sh
256 /LicsPlain f1
(\305) 3527 475 sh
320 /Times-Roman f1
({ok}) 4622 475 sh
end MTsave restore
pse
1 1 pen
408 108 gm
(nc 359 108 408 467 6 rc)kp
F 1 setTxMode
(  )show
408 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
408 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
408 467 gm
0 gr
408 467 lin
psb
currentpoint
pse
359 108 gm
359 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11488 div 1568 3 -1 roll exch div scale
currentpoint translate 64 47 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 941 734 moveto 495 0 rlineto stroke
3206 734 moveto 495 0 rlineto stroke
8 th 5232 344 moveto 981 0 rlineto stroke
7917 344 moveto 495 0 rlineto stroke
6719 1126 moveto 495 0 rlineto stroke
16 th 4937 734 moveto 3994 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 817 sh
(n) 2661 817 sh
(n) 2962 817 sh
(n) 5627 680 sh
(A) 6391 427 sh
(A) 7338 427 sh
(B) 7658 427 sh
(n) 6156 1209 sh
(B) 6460 1209 sh
(B) 9188 817 sh
(n) 9756 817 sh
(B) 10148 817 sh
320 /Times-Roman f1
(,) 202 817 sh
(,) 2845 817 sh
(,) 7538 427 sh
(,) 6340 1209 sh
320 /Courier f1
(Top) 314 817 sh
(Top) 10711 817 sh
320 /Times-Italic f1
(sub) 968 608 sh
(E) 1094 1070 sh
(sub) 3233 608 sh
(E) 3359 1070 sh
(E) 4974 427 sh
(typeIde) 5252 218 sh
(sub) 7944 218 sh
(E) 8070 680 sh
(sub) 6746 1000 sh
(E) 6872 1462 sh
256 /LicsPlain f1
(\305) 1460 817 sh
(\305) 3725 817 sh
(\305) 6237 427 sh
(\305) 8436 427 sh
(\305) 7238 1209 sh
320 ns
(=) 9479 817 sh
(=) 10439 817 sh
320 /Times-Roman f1
(ok) 1603 817 sh
(ok) 3868 817 sh
(ok) 8579 427 sh
(ok) 7381 1209 sh
( \() 8995 817 sh
(,) 9940 817 sh
( ) 10068 817 sh
(\)) 11289 817 sh
end MTsave restore
pse
1 1 pen
471 108 gm
(nc 421 108 471 435 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
471 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
471 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
471 435 gm
0 gr
471 435 lin
psb
currentpoint
pse
421 108 gm
421 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10464 div 1600 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 807 344 moveto 495 0 rlineto stroke
3252 344 moveto 864 0 rlineto stroke
3036 1165 moveto 495 0 rlineto stroke
16 th 0 773 moveto 4675 0 rlineto stroke
8 th 6231 344 moveto 495 0 rlineto stroke
8676 344 moveto 1120 0 rlineto stroke
9329 1165 moveto 495 0 rlineto stroke
16 th 5424 773 moveto 4931 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A\251) 34 427 sh
(A) 547 427 sh
(B) 2530 427 sh
(B\251) 2849 427 sh
(A\251) 3745 680 sh
(A) 659 1248 sh
(B) 1390 1248 sh
(A\251) 1719 1248 sh
(B\251) 2633 1248 sh
(A\251) 5458 427 sh
(A) 5971 427 sh
(B) 7954 427 sh
(B\251) 8273 427 sh
(A\251) 9425 680 sh
(A) 6641 1248 sh
(B) 6942 1248 sh
(A\251) 8442 1248 sh
(B\251) 8926 1248 sh
320 /Times-Roman f1
(,) 417 427 sh
(,) 2729 427 sh
(,) 5841 427 sh
(,) 8153 427 sh
320 /Times-Italic f1
(sub) 834 218 sh
(E) 960 680 sh
(sub) 3464 218 sh
(E) 3289 680 sh
(,) 1591 1248 sh
(sub) 3063 1039 sh
(E) 3189 1501 sh
(sub) 6258 218 sh
(E) 6384 680 sh
(sub) 9016 218 sh
(E) 8713 680 sh
(,) 7143 1248 sh
(sub) 9356 1039 sh
(E) 9482 1501 sh
256 /LicsPlain f1
(\305) 1326 427 sh
(\305) 4140 427 sh
(\305) 3555 1248 sh
(\305) 6750 427 sh
(\305) 9820 427 sh
(\305) 9848 1248 sh
320 /Times-Roman f1
(ok) 1469 427 sh
(,) 3487 680 sh
(ok) 4323 427 sh
(ok) 3698 1248 sh
(ok) 6893 427 sh
(,) 8911 680 sh
(ok) 10003 427 sh
(ok) 9991 1248 sh
320 /Courier f1
(:) 3535 680 sh
(<:) 9023 680 sh
(All\(<:) 5471 1248 sh
(\)) 6821 1248 sh
(All\(<:) 7272 1248 sh
(\)) 8805 1248 sh
320 /Symbol f1
(-) 876 1248 sh
(>) 1135 1248 sh
(-) 2119 1248 sh
(>) 2378 1248 sh
end MTsave restore
pse
1 1 pen
497 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Type)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( checks that a pretype is well-formed and returns the corresponding type.)show
543 90 gm
(nc 514 90 543 273 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
543 273 gm
0 gr
543 273 lin
psb
currentpoint
pse
514 90 gm
514 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5856 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1994 392 moveto 1835 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5743 0 rlineto stroke
sol 0 832 moveto 5743 0 rlineto stroke
sol 8 0 moveto 0 840 rlineto stroke
sol 5735 0 moveto 0 840 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(pre) 184 475 sh
(:) 668 475 sh
(PreType) 859 475 sh
(type) 2645 266 sh
(env) 2016 728 sh
(:) 2522 728 sh
(Env\(=) 2713 728 sh
(\)) 3706 728 sh
(result) 3998 475 sh
(:) 4797 475 sh
(Type) 4973 475 sh
320 /LicsPlain f1
(\360) 3528 728 sh
256 ns
(\305) 3853 475 sh
end MTsave restore
pse
1 1 pen
608 108 gm
(nc 558 108 608 528 6 rc)kp
F 1 setTxMode
(  )show
608 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
608 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
608 528 gm
0 gr
608 528 lin
psb
currentpoint
pse
558 108 gm
558 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13440 div 1600 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 383 moveto 981 0 rlineto stroke
499 1165 moveto 573 0 rlineto stroke
16 th 0 773 moveto 1682 0 rlineto stroke
3042 773 moveto 573 0 rlineto stroke
8 th 5358 344 moveto 573 0 rlineto stroke
7289 344 moveto 721 0 rlineto stroke
6384 1165 moveto 573 0 rlineto stroke
16 th 5087 773 moveto 3318 0 rlineto stroke
8 th 9726 344 moveto 573 0 rlineto stroke
11657 344 moveto 977 0 rlineto stroke
10880 1165 moveto 573 0 rlineto stroke
16 th 9154 773 moveto 4176 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 466 sh
(typeIde) 315 257 sh
(type) 519 1039 sh
(E) 691 1501 sh
(type) 3062 647 sh
(E) 3234 1109 sh
(type) 5378 218 sh
(E) 5550 680 sh
(type) 7383 218 sh
(E) 7326 680 sh
(type) 6404 1039 sh
(E) 6576 1501 sh
(type) 9746 218 sh
(E) 9918 680 sh
(type) 11879 218 sh
(E) 11694 680 sh
(type) 10900 1039 sh
(E) 11072 1501 sh
320 /Courier-Oblique f1
(n) 690 719 sh
(A) 1454 466 sh
(n) 255 1248 sh
(n) 1237 1248 sh
(S) 5095 427 sh
(A) 6109 427 sh
(T) 7013 427 sh
(A) 7782 680 sh
(B) 8178 427 sh
(S) 5407 1248 sh
(T) 6108 1248 sh
(A) 7135 1248 sh
(B) 7866 1248 sh
(S) 9463 427 sh
(A) 10477 427 sh
(T) 11381 427 sh
(A) 12406 680 sh
(B) 12802 427 sh
(S) 10333 1248 sh
(T) 10604 1248 sh
(A) 12802 1248 sh
(B) 13103 1248 sh
256 /LicsPlain f1
(\305) 1300 466 sh
(\305) 1096 1248 sh
(\305) 3639 856 sh
(\305) 5955 427 sh
(\305) 8034 427 sh
(\305) 6981 1248 sh
(\305) 10323 427 sh
(\305) 12658 427 sh
(\305) 11477 1248 sh
320 /Courier f1
(Top) 2415 856 sh
(Top) 3775 856 sh
(:) 7572 680 sh
(<:) 12004 680 sh
(All\(<:) 9189 1248 sh
(\)) 10516 1248 sh
(All\(<:) 11632 1248 sh
(\)) 12982 1248 sh
320 /Times-Roman f1
(,) 7524 680 sh
(,) 11892 680 sh
320 /Symbol f1
(-) 5627 1248 sh
(>) 5886 1248 sh
(-) 7352 1248 sh
(>) 7611 1248 sh
end MTsave restore
pse
F T cp
%%Page: ? 37
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(37)show
102 90 gm
2 fs
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(Term)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( checks that a preterm is well-typed and returns its type.)show
148 90 gm
(nc 119 90 148 275 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
148 275 gm
0 gr
148 275 lin
psb
currentpoint
pse
119 90 gm
119 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5920 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 2050 392 moveto 1835 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5799 0 rlineto stroke
sol 0 832 moveto 5799 0 rlineto stroke
sol 8 0 moveto 0 840 rlineto stroke
sol 5791 0 moveto 0 840 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(pre) 184 475 sh
(:) 668 475 sh
(PreTerm) 859 475 sh
(term) 2673 266 sh
(env) 2072 728 sh
(:) 2578 728 sh
(Env\(=) 2769 728 sh
(\)) 3762 728 sh
(result) 4054 475 sh
(:) 4853 475 sh
(Type) 5029 475 sh
320 /LicsPlain f1
(\360) 3584 728 sh
256 ns
(\305) 3909 475 sh
end MTsave restore
pse
1 1 pen
213 108 gm
(nc 163 108 213 534 6 rc)kp
F 1 setTxMode
(  )show
213 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
213 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
213 534 gm
0 gr
213 534 lin
psb
currentpoint
pse
163 108 gm
163 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13632 div 1600 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 383 moveto 1034 0 rlineto stroke
482 1165 moveto 629 0 rlineto stroke
16 th 0 773 moveto 1735 0 rlineto stroke
3104 773 moveto 629 0 rlineto stroke
8 th 5476 344 moveto 573 0 rlineto stroke
7430 344 moveto 721 0 rlineto stroke
6756 1165 moveto 629 0 rlineto stroke
16 th 5205 773 moveto 3341 0 rlineto stroke
8 th 9880 344 moveto 573 0 rlineto stroke
11834 344 moveto 977 0 rlineto stroke
11014 1165 moveto 629 0 rlineto stroke
16 th 9295 773 moveto 4225 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 466 sh
(termIde) 315 257 sh
(term) 502 1039 sh
(E) 702 1501 sh
(term) 3124 647 sh
(E) 3324 1109 sh
(type) 5496 218 sh
(E) 5668 680 sh
(term) 7496 218 sh
(E) 7467 680 sh
(term) 6776 1039 sh
(E) 6976 1501 sh
(type) 9900 218 sh
(E) 10072 680 sh
(term) 12028 218 sh
(E) 11871 680 sh
(term) 11034 1039 sh
(E) 11234 1501 sh
320 /Courier-Oblique f1
(n) 717 719 sh
(A) 1507 466 sh
(n) 238 1248 sh
(A) 1289 1248 sh
(S) 5213 427 sh
(A) 6227 427 sh
(b) 7171 427 sh
(A) 7923 680 sh
(B) 8319 427 sh
(S) 6186 1248 sh
(b) 6497 1248 sh
(A) 7563 1248 sh
(B) 8294 1248 sh
(S) 9617 427 sh
(A) 10631 427 sh
(b) 11575 427 sh
(A) 12583 680 sh
(B) 12979 427 sh
(S) 10444 1248 sh
(b) 10755 1248 sh
(A) 12992 1248 sh
(B) 13293 1248 sh
256 /LicsPlain f1
(\305) 1353 466 sh
(\305) 1135 1248 sh
(\305) 3757 856 sh
(\305) 6073 427 sh
(\305) 8175 427 sh
(\305) 7409 1248 sh
(\305) 10477 427 sh
(\305) 12835 427 sh
(\305) 11667 1248 sh
320 /Courier f1
(top) 2477 856 sh
(Top) 3893 856 sh
(:) 7713 680 sh
(fun\(:) 5234 1248 sh
(\)) 6369 1248 sh
(<:) 12181 680 sh
(fun\(<:) 9300 1248 sh
(\)) 10627 1248 sh
(All\(<:) 11822 1248 sh
(\)) 13172 1248 sh
320 /Times-Roman f1
(,) 7665 680 sh
(,) 12069 680 sh
320 /Symbol f1
(-) 7780 1248 sh
(>) 8039 1248 sh
end MTsave restore
pse
1 1 pen
276 108 gm
(nc 226 108 276 495 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
276 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
276 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
276 495 gm
0 gr
276 495 lin
psb
currentpoint
pse
226 108 gm
226 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12384 div 1600 3 -1 roll exch div scale
currentpoint translate 64 39 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 290 345 moveto 629 0 rlineto stroke
2268 345 moveto 1735 0 rlineto stroke
6260 345 moveto 629 0 rlineto stroke
8747 345 moveto 495 0 rlineto stroke
10729 345 moveto 1004 0 rlineto stroke
5877 1166 moveto 629 0 rlineto stroke
16 th 0 774 moveto 12272 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(b) 31 428 sh
(C) 1066 428 sh
(C) 1995 428 sh
(A\251) 4181 428 sh
(B) 5095 428 sh
(a) 6016 428 sh
(A) 7067 428 sh
(A) 8014 428 sh
(A\251) 8344 428 sh
(B) 10470 428 sh
(A) 11261 681 sh
(B\251) 11901 428 sh
(b) 5259 1249 sh
(a) 5544 1249 sh
(B\251) 6674 1249 sh
320 /Times-Italic f1
(term) 310 219 sh
(E) 510 681 sh
(exposeArrow) 2290 219 sh
(E) 3041 681 sh
(term) 6280 219 sh
(E) 6480 681 sh
(sub) 8774 219 sh
(E) 8900 681 sh
(replace) 10754 219 sh
(term) 5897 1040 sh
(E) 6097 1502 sh
256 /LicsPlain f1
(\305) 943 428 sh
(\305) 4027 428 sh
(\305) 6913 428 sh
(\305) 9266 428 sh
(\305) 11757 428 sh
(\305) 6530 1249 sh
320 /Symbol f1
(-) 4581 428 sh
(>) 4840 428 sh
320 /Times-Roman f1
(,) 8214 428 sh
320 /Times-Roman f1
(ok) 9409 428 sh
(1,) 10971 681 sh
320 /Courier f1
(\() 5391 1249 sh
(\)) 5708 1249 sh
end MTsave restore
pse
1 1 pen
339 108 gm
(nc 289 108 339 503 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
339 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
339 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
339 503 gm
0 gr
339 503 lin
psb
currentpoint
pse
289 108 gm
289 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12640 div 1600 3 -1 roll exch div scale
currentpoint translate 64 39 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 290 345 moveto 629 0 rlineto stroke
2268 345 moveto 1295 0 rlineto stroke
6579 345 moveto 573 0 rlineto stroke
9010 345 moveto 495 0 rlineto stroke
10992 345 moveto 1004 0 rlineto stroke
6129 1166 moveto 629 0 rlineto stroke
16 th 0 774 moveto 12535 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(b) 31 428 sh
(C) 1066 428 sh
(C) 1995 428 sh
(A\251) 4912 428 sh
(B) 5396 428 sh
(S) 6316 428 sh
(A) 7330 428 sh
(A) 8277 428 sh
(A\251) 8607 428 sh
(B) 10733 428 sh
(A) 11524 681 sh
(B\251) 12164 428 sh
(b) 5269 1249 sh
(S) 5777 1249 sh
(B\251) 6926 1249 sh
320 /Times-Italic f1
(term) 310 219 sh
(E) 510 681 sh
(exposeAll) 2290 219 sh
(E) 2821 681 sh
(type) 6599 219 sh
(E) 6771 681 sh
(sub) 9037 219 sh
(E) 9163 681 sh
(replace) 11017 219 sh
(term) 6149 1040 sh
(E) 6349 1502 sh
256 /LicsPlain f1
(\305) 943 428 sh
(\305) 3587 428 sh
(\305) 7176 428 sh
(\305) 9529 428 sh
(\305) 12020 428 sh
(\305) 6782 1249 sh
320 /Courier f1
(All\(<:) 3742 428 sh
(\)) 5275 428 sh
(\(:) 5401 1249 sh
(\)) 5960 1249 sh
320 /Times-Roman f1
(,) 8477 428 sh
320 /Times-Roman f1
(ok) 9672 428 sh
(1,) 11234 681 sh
end MTsave restore
pse
F T cp
%%Page: ? 38
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(38)show
117 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix F. Typing algorithm with argument synthesis)show
138 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.33081 0. 32 0.03308 0.(We now extend the typing algorithm of Appendix E with type inference. The inference mechanism is)awidthshow
152 90 gm
(based syntactically on )show
152 181 gm
([Pollack 1990], and algorithmically on [Miller \(to appear\)])show
152 416 gm
(.)show
166 108 gm
(The necessary data structures are as follows, where )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(q)show
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(7)show
166 328 gm
bu fc
2 F /|______Courier fnt
bn
(?)show
bu fc
2 F /|______Times-Roman fnt
bn
( or )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(q)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( is empty.)show
185 126 gm
(PreType)show
199 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S,T)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
199 199 gm
bu fc
2 F /|______Courier fnt
bn
(Top)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
199 224 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(->)show
199 241 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(T)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
199 254 gm
bu fc
2 F /|______Courier fnt
bn
(All\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(q)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(T)show
218 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(PreTerm)show
232 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a,b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
232 199 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(!)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
232 218 gm
bu fc
2 F /|______Courier fnt
bn
(top)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
232 243 gm
bu fc
2 F /|______Courier fnt
bn
(fun\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
232 298 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
232 329 gm
bu fc
2 F /|______Courier fnt
bn
(fun\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(q)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
232 396 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
251 126 gm
bu fc
2 F /|______Times-Roman fnt
bn
(Env)show
265 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
265 186 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
265 223 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(E)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(,:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
284 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Type)show
298 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A,B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
298 199 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(n)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
298 212 gm
bu fc
2 F /|______Courier fnt
bn
(Top)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
298 237 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(->)show
298 254 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
298 267 gm
bu fc
2 F /|______Courier fnt
bn
(All\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(q)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(<:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
317 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Subst)show
331 144 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
bu fc
2 F /|______LicsPlain fnt
bn
(\360)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
331 186 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a)show
334 193 gm
bu fc

%%BeginFont: Palatino-Italic
%%IncludeFont: Palatino-Italic
bn
%%EndFont
bu fc
{}mark T /Palatino-Italic /|______Palatino-Italic 0 rf
bn
9 fz
bu fc
2 F /|______Palatino-Italic fnt
bn
(r)show
331 197 gm
10 fz
bu fc
2 F /|______Courier-Oblique fnt
bn
(,)show
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
331 216 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a\254)show
bu fc
2 F /|______Courier-Oblique fnt
bn
(A,)show
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
331 257 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\335)show
bu fc
2 F /|______Times-Roman fnt
bn
( | )show
331 276 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\337)show
359 108 gm
bu fc
2 F /|______Times-Roman fnt
bn
0.50903 0. 32 0.05090 0.(A substitution )awidthshow
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.18238 0.(s)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.46859 0. 32 0.04685 0.( binds unification variables that may occur in terms, types and environments. An )awidthshow
359 510 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(in)show
359 518 gm
(-)show
373 90 gm
0.03526 0.(stantiated)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.12084 0. 32 0.01208 0.( variable appears as )awidthshow
373 212 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.06356 0.(a\254)ashow
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.09445 0. 32 0.00944 0.( in the substitution. A )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.03398 0.(non-instatiated)ashow
373 385 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.15762 0. 32 0.01576 0.( variable appears as )awidthshow
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.07479 0.(a)ashow
0 3 rm
9 fz
bu fc
2 F /|______Palatino-Italic fnt
bn
(r)show
373 477 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.19714 0. 32 0.01971 0.( in the sub-)awidthshow
387 90 gm
0.07949 0. 32 0.00794 0.(stitution, where the )awidthshow
387 170 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.08850 0. 32 0.00885 0.(rank r)awidthshow
387 195 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.08789 0. 32 0.00878 0.( is an index into an environment. Rank 1 points to the right of the rightmost com-)awidthshow
401 90 gm
0.43991 0. 32 0.04399 0.(ponent of the environment; rank 2 points between the rightmost component and the one to its left, and so)awidthshow
415 90 gm
0.07797 0. 32 0.00779 0.(on. This information encodes a )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11810 0. 32 0.01181 0.(mixed prefix)awidthshow
415 267 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( )show
415 270 gm
0.07736 0. 32 0.00773 0.([Miller \(to appear\)]: universally quantified variables are repre)awidthshow
415 518 gm
(-)show
429 90 gm
0.90408 0. 32 0.09040 0.(sented by de Bruijn indices into the environments, while existentially quantified \(unification\) variables)awidthshow
443 90 gm
0.15533 0. 32 0.01553 0.(have ranks pointing between components of the environment. \(Therefore, the order of universal quantifiers)awidthshow
457 90 gm
(matters, but the order of contiguous existential quantifiers does not.\))show
471 108 gm
(The operations )show
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\335)show
bu fc
2 F /|______Times-Roman fnt
bn
( and )show
471 202 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Symbol fnt
bn
(\337)show
bu fc
2 F /|______Times-Roman fnt
bn
( shift all the \(free\) de Bruijn indices and ranks in )show
471 411 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( by +1 or -1.)show
485 108 gm
0.10360 0. 32 0.01036 0.(Before describing the algorithm, we give some properties of substitutions. Here is how the substitution)awidthshow
499 90 gm
0.89355 0. 32 0.08935 0.(shifts )awidthshow
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.37895 0.(s)ashow
0 fs
bu fc
2 F /|______Symbol fnt
bn
0.37895 0.(\335)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.50918 0. 32 0.05091 0.( and )awidthshow
499 149 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.26029 0.(s)ashow
0 fs
bu fc
2 F /|______Symbol fnt
bn
0.26029 0.(\337)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.68801 0. 32 0.06880 0.( are normalized away, and how a normalized substitution )awidthshow
499 403 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.44499 0.(s)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.72509 0. 32 0.07250 0.( is applied to a type )awidthshow
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.44282 0.(A)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.95153 0. 32 0.09515 0.( \(via)awidthshow
517 90 gm
(nc 503 90 517 116 6 rc)kp
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
517 116 gm
0 gr
517 116 lin
psb
currentpoint
pse
503 90 gm
503 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
832 div 448 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 272 sh
320 /Times-Roman f1
({) 187 272 sh
(}) 497 272 sh
192 ns
(0) 643 352 sh
(0) 643 130 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 295 272 sh
end MTsave restore
pse
513 116 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\). The order of occurrence of variables in a normalized substitution is not important.)show
536 108 gm
(nc 522 108 536 535 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
536 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
536 535 gm
0 gr
536 535 lin
psb
currentpoint
pse
522 108 gm
522 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13664 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) -25 288 sh
(s) 662 288 sh
(s) 2055 288 sh
(s) 2742 288 sh
(a) 6331 288 sh
(s) 7339 288 sh
(a) 8268 288 sh
(s) 9543 288 sh
(a) 11030 288 sh
(s) 11475 288 sh
(a) 12404 288 sh
(s) 13052 288 sh
320 /LicsPlain f1
(\345) 167 288 sh
(\246) 844 288 sh
(\344) 2247 288 sh
(\246) 2924 288 sh
(\360\246) 4236 288 sh
(\360) 5173 288 sh
(\246) 7626 288 sh
(\246) 9129 288 sh
(\246) 9725 288 sh
(\246) 11762 288 sh
(\246) 13234 288 sh
320 /Symbol f1
(=) 420 288 sh
(=) 2500 288 sh
(=) 4802 288 sh
(=) 8026 288 sh
(=) 12162 288 sh
192 /Times-Roman f1
(1) 1056 368 sh
(-1) 3149 368 sh
(+) 12737 368 sh
320 ns
( ;) 1187 288 sh
( ;) 3343 288 sh
( ) 5069 288 sh
( ;) 5357 288 sh
(\() 6235 288 sh
(,) 7236 288 sh
(\)) 7576 288 sh
(,) 9440 288 sh
( ;) 10056 288 sh
(\() 10934 288 sh
(,) 11372 288 sh
(\)) 11712 288 sh
(,) 12949 288 sh
192 /Times-Italic f1
(i) 4627 368 sh
(i) 7851 368 sh
(i) 9354 368 sh
(i) 9950 368 sh
(r) 11261 368 sh
(i) 11987 368 sh
(r) 12635 368 sh
(i) 12863 368 sh
(i) 13459 368 sh
320 /Symbol f1
(\254) 6637 288 sh
(\254) 8574 288 sh
320 /Courier-Oblique f1
(A) 7036 288 sh
(A) 8973 288 sh
end MTsave restore
pse
555 108 gm
(nc 541 108 555 491 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
555 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
555 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
555 491 gm
0 gr
555 491 lin
psb
currentpoint
pse
541 108 gm
541 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12256 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 288 sh
(A) 827 288 sh
(n) 4091 288 sh
(n ) 4887 288 sh
(n) 5390 288 sh
(n) 7049 288 sh
(n) 7845 288 sh
( ) 8451 288 sh
(n) 8762 288 sh
320 /LicsPlain f1
(\246) 158 288 sh
(\246) 983 288 sh
(\246) 2366 288 sh
(\246) 4231 288 sh
(\246) 7189 288 sh
(\246) 10939 288 sh
192 /Times-Italic f1
(i) 383 368 sh
(i) 1208 368 sh
(i) 2591 368 sh
(j) 2578 146 sh
(i) 4456 368 sh
(j) 4443 146 sh
(i) 7414 368 sh
(j) 7401 146 sh
(i) 11164 368 sh
(j) 11151 146 sh
320 ns
(j) 5955 288 sh
(i) 8363 288 sh
(j) 9327 288 sh
320 /Symbol f1
(=) 558 288 sh
(=) 2766 288 sh
(=) 4631 288 sh
(=) 7589 288 sh
(=) 11339 288 sh
192 /Times-Roman f1
(0) 1171 146 sh
320 /Times-Roman f1
( ;) 1318 288 sh
( ;) 3209 288 sh
(\() 5280 288 sh
(\) ;) 6061 288 sh
(\() 8652 288 sh
(\) ;) 9433 288 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) 2186 288 sh
(a) 3008 288 sh
320 /Symbol f1
(\243) 5657 288 sh
(>) 9030 288 sh
320 /Courier f1
(+) 8105 288 sh
(Top) 10416 288 sh
(Top) 11590 288 sh
end MTsave restore
pse
569 108 gm
(nc 555 108 569 417 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
569 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
569 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
569 417 gm
0 gr
569 417 lin
psb
currentpoint
pse
555 108 gm
555 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9888 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Roman f1
(\() -15 288 sh
(\)) 1049 288 sh
( ;) 3459 288 sh
(\() 4337 288 sh
(\)) 6398 288 sh
320 /Courier-Oblique f1
(A) 108 288 sh
(B) 839 288 sh
(A) 1768 288 sh
(B) 2766 288 sh
(q) 5186 288 sh
(A) 5887 288 sh
(B) 6188 288 sh
(q) 7843 288 sh
(A) 8544 288 sh
(B) 9112 288 sh
320 /Symbol f1
(-) 325 288 sh
(>) 584 288 sh
(-) 2252 288 sh
(>) 2511 288 sh
320 /LicsPlain f1
(\246) 1099 288 sh
(\246) 1924 288 sh
(\246) 2921 288 sh
(\246) 6448 288 sh
(\246) 8700 288 sh
(\246) 9267 288 sh
192 /Times-Italic f1
(i) 1324 368 sh
(j) 1311 146 sh
(i) 2149 368 sh
(j) 2136 146 sh
(i) 3146 368 sh
(j) 3133 146 sh
(i) 6673 368 sh
(j) 6660 146 sh
(i) 8925 368 sh
(j) 8912 146 sh
(i) 9492 368 sh
(j) 9479 146 sh
320 /Symbol f1
(=) 1499 288 sh
(=) 6848 288 sh
192 /Times-Roman f1
(+) 3215 146 sh
(1) 3328 146 sh
(+) 9561 146 sh
(1) 9674 146 sh
320 /Courier f1
(All\() 4461 288 sh
(<:) 5485 288 sh
(\)) 6067 288 sh
(All\() 7118 288 sh
(<:) 8142 288 sh
(\)) 8991 288 sh
end MTsave restore
pse
589 108 gm
(nc 574 108 589 500 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
589 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
589 500 gm
0 gr
589 500 lin
psb
currentpoint
pse
574 108 gm
574 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12544 div 480 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 272 sh
(a) 292 272 sh
(s) 737 272 sh
(a) 1531 272 sh
(a) 2600 272 sh
(a) 2917 272 sh
(s) 3925 272 sh
(s) 5039 272 sh
(s) 6693 272 sh
(s) 9940 272 sh
320 /Times-Roman f1
({) 184 272 sh
(,) 634 272 sh
(}) 939 272 sh
( ;) 1732 272 sh
({) 2809 272 sh
(,) 3822 272 sh
(}) 4127 272 sh
({) 4931 272 sh
(}) 5241 272 sh
( ;) 5534 272 sh
({) 6585 272 sh
(}) 6895 272 sh
(\() 7894 272 sh
(\) ;) 8675 272 sh
({) 9832 272 sh
(}) 10142 272 sh
(\() 11555 272 sh
(\)) 12336 272 sh
192 ns
(0) 5387 130 sh
192 /Times-Italic f1
(r) 523 352 sh
(i) 1081 352 sh
(j) 1109 130 sh
(i) 4269 352 sh
(j) 4297 130 sh
(j) 5411 352 sh
(i) 7037 352 sh
(j) 7065 130 sh
(i) 10284 352 sh
(j) 10312 130 sh
320 ns
(j) 8569 272 sh
(i) 11266 272 sh
(j) 12230 272 sh
320 /Symbol f1
(=) 1289 272 sh
(=) 4477 272 sh
(=) 7245 272 sh
(=) 10492 272 sh
320 /Symbol f1
(\254) 3223 272 sh
(\243) 8271 272 sh
(>) 11933 272 sh
320 /Courier-Oblique f1
(A) 3622 272 sh
(A) 4746 272 sh
(n) 6416 272 sh
(n ) 7501 272 sh
(n) 8004 272 sh
(n) 9663 272 sh
(n) 10748 272 sh
( ) 11354 272 sh
(n) 11665 272 sh
320 /Courier f1
(+) 11008 272 sh
end MTsave restore
pse
602 108 gm
(nc 588 108 602 538 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
602 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
602 538 gm
0 gr
602 538 lin
psb
currentpoint
pse
588 108 gm
588 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13760 div 448 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier f1
(Top) -16 272 sh
(Top) 1447 272 sh
(All\() 7421 272 sh
(<:) 8445 272 sh
(\)) 9027 272 sh
(All\() 10394 272 sh
(<:) 11418 272 sh
(\)) 12556 272 sh
320 /Times-Roman f1
({) 536 272 sh
(}) 846 272 sh
( ;) 2023 272 sh
(\() 2472 272 sh
(\){) 3536 272 sh
(}) 3952 272 sh
({) 4756 272 sh
(}) 5066 272 sh
({) 6042 272 sh
(}) 6352 272 sh
( ;) 6848 272 sh
(\() 7297 272 sh
(\){) 9358 272 sh
(}) 9774 272 sh
({) 12005 272 sh
(}) 12315 272 sh
({) 12861 272 sh
(}) 13171 272 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 644 272 sh
(s) 3750 272 sh
(s) 4864 272 sh
(s) 6150 272 sh
(s) 9572 272 sh
(s) 12113 272 sh
(s) 12969 272 sh
192 /Times-Italic f1
(i) 988 352 sh
(j) 1016 130 sh
(i) 4094 352 sh
(j) 4122 130 sh
(i) 5208 352 sh
(j) 5236 130 sh
(i) 6494 352 sh
(j) 6522 130 sh
(i) 9916 352 sh
(j) 9944 130 sh
(i) 12457 352 sh
(j) 12485 130 sh
(i) 13313 352 sh
(j) 13341 130 sh
320 /Symbol f1
(=) 1196 272 sh
(=) 4302 272 sh
(=) 10124 272 sh
320 /Courier-Oblique f1
(A) 2595 272 sh
(B) 3326 272 sh
(A) 4571 272 sh
(B) 5858 272 sh
(q) 8146 272 sh
(A) 8847 272 sh
(B) 9148 272 sh
(q) 11119 272 sh
(A) 11820 272 sh
(B) 12677 272 sh
320 /Symbol f1
(-) 2812 272 sh
(>) 3071 272 sh
(-) 5344 272 sh
(>) 5603 272 sh
192 /Times-Roman f1
(+) 6604 130 sh
(1) 6717 130 sh
(+) 13423 130 sh
(1) 13536 130 sh
end MTsave restore
pse
617 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______Times-Roman fnt
bn
0.26062 0. 32 0.02606 0.(A substitution is applied to a judgment, for example a typing judgment, as follows. Indices decrease while)awidthshow
631 90 gm
(moving into the environment, but all indices remain positive because of rank restrictions.)show
654 108 gm
(nc 640 108 654 270 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
654 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
654 270 gm
0 gr
654 270 lin
psb
currentpoint
pse
640 108 gm
640 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5184 div 448 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Roman f1
(\() -15 272 sh
( ) 306 272 sh
( ) 594 272 sh
( type\){) 866 272 sh
(}) 1912 272 sh
({) 2717 272 sh
(}) 3027 272 sh
( ) 3308 272 sh
( ) 3596 272 sh
({) 3861 272 sh
(}) 4171 272 sh
( type) 4452 272 sh
320 /Times-Italic f1
(E) 111 272 sh
(E) 2534 272 sh
192 ns
(i) 2054 352 sh
(j) 2082 130 sh
(i) 3169 352 sh
(j) 3197 130 sh
(i) 4313 352 sh
(j) 4341 130 sh
320 /LicsPlain f1
(\272) 410 272 sh
(\272) 3412 272 sh
320 /Courier-Oblique f1
(A) 674 272 sh
(A) 3676 272 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 1710 272 sh
(s) 2825 272 sh
(s) 3969 272 sh
320 /Symbol f1
(=) 2262 272 sh
end MTsave restore
pse
668 108 gm
(nc 654 108 668 467 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
668 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
668 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
668 467 gm
0 gr
668 467 lin
psb
currentpoint
pse
654 108 gm
654 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11488 div 448 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /LicsPlain f1
(\360) 0 272 sh
(\360) 1180 272 sh
320 /Times-Roman f1
({) 149 272 sh
(}) 459 272 sh
( ) 1076 272 sh
( ;) 1364 272 sh
(\() 2242 272 sh
(,) 2566 272 sh
(\){) 3035 272 sh
(}) 3451 272 sh
({) 4256 272 sh
(}) 4566 272 sh
(,) 4959 272 sh
({) 5402 272 sh
(}) 5712 272 sh
( ;) 6125 272 sh
(\() 7003 272 sh
(,) 7327 272 sh
(\){) 8052 272 sh
(}) 8468 272 sh
({) 9273 272 sh
(}) 9583 272 sh
(,) 9976 272 sh
({) 10675 272 sh
(}) 10985 272 sh
192 ns
(-) 4782 352 sh
(1) 4848 352 sh
(-) 5928 352 sh
(1) 5994 352 sh
(-) 9799 352 sh
(1) 9865 352 sh
(-) 11201 352 sh
(1) 11267 352 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 257 272 sh
(s) 3249 272 sh
(s) 4364 272 sh
(s) 5510 272 sh
(s) 8266 272 sh
(s) 9381 272 sh
(s) 10783 272 sh
192 /Times-Italic f1
(i) 601 352 sh
(j) 629 130 sh
(i) 3593 352 sh
(j) 3621 130 sh
(i) 4708 352 sh
(j) 4736 130 sh
(i) 5854 352 sh
(j) 5882 130 sh
(i) 8610 352 sh
(j) 8638 130 sh
(i) 9725 352 sh
(j) 9753 130 sh
(i) 11127 352 sh
(j) 11155 130 sh
320 ns
(E) 2368 272 sh
(E) 4073 272 sh
(E) 7129 272 sh
(E) 9090 272 sh
320 /Symbol f1
(=) 809 272 sh
(=) 3801 272 sh
(=) 8818 272 sh
320 /Courier f1
(:) 2614 272 sh
(:) 5007 272 sh
(<:) 7439 272 sh
(<:) 10088 272 sh
320 /Courier-Oblique f1
(A) 2824 272 sh
(A) 5217 272 sh
(A) 7841 272 sh
(A) 10490 272 sh
end MTsave restore
pse
F T cp
%%Page: ? 39
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(39)show
102 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.20492 0. 32 0.02049 0.(Here is how an index-1-replacement operation )awidthshow
105 280 gm
(nc 94 280 105 320 6 rc)kp
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
105 320 gm
0 gr
105 320 lin
psb
currentpoint
pse
94 280 gm
94 280 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
1280 div 352 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 218 sh
(C) 865 218 sh
320 /Times-Roman f1
({) 187 218 sh
(}) 1054 218 sh
320 /Times-Roman f1
(1) 285 218 sh
320 /Symbol f1
(\254) 497 218 sh
end MTsave restore
pse
102 320 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.26306 0. 32 0.02630 0.( is applied to a type )awidthshow
102 403 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
0.05427 0.(A)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.17456 0. 32 0.01745 0.( containing unification vari-)awidthshow
116 90 gm
0.63369 0. 32 0.06336 0.(ables. This operation occurs in the context of some substitution )awidthshow
116 356 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
0.41104 0.(s)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.67672 0. 32 0.06767 0.(; the case )awidthshow
119 404 gm
(nc 108 404 119 461 6 rc)kp
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
119 461 gm
0 gr
119 461 lin
psb
currentpoint
pse
108 404 gm
108 404 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
1824 div 352 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 218 sh
(a) 1484 218 sh
320 /Times-Roman f1
({) 184 218 sh
(}) 1031 218 sh
320 /Times-Italic f1
(i) 304 218 sh
320 /Symbol f1
(\254) 474 218 sh
320 /Courier-Oblique f1
(C) 842 218 sh
320 /Symbol f1
(=) 1242 218 sh
end MTsave restore
pse
116 461 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.69290 0. 32 0.06929 0.( is justified by)awidthshow
130 90 gm
(rank restrictions that ensure that whatever )show
130 260 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( is instantiated to, it cannot depend on )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(i)show
130 423 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
153 108 gm
(nc 139 108 153 347 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
153 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
153 347 gm
0 gr
153 347 lin
psb
currentpoint
pse
139 108 gm
139 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7648 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 288 sh
(a) 1484 288 sh
320 /Times-Roman f1
({) 184 288 sh
(}) 1031 288 sh
( ;) 1685 288 sh
({) 2307 288 sh
(}) 3154 288 sh
(\() 4014 288 sh
(\) ;) 4741 288 sh
({) 5469 288 sh
(}) 6414 288 sh
320 /Times-Italic f1
(i) 304 288 sh
(i) 2427 288 sh
(i) 4642 288 sh
192 ns
(n) 7261 368 sh
320 /Symbol f1
(\254) 474 288 sh
(\254) 2597 288 sh
(<) 4392 288 sh
(\254) 5857 288 sh
320 /Courier-Oblique f1
(C) 842 288 sh
(n) 2138 288 sh
(C) 2965 288 sh
(n ) 3621 288 sh
(n) 4124 288 sh
(n) 5300 288 sh
(n) 5591 288 sh
(C) 6225 288 sh
(C) 6863 288 sh
320 /Symbol f1
(=) 1242 288 sh
(=) 3365 288 sh
(=) 6625 288 sh
320 /LicsPlain f1
(\246) 7032 288 sh
192 /Times-Roman f1
(-) 7375 368 sh
(1) 7441 368 sh
end MTsave restore
pse
167 108 gm
(nc 155 108 167 297 6 rc)kp
F 1 setTxMode
(  )show
167 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
167 297 gm
0 gr
167 297 lin
psb
currentpoint
pse
155 108 gm
155 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6048 div 384 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(n) -11 218 sh
(C) 816 218 sh
(n) 1472 218 sh
( ) 2038 218 sh
(n) 2349 218 sh
(C) 4730 218 sh
320 /Times-Roman f1
({) 158 218 sh
(}) 1005 218 sh
(\() 2239 218 sh
(\) ;) 2966 218 sh
({) 4072 218 sh
(}) 4919 218 sh
320 /Times-Italic f1
(i) 278 218 sh
(i) 2867 218 sh
(i) 4192 218 sh
320 /Symbol f1
(\254) 448 218 sh
(>) 2617 218 sh
(\254) 4362 218 sh
320 /Symbol f1
(=) 1216 218 sh
(=) 5130 218 sh
320 /Times-Roman f1
(-) 1735 218 sh
(1) 1888 218 sh
320 /Courier f1
(Top) 3520 218 sh
(Top) 5381 218 sh
end MTsave restore
pse
181 108 gm
(nc 169 108 181 549 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
181 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
181 549 gm
0 gr
181 549 lin
psb
currentpoint
pse
169 108 gm
169 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
14112 div 384 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Roman f1
(\() -15 218 sh
(\){) 1049 218 sh
(}) 2002 218 sh
({) 2667 218 sh
(}) 3514 218 sh
({) 4351 218 sh
(} ;) 5642 218 sh
(\() 6244 218 sh
(\){) 8305 218 sh
(}) 9258 218 sh
({) 11350 218 sh
(}) 12197 218 sh
({) 12604 218 sh
(}) 13895 218 sh
320 /Courier-Oblique f1
(A) 108 218 sh
(B) 839 218 sh
(C) 1813 218 sh
(A) 2482 218 sh
(C) 3325 218 sh
(B) 4167 218 sh
(C) 5453 218 sh
(q) 7093 218 sh
(A) 7794 218 sh
(B) 8095 218 sh
(C) 9069 218 sh
(q) 10464 218 sh
(A) 11165 218 sh
(C) 12008 218 sh
(B) 12420 218 sh
(C) 13706 218 sh
320 /Symbol f1
(-) 325 218 sh
(>) 584 218 sh
(\254) 1445 218 sh
(\254) 2957 218 sh
(-) 3653 218 sh
(>) 3912 218 sh
(\254) 5085 218 sh
(\254) 8701 218 sh
(\254) 11640 218 sh
(\254) 13338 218 sh
320 /Times-Italic f1
(i) 1275 218 sh
(i) 2787 218 sh
(i) 4471 218 sh
(i) 8531 218 sh
(i) 11470 218 sh
(i) 12724 218 sh
320 /Symbol f1
(=) 2213 218 sh
(=) 9469 218 sh
320 /Times-Roman f1
(+) 4642 218 sh
(1) 4873 218 sh
(+) 12895 218 sh
(1) 13126 218 sh
320 /Courier f1
(All\() 6368 218 sh
(<:) 7392 218 sh
(\)) 7974 218 sh
(All\() 9739 218 sh
(<:) 10763 218 sh
(\)) 12299 218 sh
end MTsave restore
pse
196 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______Times-Roman fnt
bn
(The notation )show
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\\)show
196 152 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( indicates removing )show
196 240 gm
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a\254)show
bu fc
2 F /|______Courier-Oblique fnt
bn
(A)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( or )show
2 fs
bu fc
2 T /|______Symbol fnt
bn
(a)show
199 282 gm
9 fz
bu fc
2 F /|______Times-Italic fnt
bn
(r)show
196 286 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
( from )show
2 fs
bu fc
2 T /|______Symbol fnt
bn
(s)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
224 90 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Lift)show
224 104 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( increases indices above a cutoff index.)show
270 90 gm
(nc 241 90 270 300 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
270 300 gm
0 gr
270 300 lin
psb
currentpoint
pse
241 90 gm
241 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6720 div 928 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 393 moveto 3103 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 6605 0 rlineto stroke
sol 0 835 moveto 6605 0 rlineto stroke
sol 8 0 moveto 0 843 rlineto stroke
sol 6597 0 moveto 0 843 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 476 sh
(:) 738 476 sh
(Type) 914 476 sh
(lift) 2955 267 sh
(by) 1613 729 sh
(:) 1976 729 sh
(Int,) 2170 729 sh
(cutoff) 2640 729 sh
(:) 3479 729 sh
(Int\() 3673 729 sh
(0\)) 4408 729 sh
(result) 4860 476 sh
(:) 5659 476 sh
(Type) 5835 476 sh
320 /Symbol f1
(=) 4147 729 sh
256 /LicsPlain f1
(\305) 4715 476 sh
end MTsave restore
pse
1 1 pen
309 108 gm
(nc 283 108 309 405 6 rc)kp
F 1 setTxMode
(  )show
309 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
309 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
309 405 gm
0 gr
309 405 lin
psb
currentpoint
pse
283 108 gm
283 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9504 div 832 3 -1 roll exch div scale
currentpoint translate 64 52 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 259 345 moveto 407 0 rlineto stroke
2019 345 moveto 407 0 rlineto stroke
4716 345 moveto 407 0 rlineto stroke
8247 345 moveto 407 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 428 sh
(a) 817 428 sh
320 /Times-Italic f1
(lift) 278 219 sh
(i,) 286 681 sh
(j) 534 681 sh
(lift) 2038 219 sh
(i,) 2046 681 sh
(j) 2294 681 sh
(j) 3538 428 sh
(lift) 4735 219 sh
(i,) 4743 681 sh
(j) 4991 681 sh
(j) 6691 428 sh
(lift) 8266 219 sh
(i,) 8274 681 sh
(j) 8522 681 sh
256 /LicsPlain f1
(\305) 690 428 sh
(\305) 2450 428 sh
(\305) 5147 428 sh
(\305) 8678 428 sh
320 /Courier-Oblique f1
(n) 1775 428 sh
(n) 2591 428 sh
(n) 2973 428 sh
(n) 4472 428 sh
(n) 5288 428 sh
(n) 6126 428 sh
320 /Times-Roman f1
( \() 2783 428 sh
(\)) 3644 428 sh
( \() 5936 428 sh
(\)) 6797 428 sh
320 /Symbol f1
(\243) 3240 428 sh
(>) 6394 428 sh
320 /Times-Roman f1
(+) 5555 428 sh
(1) 5786 428 sh
320 /Courier f1
(Top) 7620 428 sh
(Top) 8814 428 sh
end MTsave restore
pse
1 1 pen
375 108 gm
(nc 322 108 375 400 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
375 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
375 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
375 400 gm
0 gr
375 400 lin
psb
currentpoint
pse
322 108 gm
322 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9344 div 1696 3 -1 roll exch div scale
currentpoint translate 64 50 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 294 345 moveto 407 0 rlineto stroke
2218 345 moveto 834 0 rlineto stroke
1372 1188 moveto 407 0 rlineto stroke
16 th 0 795 moveto 3591 0 rlineto stroke
8 th 5283 345 moveto 407 0 rlineto stroke
7207 345 moveto 834 0 rlineto stroke
6361 1188 moveto 407 0 rlineto stroke
16 th 4340 795 moveto 4888 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 34 428 sh
(A\251) 879 428 sh
(B) 1959 428 sh
(B\251) 3220 428 sh
(A) 382 1271 sh
(B) 1113 1271 sh
(A\251) 1957 1271 sh
(B\251) 2871 1271 sh
(A) 5023 428 sh
(A\251) 5868 428 sh
(B) 6948 428 sh
(B\251) 8209 428 sh
(q) 5100 1271 sh
(A) 5801 1271 sh
(B) 6102 1271 sh
(q) 7672 1271 sh
(A\251) 8373 1271 sh
(B\251) 8857 1271 sh
320 /Times-Italic f1
(lift) 313 219 sh
(i,) 321 681 sh
(j) 569 681 sh
(lift) 2451 219 sh
(i,) 2237 681 sh
(j) 2485 681 sh
(lift) 1391 1062 sh
(i,) 1399 1524 sh
(j) 1647 1524 sh
(lift) 5302 219 sh
(i,) 5310 681 sh
(j) 5558 681 sh
(lift) 7440 219 sh
(i,) 7226 681 sh
(j) 7474 681 sh
(lift) 6380 1062 sh
(i,) 6388 1524 sh
(j) 6636 1524 sh
256 /LicsPlain f1
(\305) 725 428 sh
(\305) 3076 428 sh
(\305) 1803 1271 sh
(\305) 5714 428 sh
(\305) 8065 428 sh
(\305) 6792 1271 sh
320 /Times-Roman f1
(+) 2663 681 sh
(1) 2894 681 sh
(+) 7652 681 sh
(1) 7883 681 sh
320 /Symbol f1
(-) 599 1271 sh
(>) 858 1271 sh
(-) 2357 1271 sh
(>) 2616 1271 sh
320 /Courier f1
(All\() 4375 1271 sh
(<:) 5399 1271 sh
(\)) 5981 1271 sh
(All\() 6947 1271 sh
(<:) 7971 1271 sh
(\)) 8736 1271 sh
end MTsave restore
pse
1 1 pen
401 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Retrieve)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( retrieves the instance or rank of a type variable from a substitution.)show
447 90 gm
(nc 418 90 447 384 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
447 384 gm
0 gr
447 384 lin
psb
currentpoint
pse
418 90 gm
418 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9408 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1802 392 moveto 3653 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 9305 0 rlineto stroke
sol 0 834 moveto 9305 0 rlineto stroke
sol 8 0 moveto 0 842 rlineto stroke
sol 9297 0 moveto 0 842 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(subst) 155 475 sh
(Subst) 1042 475 sh
320 /Times-Roman f1
(:) 886 475 sh
320 /Times-Italic f1
(retrieve) 3134 266 sh
(lift) 1821 728 sh
(:) 2246 728 sh
(Int\(=) 2440 728 sh
(0\),) 3178 728 sh
( var) 3570 728 sh
(:) 4146 728 sh
(TypeVar) 4322 728 sh
(instance) 5618 475 sh
(:) 6740 475 sh
(Type) 6916 475 sh
(rank) 7933 475 sh
(:) 8593 475 sh
(Int) 8787 475 sh
256 /LicsPlain f1
(\305) 5479 475 sh
320 /Symbol f1
(\310) 7610 475 sh
end MTsave restore
pse
1 1 pen
513 108 gm
(nc 462 108 513 346 6 rc)kp
F 1 setTxMode
(  )show
513 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
513 346 gm
0 gr
513 346 lin
psb
currentpoint
pse
462 108 gm
462 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7616 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 1113 381 moveto 407 0 rlineto stroke
1301 1160 moveto 1038 0 rlineto stroke
16 th 0 768 moveto 2888 0 rlineto stroke
8 th 4423 344 moveto 1038 0 rlineto stroke
4916 1160 moveto 1038 0 rlineto stroke
16 th 3637 768 moveto 2723 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 853 464 sh
(A\251) 1698 464 sh
(A) 712 1243 sh
(A\251) 2517 1243 sh
(A) 5639 427 sh
(B) 4328 1243 sh
(A) 6132 1243 sh
320 /Times-Italic f1
(lift) 1132 255 sh
(i) 1268 717 sh
(retrieve) 1326 1034 sh
(i,) 1609 1496 sh
(retrieve) 4448 218 sh
(i,) 4731 680 sh
(retrieve) 4941 1034 sh
(i,) 5224 1496 sh
256 /LicsPlain f1
(\305) 1544 464 sh
(\305) 2363 1243 sh
(\305) 5485 427 sh
(\305) 5978 1243 sh
320 ns
(=) 6905 851 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) 7 1243 sh
(s) 1015 1243 sh
(a) 1798 1496 sh
(s) 4137 427 sh
(a) 4920 680 sh
(b) 3665 1243 sh
(s) 4630 1243 sh
(a) 5413 1496 sh
(b) 6621 851 sh
(a) 7168 851 sh
320 /Symbol f1
(\254) 313 1243 sh
(\254) 3939 1243 sh
320 /Times-Roman f1
(,) 912 1243 sh
(,) 4527 1243 sh
( \() 6424 851 sh
(\)) 7403 851 sh
end MTsave restore
pse
1 1 pen
577 108 gm
(nc 526 108 577 478 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
577 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
577 478 gm
0 gr
577 478 lin
psb
currentpoint
pse
526 108 gm
526 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11840 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 706 768 moveto 1038 0 rlineto stroke
8 th 3717 344 moveto 1038 0 rlineto stroke
3930 1160 moveto 1038 0 rlineto stroke
16 th 3211 768 moveto 2163 0 rlineto stroke
8 th 7614 344 moveto 1038 0 rlineto stroke
7679 1160 moveto 1038 0 rlineto stroke
16 th 7256 768 moveto 1867 0 rlineto stroke
8 th 10230 344 moveto 1038 0 rlineto stroke
10295 1160 moveto 1038 0 rlineto stroke
16 th 9872 768 moveto 1867 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 851 sh
(s) 420 851 sh
(a) 1203 1104 sh
(s) 3431 427 sh
(a) 4214 680 sh
(b) 3239 1243 sh
(s) 3644 1243 sh
(a) 4427 1496 sh
(b) 5635 851 sh
(a) 6182 851 sh
(s) 7328 427 sh
(a) 8334 680 sh
(s) 7263 1243 sh
(a) 8176 1496 sh
(s) 9944 427 sh
(a) 10909 680 sh
(s) 9879 1243 sh
(a) 10792 1496 sh
192 /Times-Italic f1
(r) 206 931 sh
(r) 3430 1323 sh
320 ns
(retrieve) 731 642 sh
(i,) 1014 1104 sh
(r) 1913 851 sh
(i) 2378 851 sh
(retrieve) 3742 218 sh
(i,) 4025 680 sh
(retrieve) 3955 1034 sh
(i,) 4238 1496 sh
(retrieve) 7639 218 sh
(i) 7699 680 sh
(,) 8233 680 sh
(retrieve) 7704 1034 sh
(i,) 7987 1496 sh
(retrieve) 10255 218 sh
(i) 10356 680 sh
(,) 10808 680 sh
(retrieve) 10320 1034 sh
(i,) 10603 1496 sh
320 /Times-Roman f1
(,) 317 851 sh
(,) 3541 1243 sh
( \() 5438 851 sh
(\)) 6417 851 sh
(1) 8101 680 sh
(1) 10676 680 sh
256 /LicsPlain f1
(\305) 1768 851 sh
(\305) 4779 427 sh
(\305) 4992 1243 sh
(\305) 8676 427 sh
(\305) 8741 1243 sh
(\305) 11292 427 sh
(\305) 11357 1243 sh
320 ns
(=) 5919 851 sh
(\345) 7455 1243 sh
(\344) 10071 1243 sh
320 /Times-Roman f1
(+) 2125 851 sh
(+) 7870 680 sh
(-) 10523 680 sh
320 /Courier-Oblique f1
(A) 4933 427 sh
(A) 5146 1243 sh
(A) 8830 427 sh
(A) 8895 1243 sh
(A) 11446 427 sh
(A) 11511 1243 sh
end MTsave restore
pse
1 1 pen
603 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______Times-Italic fnt
bn
0.00891 0.(Replace)ashow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.02746 0. 32 0.00274 0.( performs a substitution with an index shift of -1 on \322free indices\323. A type variable shall not depend)awidthshow
617 90 gm
(on the replacement index.)show
663 90 gm
(nc 634 90 663 295 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
663 295 gm
0 gr
663 295 lin
psb
currentpoint
pse
634 90 gm
634 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6560 div 928 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1562 393 moveto 2963 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 6439 0 rlineto stroke
sol 0 835 moveto 6439 0 rlineto stroke
sol 8 0 moveto 0 843 rlineto stroke
sol 6431 0 moveto 0 843 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(t) 148 476 sh
(replace) 2566 267 sh
(index) 1581 729 sh
(:) 2344 729 sh
(Int,) 2538 729 sh
( ) 3018 729 sh
(ith) 3311 729 sh
(:) 3707 729 sh
(Type) 3883 729 sh
(result) 4694 476 sh
(:) 5493 476 sh
(Type) 5669 476 sh
320 /Times-Italic f1
(ype) 236 476 sh
(Type) 888 476 sh
(w) 3098 729 sh
320 /Times-Roman f1
(:) 740 476 sh
256 /LicsPlain f1
(\305) 4549 476 sh
end MTsave restore
pse
F T cp
%%Page: ? 40
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(40)show
141 108 gm
(nc 91 108 141 499 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
141 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
141 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
141 499 gm
0 gr
141 499 lin
psb
currentpoint
pse
91 108 gm
91 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12512 div 1600 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 259 735 moveto 1004 0 rlineto stroke
2187 735 moveto 1004 0 rlineto stroke
8 th 5240 345 moveto 595 0 rlineto stroke
5030 1128 moveto 1004 0 rlineto stroke
16 th 4765 735 moveto 1787 0 rlineto stroke
7105 735 moveto 1004 0 rlineto stroke
10668 735 moveto 1004 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 818 sh
(a) 1414 818 sh
320 /Times-Italic f1
(replace) 284 609 sh
(i,) 558 1071 sh
(replace) 2212 609 sh
(i,) 2486 1071 sh
(i) 4256 818 sh
(lift) 5353 219 sh
(replace) 5055 1002 sh
(,) 5467 1464 sh
(replace) 7130 609 sh
(i,) 7404 1071 sh
(i) 9548 818 sh
(replace) 10693 609 sh
(i,) 10967 1071 sh
320 /Courier-Oblique f1
(C) 743 1071 sh
(n) 1943 818 sh
(C) 2671 1071 sh
(n) 3356 818 sh
(n) 3738 818 sh
(C) 4967 428 sh
(n) 5261 681 sh
(C\251) 5982 428 sh
(n) 4786 1211 sh
(n) 5281 1464 sh
(C) 5564 1464 sh
(C\251) 6181 1211 sh
(n) 6861 818 sh
(C) 7589 1071 sh
(n) 8274 818 sh
(n) 9030 818 sh
(C) 11152 1071 sh
256 /LicsPlain f1
(\305) 1287 818 sh
(\305) 3215 818 sh
(\305) 5859 428 sh
(\305) 6058 1211 sh
(\305) 8133 818 sh
(\305) 11696 818 sh
320 /Times-Roman f1
( \() 3548 818 sh
(\)) 4355 818 sh
( \() 8840 818 sh
(\)) 9647 818 sh
320 /Symbol f1
(<) 4006 818 sh
(>) 9298 818 sh
320 /Times-Roman f1
(-) 5524 681 sh
(1) 5677 681 sh
(-) 8537 818 sh
(1) 8690 818 sh
320 /Courier f1
(Top) 10041 818 sh
(Top) 11832 818 sh
end MTsave restore
pse
1 1 pen
205 108 gm
(nc 154 108 205 442 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
205 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
205 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
205 442 gm
0 gr
205 442 lin
psb
currentpoint
pse
154 108 gm
154 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10688 div 1632 3 -1 roll exch div scale
currentpoint translate 64 44 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 294 345 moveto 1004 0 rlineto stroke
2815 345 moveto 1004 0 rlineto stroke
1458 1162 moveto 1004 0 rlineto stroke
16 th 0 769 moveto 4358 0 rlineto stroke
8 th 5964 345 moveto 1004 0 rlineto stroke
8485 345 moveto 1004 0 rlineto stroke
7128 1162 moveto 1004 0 rlineto stroke
16 th 5107 769 moveto 5485 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 34 428 sh
(C) 778 681 sh
(A\251) 1476 428 sh
(B) 2556 428 sh
(C) 3522 681 sh
(B\251) 3987 428 sh
(A) 468 1245 sh
(B) 1199 1245 sh
(C) 1942 1498 sh
(A\251) 2640 1245 sh
(B\251) 3554 1245 sh
(A) 5704 428 sh
(C) 6448 681 sh
(A\251) 7146 428 sh
(B) 8226 428 sh
(C) 9192 681 sh
(B\251) 9657 428 sh
(q) 5867 1245 sh
(A) 6568 1245 sh
(B) 6869 1245 sh
(C) 7612 1498 sh
(q) 9036 1245 sh
(A\251) 9737 1245 sh
(B\251) 10221 1245 sh
320 /Times-Italic f1
(replace) 319 219 sh
(i,) 593 681 sh
(replace) 2840 219 sh
(i) 2891 681 sh
(,) 3425 681 sh
(replace) 1483 1036 sh
(i,) 1757 1498 sh
(replace) 5989 219 sh
(i,) 6263 681 sh
(replace) 8510 219 sh
(i) 8561 681 sh
(,) 9095 681 sh
(replace) 7153 1036 sh
(i,) 7427 1498 sh
256 /LicsPlain f1
(\305) 1322 428 sh
(\305) 3843 428 sh
(\305) 2486 1245 sh
(\305) 6992 428 sh
(\305) 9513 428 sh
(\305) 8156 1245 sh
320 /Times-Roman f1
(+) 3062 681 sh
(1) 3293 681 sh
(+) 8732 681 sh
(1) 8963 681 sh
320 /Symbol f1
(-) 685 1245 sh
(>) 944 1245 sh
(-) 3040 1245 sh
(>) 3299 1245 sh
320 /Courier f1
(All\() 5142 1245 sh
(<:) 6166 1245 sh
(\)) 6748 1245 sh
(All\() 8311 1245 sh
(<:) 9335 1245 sh
(\)) 10100 1245 sh
end MTsave restore
pse
1 1 pen
231 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Strip)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( expands question-mark quantifiers and introduces ranked variables in substitutions.)show
275 90 gm
(nc 248 90 275 335 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
275 335 gm
0 gr
275 335 lin
psb
currentpoint
pse
248 90 gm
248 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7840 div 864 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 392 moveto 1668 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 7727 0 rlineto stroke
sol 0 775 moveto 7727 0 rlineto stroke
sol 8 0 moveto 0 783 rlineto stroke
sol 7719 0 moveto 0 783 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 475 sh
(:) 738 475 sh
(Type) 914 475 sh
(strip) 2134 266 sh
(subst) 1615 728 sh
(:) 2344 728 sh
(Subst) 2528 728 sh
(outType) 3424 475 sh
(:) 4511 475 sh
(Type,) 4687 475 sh
( outSubst) 5434 475 sh
(:) 6687 475 sh
(Subst) 6871 475 sh
256 /LicsPlain f1
(\305) 3280 475 sh
end MTsave restore
pse
1 1 pen
339 108 gm
(nc 290 108 339 515 6 rc)kp
F 1 setTxMode
(  )show
339 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
339 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
339 515 gm
0 gr
339 515 lin
psb
currentpoint
pse
290 108 gm
290 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13024 div 1568 3 -1 roll exch div scale
currentpoint translate 64 47 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 344 moveto 1038 0 rlineto stroke
2716 344 moveto 631 0 rlineto stroke
1504 1126 moveto 631 0 rlineto stroke
16 th 0 734 moveto 4332 0 rlineto stroke
8 th 5374 345 moveto 1038 0 rlineto stroke
5373 1126 moveto 631 0 rlineto stroke
16 th 5081 734 moveto 1657 0 rlineto stroke
7749 734 moveto 631 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 427 sh
(a) 690 680 sh
(s) 2908 680 sh
(s) 4011 427 sh
(a) 1220 1209 sh
(s) 1696 1462 sh
(s) 2799 1209 sh
(s) 5088 428 sh
(a) 5771 681 sh
(a) 5089 1209 sh
(s) 5565 1462 sh
(a) 6155 1209 sh
(s) 6482 1209 sh
(s) 7941 1070 sh
(s) 8861 817 sh
(a) 9905 817 sh
320 /Times-Italic f1
(retrieve) 318 218 sh
(strip) 2743 218 sh
(,) 3910 427 sh
(\251) 4235 427 sh
(strip) 1531 1000 sh
(,) 2698 1209 sh
(\251) 3023 1209 sh
(retrieve) 5399 219 sh
(r) 6581 428 sh
(strip) 5400 1000 sh
(,) 6381 1209 sh
(strip) 7776 608 sh
(,) 8760 817 sh
256 /LicsPlain f1
(\305) 1355 427 sh
(\305) 3371 427 sh
(\305) 2159 1209 sh
(\305) 6436 428 sh
(\305) 6028 1209 sh
(\305) 8404 817 sh
320 ns
(=) 9642 817 sh
(=) 10629 817 sh
320 /Courier-Oblique f1
(A) 1509 427 sh
(A) 2456 427 sh
(A\251) 3525 427 sh
(A\251) 2313 1209 sh
(A) 7489 817 sh
(A) 8558 817 sh
(A) 9350 817 sh
(A) 10337 817 sh
(C) 12301 817 sh
(B) 12615 817 sh
320 /Times-Roman f1
( \() 9147 817 sh
(,) 10129 817 sh
( ) 10257 817 sh
(\)) 12825 817 sh
320 /Courier f1
(All\(?) 10920 817 sh
(<:) 11930 817 sh
(\)) 12494 817 sh
end MTsave restore
pse
1 1 pen
405 108 gm
(nc 354 108 405 526 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
405 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
405 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
405 526 gm
0 gr
405 526 lin
psb
currentpoint
pse
354 108 gm
354 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13376 div 1632 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 283 345 moveto 1004 0 rlineto stroke
2938 345 moveto 689 0 rlineto stroke
2690 1201 moveto 631 0 rlineto stroke
16 th 0 809 moveto 4645 0 rlineto stroke
8 th 7466 385 moveto 1004 0 rlineto stroke
10121 385 moveto 631 0 rlineto stroke
9655 1201 moveto 631 0 rlineto stroke
16 th 7183 809 moveto 4587 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 428 sh
(B\251) 1455 428 sh
(B\251) 2535 428 sh
(B") 3795 428 sh
(B) 2431 1284 sh
(B") 3489 1284 sh
(B) 7207 468 sh
(A) 7983 721 sh
(B\251) 8638 468 sh
(B\251) 9718 468 sh
(B") 10920 468 sh
(A) 9095 1284 sh
(B) 9396 1284 sh
(B") 10454 1284 sh
(A) 12037 892 sh
320 /Times-Italic f1
(replace) 308 219 sh
(,) 673 681 sh
(strip) 2994 219 sh
(,) 3272 681 sh
(,) 4223 428 sh
(\251) 4548 428 sh
(strip) 2717 1075 sh
(,) 3917 1284 sh
(\251) 4242 1284 sh
(replace) 7491 259 sh
(,) 7855 721 sh
(strip) 10148 259 sh
(,) 11348 468 sh
(\251) 11673 468 sh
(strip) 9682 1075 sh
(,) 10882 1284 sh
(\251) 11207 1284 sh
320 /Times-Roman f1
(1) 541 681 sh
(1) 7723 721 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) 774 681 sh
(a) 2945 681 sh
(s) 3373 681 sh
(s) 4324 428 sh
(s) 2882 1537 sh
(s) 4018 1284 sh
(a) 4885 892 sh
(s) 6107 892 sh
(s) 10313 721 sh
(s) 11449 468 sh
(s) 9847 1537 sh
(s) 10983 1284 sh
256 /LicsPlain f1
(\305) 1311 428 sh
(\305) 3651 428 sh
(\305) 3345 1284 sh
(\305) 8494 468 sh
(\305) 10776 468 sh
(\305) 10310 1284 sh
320 ns
(=) 12329 892 sh
192 /Times-Roman f1
(1) 3159 761 sh
320 ns
( \() 4709 892 sh
( new in ) 5086 892 sh
(\)) 6344 892 sh
( \() 11834 892 sh
(\)) 13179 892 sh
320 /Courier f1
(All\(?) 340 1284 sh
(<:Top\)) 1350 1284 sh
(All\(?) 7683 1284 sh
(<:) 8693 1284 sh
(\)) 9275 1284 sh
(Top) 12601 892 sh
end MTsave restore
pse
1 1 pen
431 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(TypeIde)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( extracts the bound of a type identifier from an environment.)show
477 90 gm
(nc 448 90 477 324 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
477 324 gm
0 gr
477 324 lin
psb
currentpoint
pse
448 90 gm
448 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7488 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1401 392 moveto 4063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 7378 0 rlineto stroke
sol 0 833 moveto 7378 0 rlineto stroke
sol 8 0 moveto 0 841 rlineto stroke
sol 7370 0 moveto 0 841 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(env) 150 475 sh
(:) 656 475 sh
(Env) 847 475 sh
(typeIde) 2962 266 sh
(index) 1420 728 sh
(:) 2183 728 sh
(Int,) 2377 728 sh
( depth) 2857 728 sh
(:) 3707 728 sh
(Int\() 3901 728 sh
(i) 4629 728 sh
(\)) 5341 728 sh
(result) 5633 475 sh
(:) 6432 475 sh
(Type) 6608 475 sh
320 /Symbol f1
(=) 4375 728 sh
320 /Times-Italic f1
(ndex) 4717 728 sh
256 /LicsPlain f1
(\305) 5488 475 sh
end MTsave restore
pse
1 1 pen
543 108 gm
(nc 492 108 543 374 6 rc)kp
F 1 setTxMode
(  )show
543 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
543 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
543 374 gm
0 gr
543 374 lin
psb
currentpoint
pse
492 108 gm
492 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8512 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 902 386 moveto 407 0 rlineto stroke
936 1165 moveto 981 0 rlineto stroke
16 th 0 773 moveto 2466 0 rlineto stroke
8 th 3831 344 moveto 981 0 rlineto stroke
4151 1165 moveto 981 0 rlineto stroke
16 th 3215 773 moveto 2312 0 rlineto stroke
8 th 6800 344 moveto 981 0 rlineto stroke
7029 1165 moveto 981 0 rlineto stroke
16 th 6276 773 moveto 2129 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 642 469 sh
(A\251) 1487 469 sh
(A) 676 1248 sh
(A\251) 2095 1248 sh
(n) 4079 680 sh
(B) 4980 427 sh
(A) 3891 1248 sh
(n) 4177 1501 sh
(B) 5300 1248 sh
(n) 7048 680 sh
(B) 7949 427 sh
(A) 6769 1248 sh
(n) 7055 1501 sh
(B) 8178 1248 sh
320 /Times-Italic f1
(lift) 921 260 sh
(d) 1020 722 sh
(E) 37 1248 sh
(typeIde) 956 1039 sh
(d) 1474 1501 sh
(E) 3573 427 sh
(typeIde) 3851 218 sh
(d) 4387 680 sh
(E) 3252 1248 sh
(typeIde) 4171 1039 sh
(d) 4929 1501 sh
(E) 6542 427 sh
(typeIde) 6820 218 sh
(d) 7356 680 sh
(E) 6313 1248 sh
(typeIde) 7049 1039 sh
(d) 7807 1501 sh
256 /LicsPlain f1
(\305) 1333 469 sh
(\305) 1941 1248 sh
(\305) 4836 427 sh
(\305) 5156 1248 sh
(\305) 7805 427 sh
(\305) 8034 1248 sh
320 /Times-Roman f1
(,) 235 1248 sh
(,) 3450 1248 sh
(,) 6511 1248 sh
320 /Symbol f1
(<) 355 1248 sh
(<) 3570 1248 sh
320 /Courier f1
(:) 466 1248 sh
(1) 1184 1501 sh
(:) 3681 1248 sh
(:) 6559 1248 sh
320 /Times-Roman f1
(,) 1350 1501 sh
(,) 4263 680 sh
(,) 4805 1501 sh
(,) 7232 680 sh
(,) 7683 1501 sh
320 /Times-Roman f1
(+) 4444 1501 sh
(1) 4675 1501 sh
(+) 7322 1501 sh
(1) 7553 1501 sh
end MTsave restore
pse
1 1 pen
567 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(TermIde)show
567 124 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( extracts the type of a type identifier from an environment.)show
613 90 gm
(nc 584 90 613 324 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
613 324 gm
0 gr
613 324 lin
psb
currentpoint
pse
584 90 gm
584 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7488 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1401 392 moveto 4063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 7378 0 rlineto stroke
sol 0 833 moveto 7378 0 rlineto stroke
sol 8 0 moveto 0 841 rlineto stroke
sol 7370 0 moveto 0 841 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(env) 150 475 sh
(:) 656 475 sh
(Env) 847 475 sh
(termIde) 2935 266 sh
(index) 1420 728 sh
(:) 2183 728 sh
(Int,) 2377 728 sh
( depth) 2857 728 sh
(:) 3707 728 sh
(Int\() 3901 728 sh
(i) 4629 728 sh
(\)) 5341 728 sh
(result) 5633 475 sh
(:) 6432 475 sh
(Type) 6608 475 sh
320 /Symbol f1
(=) 4375 728 sh
320 /Times-Italic f1
(ndex) 4717 728 sh
256 /LicsPlain f1
(\305) 5488 475 sh
end MTsave restore
pse
1 1 pen
679 108 gm
(nc 628 108 679 373 6 rc)kp
F 1 setTxMode
(  )show
679 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
679 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
679 373 gm
0 gr
679 373 lin
psb
currentpoint
pse
628 108 gm
628 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8480 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 837 386 moveto 407 0 rlineto stroke
753 1165 moveto 1034 0 rlineto stroke
16 th 0 773 moveto 2336 0 rlineto stroke
8 th 3700 344 moveto 1034 0 rlineto stroke
4021 1165 moveto 1034 0 rlineto stroke
16 th 3085 773 moveto 2365 0 rlineto stroke
8 th 6723 344 moveto 1034 0 rlineto stroke
6952 1165 moveto 1034 0 rlineto stroke
16 th 6199 773 moveto 2182 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 577 469 sh
(A\251) 1422 469 sh
(A) 493 1248 sh
(A\251) 1965 1248 sh
(n) 3975 680 sh
(B) 4902 427 sh
(A) 3761 1248 sh
(n) 4074 1501 sh
(B) 5223 1248 sh
(n) 6998 680 sh
(B) 7925 427 sh
(A) 6692 1248 sh
(n) 7005 1501 sh
(B) 8154 1248 sh
320 /Times-Italic f1
(lift) 856 260 sh
(d) 955 722 sh
(E) 37 1248 sh
(termIde) 773 1039 sh
(d) 1318 1501 sh
(E) 3442 427 sh
(termIde) 3720 218 sh
(d) 4283 680 sh
(E) 3122 1248 sh
(termIde) 4041 1039 sh
(d) 4826 1501 sh
(E) 6465 427 sh
(termIde) 6743 218 sh
(d) 7306 680 sh
(E) 6236 1248 sh
(termIde) 6972 1039 sh
(d) 7757 1501 sh
256 /LicsPlain f1
(\305) 1268 469 sh
(\305) 1811 1248 sh
(\305) 4758 427 sh
(\305) 5079 1248 sh
(\305) 7781 427 sh
(\305) 8010 1248 sh
320 /Times-Roman f1
(,) 235 1248 sh
(,) 3320 1248 sh
(,) 6434 1248 sh
320 /Courier f1
(:) 283 1248 sh
(1) 1028 1501 sh
(:) 3551 1248 sh
(:) 6482 1248 sh
320 /Times-Roman f1
(,) 1194 1501 sh
(,) 4159 680 sh
(,) 4702 1501 sh
(,) 7182 680 sh
(,) 7633 1501 sh
320 /Symbol f1
(<) 3440 1248 sh
320 /Times-Roman f1
(+) 4341 1501 sh
(1) 4572 1501 sh
(+) 7272 1501 sh
(1) 7503 1501 sh
end MTsave restore
pse
F T cp
%%Page: ? 41
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(41)show
102 90 gm
2 fs
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(ExposeArrow)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( strips variables until it can find or generate an arrow type.)show
147 90 gm
(nc 119 90 147 379 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
147 379 gm
0 gr
147 379 lin
psb
currentpoint
pse
119 90 gm
119 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9248 div 896 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 392 moveto 3063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 9122 0 rlineto stroke
sol 0 808 moveto 9122 0 rlineto stroke
sol 8 0 moveto 0 816 rlineto stroke
sol 9114 0 moveto 0 816 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 475 sh
(:) 738 475 sh
(Type) 914 475 sh
(exposeArrow) 2274 266 sh
(env) 1610 728 sh
(:) 2116 728 sh
(Env,) 2307 728 sh
( subst) 2930 728 sh
(:) 3739 728 sh
(Subst) 3923 728 sh
(outType) 4819 475 sh
(:) 5906 475 sh
(Type,) 6082 475 sh
( outSubst) 6829 475 sh
(:) 8082 475 sh
(Subst) 8266 475 sh
256 /LicsPlain f1
(\305) 4675 475 sh
end MTsave restore
pse
1 1 pen
213 108 gm
(nc 162 108 213 433 6 rc)kp
F 1 setTxMode
(  )show
213 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
213 433 gm
0 gr
213 433 lin
psb
currentpoint
pse
162 108 gm
162 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10400 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 344 moveto 981 0 rlineto stroke
2661 344 moveto 1735 0 rlineto stroke
1463 1160 moveto 1735 0 rlineto stroke
16 th 0 768 moveto 5381 0 rlineto stroke
7122 768 moveto 1735 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 427 sh
(typeIde) 315 218 sh
(exposeArrow) 2683 218 sh
(E,) 3272 680 sh
(,) 4959 427 sh
(\251) 5284 427 sh
(exposeArrow) 1485 1034 sh
(E,) 2074 1496 sh
(,) 3761 1243 sh
(\251) 4086 1243 sh
(exposeArrow) 7144 642 sh
(E,) 7733 1104 sh
(,) 9967 851 sh
320 /Courier-Oblique f1
(n) 690 680 sh
(A) 1454 427 sh
(A) 2401 427 sh
(A\251) 4574 427 sh
(n) 1219 1243 sh
(A\251) 3376 1243 sh
(A) 6132 851 sh
(B) 6863 851 sh
(A) 9035 851 sh
(B) 9766 851 sh
256 /LicsPlain f1
(\305) 1300 427 sh
(\305) 4420 427 sh
(\305) 3222 1243 sh
(\305) 8881 851 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3568 680 sh
(s) 5060 427 sh
(s) 2370 1496 sh
(s) 3862 1243 sh
(s) 8029 1104 sh
(s) 10068 851 sh
320 /Symbol f1
(-) 6349 851 sh
(>) 6608 851 sh
(-) 9252 851 sh
(>) 9511 851 sh
end MTsave restore
pse
1 1 pen
277 108 gm
(nc 226 108 277 281 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
277 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
277 281 gm
0 gr
277 281 lin
psb
currentpoint
pse
226 108 gm
226 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5536 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 344 moveto 1038 0 rlineto stroke
2716 344 moveto 1735 0 rlineto stroke
1504 1160 moveto 1735 0 rlineto stroke
16 th 0 768 moveto 5436 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 427 sh
(a) 690 680 sh
(s) 3623 680 sh
(s) 5115 427 sh
(a) 1220 1243 sh
(s) 2411 1496 sh
(s) 3903 1243 sh
320 /Times-Italic f1
(retrieve) 318 218 sh
(exposeArrow) 2738 218 sh
(E,) 3327 680 sh
(,) 5014 427 sh
(\251) 5339 427 sh
(exposeArrow) 1526 1034 sh
(E,) 2115 1496 sh
(,) 3802 1243 sh
(\251) 4127 1243 sh
256 /LicsPlain f1
(\305) 1355 427 sh
(\305) 4475 427 sh
(\305) 3263 1243 sh
320 /Courier-Oblique f1
(A) 1509 427 sh
(A) 2456 427 sh
(A\251) 4629 427 sh
(A\251) 3417 1243 sh
end MTsave restore
pse
1 1 pen
340 108 gm
(nc 290 108 340 446 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
340 446 gm
0 gr
340 446 lin
psb
currentpoint
pse
290 108 gm
290 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10816 div 1600 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 3602 344 moveto 1038 0 rlineto stroke
291 1125 moveto 1735 0 rlineto stroke
16 th 0 733 moveto 8275 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3316 427 sh
(a) 3999 680 sh
(a) 7 1208 sh
(s) 1198 1461 sh
(a) 2283 1208 sh
(a) 3128 1208 sh
(a) 3824 1208 sh
(a) 4608 1208 sh
(a) 5453 1208 sh
(a) 6043 1208 sh
(a) 6584 1208 sh
(s) 7282 1208 sh
(a) 7812 1208 sh
(a) 8515 816 sh
(a) 8949 816 sh
(s) 10372 816 sh
320 /Times-Italic f1
(retrieve) 3627 218 sh
(r) 4809 427 sh
(exposeArrow) 313 999 sh
(E,) 902 1461 sh
(\251) 2505 1208 sh
(") 3338 1208 sh
(,) 3617 1208 sh
(\251) 4830 1208 sh
(") 5663 1208 sh
(,) 5942 1208 sh
(\251) 6265 1208 sh
(,) 6483 1208 sh
(") 6794 1208 sh
(,) 7075 1208 sh
(\251) 8737 816 sh
(,) 8848 816 sh
(") 9159 816 sh
192 ns
(r) 6330 1288 sh
(r) 6922 1288 sh
256 /LicsPlain f1
(\305) 4664 427 sh
(\305) 2050 1208 sh
320 /Times-Roman f1
(\() 2187 1208 sh
(\)) 3521 1208 sh
(\() 3728 1208 sh
(\() 4512 1208 sh
(\)) 5846 1208 sh
(\() 7186 1208 sh
(\\) 7626 1208 sh
(\)\)) 8047 1208 sh
( \() 8339 816 sh
( new in ) 9351 816 sh
(\)) 10609 816 sh
320 /Symbol f1
(-) 2631 1208 sh
(>) 2890 1208 sh
(\254) 4130 1208 sh
(-) 4956 1208 sh
(>) 5215 1208 sh
end MTsave restore
pse
1 1 pen
366 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(ExposeForall)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( strips variables until it can find a forall type or can generate a \(non-)show
366 417 gm
bu fc
2 F /|______Courier fnt
bn
(?)show
bu fc
2 F /|______Times-Roman fnt
bn
(\) forall type.)show
411 90 gm
(nc 383 90 411 379 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
411 379 gm
0 gr
411 379 lin
psb
currentpoint
pse
383 90 gm
383 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9248 div 896 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 393 moveto 3063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 9122 0 rlineto stroke
sol 0 809 moveto 9122 0 rlineto stroke
sol 8 0 moveto 0 817 rlineto stroke
sol 9114 0 moveto 0 817 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 476 sh
(:) 738 476 sh
(Type) 914 476 sh
(exposeAll) 2494 267 sh
(env) 1610 729 sh
(:) 2116 729 sh
(Env,) 2307 729 sh
( subst) 2930 729 sh
(:) 3739 729 sh
(Subst) 3923 729 sh
(outType) 4819 476 sh
(:) 5906 476 sh
(Type,) 6082 476 sh
( outSubst) 6829 476 sh
(:) 8082 476 sh
(Subst) 8266 476 sh
256 /LicsPlain f1
(\305) 4675 476 sh
end MTsave restore
pse
1 1 pen
477 108 gm
(nc 426 108 477 468 6 rc)kp
F 1 setTxMode
(  )show
477 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
477 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
477 468 gm
0 gr
477 468 lin
psb
currentpoint
pse
426 108 gm
426 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11520 div 1632 3 -1 roll exch div scale
currentpoint translate 64 44 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 345 moveto 981 0 rlineto stroke
2661 345 moveto 1295 0 rlineto stroke
1463 1162 moveto 1295 0 rlineto stroke
16 th 0 769 moveto 4941 0 rlineto stroke
7679 769 moveto 1295 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 428 sh
(typeIde) 315 219 sh
(exposeAll) 2683 219 sh
(E,) 3052 681 sh
(,) 4519 428 sh
(\251) 4844 428 sh
(exposeAll) 1485 1036 sh
(E,) 1854 1498 sh
(,) 3321 1245 sh
(\251) 3646 1245 sh
(exposeAll) 7701 643 sh
(E,) 8070 1105 sh
(,) 11081 852 sh
320 /Courier-Oblique f1
(n) 690 681 sh
(A) 1454 428 sh
(A) 2401 428 sh
(A\251) 4134 428 sh
(n) 1219 1245 sh
(A\251) 2936 1245 sh
(q) 6418 852 sh
(A) 7119 852 sh
(B) 7420 852 sh
(q) 9878 852 sh
(A) 10579 852 sh
(B) 10880 852 sh
256 /LicsPlain f1
(\305) 1300 428 sh
(\305) 3980 428 sh
(\305) 2782 1245 sh
(\305) 8998 852 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3348 681 sh
(s) 4620 428 sh
(s) 2150 1498 sh
(s) 3422 1245 sh
(s) 8366 1105 sh
(s) 11182 852 sh
320 /Courier f1
(All\() 5693 852 sh
(<:) 6717 852 sh
(\)) 7299 852 sh
(All\() 9153 852 sh
(<:) 10177 852 sh
(\)) 10759 852 sh
end MTsave restore
pse
1 1 pen
541 108 gm
(nc 490 108 541 268 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
541 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
541 268 gm
0 gr
541 268 lin
psb
currentpoint
pse
490 108 gm
490 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5120 div 1632 3 -1 roll exch div scale
currentpoint translate 64 44 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 345 moveto 1038 0 rlineto stroke
2716 345 moveto 1295 0 rlineto stroke
1504 1162 moveto 1295 0 rlineto stroke
16 th 0 769 moveto 4996 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 428 sh
(a) 690 681 sh
(s) 3403 681 sh
(s) 4675 428 sh
(a) 1220 1245 sh
(s) 2191 1498 sh
(s) 3463 1245 sh
320 /Times-Italic f1
(retrieve) 318 219 sh
(exposeAll) 2738 219 sh
(E,) 3107 681 sh
(,) 4574 428 sh
(\251) 4899 428 sh
(exposeAll) 1526 1036 sh
(E,) 1895 1498 sh
(,) 3362 1245 sh
(\251) 3687 1245 sh
256 /LicsPlain f1
(\305) 1355 428 sh
(\305) 4035 428 sh
(\305) 2823 1245 sh
320 /Courier-Oblique f1
(A) 1509 428 sh
(A) 2456 428 sh
(A\251) 4189 428 sh
(A\251) 2977 1245 sh
end MTsave restore
pse
1 1 pen
604 108 gm
(nc 554 108 604 478 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
604 108 gm
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
604 478 gm
0 gr
604 478 lin
psb
currentpoint
pse
554 108 gm
554 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11840 div 1600 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 4123 344 moveto 1038 0 rlineto stroke
291 1126 moveto 1295 0 rlineto stroke
16 th 0 733 moveto 9317 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3837 427 sh
(a) 4520 680 sh
(a) 7 1209 sh
(s) 978 1462 sh
(a) 3014 1209 sh
(a) 3429 1209 sh
(a) 4125 1209 sh
(a) 6080 1209 sh
(a) 6495 1209 sh
(a) 7085 1209 sh
(a) 7626 1209 sh
(s) 8324 1209 sh
(a) 8854 1209 sh
(a) 9557 816 sh
(a) 9991 816 sh
(s) 11414 816 sh
320 /Times-Italic f1
(retrieve) 4148 218 sh
(r) 5330 427 sh
(exposeAll) 313 1000 sh
(E,) 682 1462 sh
(\251) 3236 1209 sh
(") 3639 1209 sh
(,) 3918 1209 sh
(\251) 6302 1209 sh
(") 6705 1209 sh
(,) 6984 1209 sh
(\251) 7307 1209 sh
(,) 7525 1209 sh
(") 7836 1209 sh
(,) 8117 1209 sh
(\251) 9779 816 sh
(,) 9890 816 sh
(") 10201 816 sh
192 ns
(r) 7372 1289 sh
(r) 7964 1289 sh
256 /LicsPlain f1
(\305) 5185 427 sh
(\305) 1610 1209 sh
320 /Times-Roman f1
(\() 1747 1209 sh
(\)) 3822 1209 sh
(\() 4029 1209 sh
(\() 4813 1209 sh
(\)) 6888 1209 sh
(\() 8228 1209 sh
(\\) 8668 1209 sh
(\)\)) 9089 1209 sh
( \() 9381 816 sh
( new in ) 10393 816 sh
(\)) 11651 816 sh
320 /Courier f1
(All\(<:) 1871 1209 sh
(\)) 3325 1209 sh
(All\(<:) 4937 1209 sh
(\)) 6391 1209 sh
320 /Symbol f1
(\254) 4431 1209 sh
end MTsave restore
pse
1 1 pen
630 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(OccurCheck)show
630 140 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( tests for circular instantiations and rank violations \(variable captures\).)show
676 90 gm
(nc 647 90 676 444 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
676 444 gm
0 gr
676 444 lin
psb
currentpoint
pse
647 90 gm
647 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11328 div 928 3 -1 roll exch div scale
currentpoint translate 64 36 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 393 moveto 7611 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 11207 0 rlineto stroke
sol 0 835 moveto 11207 0 rlineto stroke
sol 8 0 moveto 0 843 rlineto stroke
sol 11199 0 moveto 0 843 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 476 sh
(:) 738 476 sh
(Type) 914 476 sh
(occurCheck) 4623 267 sh
(var) 1613 729 sh
(:) 2109 729 sh
(TypeVar,) 2285 729 sh
( varRank) 3511 729 sh
(:) 4748 729 sh
(Int,) 4942 729 sh
( subst) 5422 729 sh
(:) 6231 729 sh
(Subst,) 6415 729 sh
( level) 7233 729 sh
(:) 7984 729 sh
(Int\(=) 8178 729 sh
(0\)) 8916 729 sh
(result) 9368 476 sh
(:) 10167 476 sh
(Subst) 10351 476 sh
256 /LicsPlain f1
(\305) 9223 476 sh
end MTsave restore
pse
F T cp
%%Page: ? 42
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(42)show
143 108 gm
(nc 91 108 143 434 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
143 434 gm
0 gr
143 434 lin
psb
currentpoint
pse
91 108 gm
91 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10432 div 1664 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 1181 344 moveto 1038 0 rlineto stroke
280 1192 moveto 1588 0 rlineto stroke
16 th 0 799 moveto 3427 0 rlineto stroke
8 th 6715 344 moveto 1038 0 rlineto stroke
6391 1192 moveto 1588 0 rlineto stroke
16 th 6111 799 moveto 2273 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 895 427 sh
(b) 1604 680 sh
(b) 28 1275 sh
(a) 564 1528 sh
(s) 1134 1528 sh
(b) 2040 1275 sh
(s) 2551 1275 sh
(b) 3102 1275 sh
(a) 3667 882 sh
(b) 4267 882 sh
(s) 6429 427 sh
(b) 7138 680 sh
(b) 6139 1275 sh
(a) 6675 1528 sh
(s) 7245 1528 sh
(s) 8130 1275 sh
(a) 8624 882 sh
(b) 9224 882 sh
320 /Times-Italic f1
(retrieve) 1206 218 sh
(s) 2390 427 sh
(occurCheck) 304 1066 sh
(,) 790 1528 sh
(r,) 909 1528 sh
(,) 1362 1528 sh
(i) 1475 1528 sh
(,) 2344 1275 sh
(,) 4461 882 sh
(s) 4667 882 sh
(<) 4854 882 sh
(r) 5132 882 sh
(retrieve) 6740 218 sh
(s) 7924 427 sh
(occurCheck) 6415 1066 sh
(,) 6901 1528 sh
(r,) 7020 1528 sh
(,) 7473 1528 sh
(i) 7586 1528 sh
(,) 9418 882 sh
(s) 9624 882 sh
(r) 10085 882 sh
192 ns
(r) 2231 1355 sh
256 /LicsPlain f1
(\305) 2243 427 sh
(\305) 1892 1275 sh
(\305) 7777 427 sh
(\305) 8003 1275 sh
320 ns
(=) 3983 882 sh
(=) 8940 882 sh
320 /Times-Roman f1
(\() 2455 1275 sh
(\\) 2895 1275 sh
(\)) 3305 1275 sh
( \() 3491 882 sh
( ) 4587 882 sh
(\)) 5272 882 sh
( \() 8448 882 sh
( ) 9544 882 sh
(\)) 10225 882 sh
320 /Symbol f1
(\263) 9828 882 sh
end MTsave restore
pse
1 1 pen
207 108 gm
(nc 155 108 207 564 6 rc)kp
F 1 setTxMode
(  )show
207 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
207 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
207 564 gm
0 gr
207 564 lin
psb
currentpoint
pse
155 108 gm
155 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
14592 div 1664 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 345 moveto 1038 0 rlineto stroke
2694 345 moveto 1588 0 rlineto stroke
1487 1193 moveto 1588 0 rlineto stroke
16 th 0 800 moveto 4754 0 rlineto stroke
6869 800 moveto 1588 0 rlineto stroke
12523 800 moveto 1588 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 428 sh
(b) 716 681 sh
(a) 2978 681 sh
(s) 3548 681 sh
(s) 4433 428 sh
(b) 1235 1276 sh
(a) 1771 1529 sh
(s) 2341 1529 sh
(s) 3226 1276 sh
(a) 4994 883 sh
(b) 5594 883 sh
(a) 7153 1136 sh
(s) 7723 1136 sh
(s) 8608 883 sh
(a) 12807 1136 sh
(s) 13377 1136 sh
(s) 14262 883 sh
320 /Times-Italic f1
(retrieve) 318 219 sh
(occurCheck) 2718 219 sh
(,) 3204 681 sh
(r,) 3323 681 sh
(,) 3776 681 sh
(i) 3889 681 sh
(\251) 4657 428 sh
(occurCheck) 1511 1067 sh
(,) 1997 1529 sh
(r,) 2116 1529 sh
(,) 2569 1529 sh
(i) 2682 1529 sh
(\251) 3450 1276 sh
(occurCheck) 6893 674 sh
(,) 7379 1136 sh
(r,) 7498 1136 sh
(,) 7951 1136 sh
(i) 8064 1136 sh
(>) 9583 883 sh
(i) 9855 883 sh
(<) 10549 883 sh
(r) 10827 883 sh
(occurCheck) 12547 674 sh
(,) 13033 1136 sh
(r,) 13152 1136 sh
(,) 13605 1136 sh
(i) 13718 1136 sh
256 /LicsPlain f1
(\305) 1355 428 sh
(\305) 4306 428 sh
(\305) 3099 1276 sh
(\305) 8481 883 sh
(\305) 14135 883 sh
320 ns
(=) 5310 883 sh
320 /Courier-Oblique f1
(B) 1499 428 sh
(B) 2435 428 sh
(n) 6625 883 sh
(n) 9333 883 sh
(n) 10299 883 sh
320 /Times-Roman f1
( \() 4818 883 sh
(\)) 5797 883 sh
( \() 8800 883 sh
(\() 9223 883 sh
(\)\)) 10967 883 sh
320 /Symbol f1
(\330) 8997 883 sh
(\331) 10028 883 sh
320 /Courier f1
(Top) 11896 883 sh
end MTsave restore
pse
1 1 pen
270 108 gm
(nc 219 108 270 512 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
270 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
270 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
270 512 gm
0 gr
270 512 lin
psb
currentpoint
pse
219 108 gm
219 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12928 div 1632 3 -1 roll exch div scale
currentpoint translate 64 44 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 294 345 moveto 1588 0 rlineto stroke
3322 345 moveto 2188 0 rlineto stroke
2377 1162 moveto 1588 0 rlineto stroke
16 th 0 769 moveto 6033 0 rlineto stroke
8 th 7076 345 moveto 1588 0 rlineto stroke
10104 345 moveto 2188 0 rlineto stroke
9657 1162 moveto 1588 0 rlineto stroke
16 th 6782 769 moveto 6033 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 34 428 sh
(B) 3063 428 sh
(A) 1387 1245 sh
(B) 2118 1245 sh
(A) 6816 428 sh
(B) 9845 428 sh
(q) 8396 1245 sh
(A) 9097 1245 sh
(B) 9398 1245 sh
320 /Times-Italic f1
(occurCheck) 318 219 sh
(,) 804 681 sh
(r,) 923 681 sh
(,) 1376 681 sh
(i) 1489 681 sh
(\251) 2257 428 sh
(occurCheck) 3646 219 sh
(,) 3555 681 sh
(r) 3674 681 sh
(,) 4249 681 sh
(\251) 4574 681 sh
(,) 4837 681 sh
(i) 4950 681 sh
(") 5873 428 sh
(occurCheck) 2401 1036 sh
(,) 2887 1498 sh
(r,) 3006 1498 sh
(,) 3459 1498 sh
(i) 3572 1498 sh
(") 4328 1245 sh
(occurCheck) 7100 219 sh
(,) 7586 681 sh
(r,) 7705 681 sh
(,) 8158 681 sh
(i) 8271 681 sh
(\251) 9039 428 sh
(occurCheck) 10428 219 sh
(,) 10337 681 sh
(r) 10456 681 sh
(,) 11031 681 sh
(\251) 11356 681 sh
(,) 11619 681 sh
(i) 11732 681 sh
(") 12655 428 sh
(occurCheck) 9681 1036 sh
(,) 10167 1498 sh
(r,) 10286 1498 sh
(,) 10739 1498 sh
(i) 10852 1498 sh
(") 11608 1245 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) 578 681 sh
(s) 1148 681 sh
(s) 2033 428 sh
(a) 3329 681 sh
(s) 4350 681 sh
(s) 5661 428 sh
(a) 2661 1498 sh
(s) 3231 1498 sh
(s) 4116 1245 sh
(a) 7360 681 sh
(s) 7930 681 sh
(s) 8815 428 sh
(a) 10111 681 sh
(s) 11132 681 sh
(s) 12443 428 sh
(a) 9941 1498 sh
(s) 10511 1498 sh
(s) 11396 1245 sh
256 /LicsPlain f1
(\305) 1906 428 sh
(\305) 5534 428 sh
(\305) 3989 1245 sh
(\305) 8688 428 sh
(\305) 12316 428 sh
(\305) 11269 1245 sh
320 ns
(\345) 4671 681 sh
(\344) 4488 1245 sh
(\345) 11453 681 sh
(\344) 11768 1245 sh
320 /Times-Roman f1
(+) 3886 681 sh
(1) 4117 681 sh
(+) 5121 681 sh
(1) 5352 681 sh
(+) 10668 681 sh
(1) 10899 681 sh
(+) 11903 681 sh
(1) 12134 681 sh
320 /Symbol f1
(-) 1604 1245 sh
(>) 1863 1245 sh
320 /Courier f1
(All\() 7671 1245 sh
(<:) 8695 1245 sh
(\)) 9277 1245 sh
end MTsave restore
pse
1 1 pen
296 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Sub)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( tests subtyping between two types.)show
341 90 gm
(nc 313 90 341 344 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
341 344 gm
0 gr
341 344 lin
psb
currentpoint
pse
313 90 gm
313 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8128 div 896 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 2282 392 moveto 3315 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 8016 0 rlineto stroke
sol 0 808 moveto 8016 0 rlineto stroke
sol 8 0 moveto 0 816 rlineto stroke
sol 8008 0 moveto 0 816 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(small,) 155 475 sh
(big) 965 475 sh
(:) 1432 475 sh
(Type) 1608 475 sh
(sub) 3719 266 sh
(env) 2304 728 sh
(:) 2810 728 sh
(Env,) 3001 728 sh
( substIn) 3624 728 sh
(:) 4685 728 sh
(Subst) 4869 728 sh
(substOut) 5768 475 sh
(:) 6976 475 sh
(Subst) 7160 475 sh
256 /LicsPlain f1
(\305) 5621 475 sh
end MTsave restore
pse
1 1 pen
382 108 gm
(nc 356 108 382 243 6 rc)kp
F 1 setTxMode
(  )show
382 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
382 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
382 243 gm
0 gr
382 243 lin
psb
currentpoint
pse
356 108 gm
356 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
4320 div 832 3 -1 roll exch div scale
currentpoint translate 64 53 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 941 344 moveto 587 0 rlineto stroke
3236 344 moveto 587 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 427 sh
320 /Times-Roman f1
(,) 202 427 sh
(,) 2849 427 sh
320 /Courier f1
(Top) 314 427 sh
320 /Times-Italic f1
(sub) 1014 218 sh
(E,) 978 680 sh
(sub) 3309 218 sh
(E,) 3273 680 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 1274 680 sh
(s) 1679 427 sh
(a) 2625 427 sh
(a) 2952 427 sh
(s) 3569 680 sh
(s) 3974 427 sh
256 /LicsPlain f1
(\305) 1552 427 sh
(\305) 3847 427 sh
end MTsave restore
pse
1 1 pen
446 108 gm
(nc 394 108 446 503 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
446 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
446 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
446 503 gm
0 gr
446 503 lin
psb
currentpoint
pse
394 108 gm
394 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12640 div 1664 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 375 moveto 1038 0 rlineto stroke
3035 375 moveto 587 0 rlineto stroke
1823 1191 moveto 587 0 rlineto stroke
16 th 0 799 moveto 4094 0 rlineto stroke
8 th 7610 344 moveto 1038 0 rlineto stroke
10341 344 moveto 587 0 rlineto stroke
9004 1191 moveto 587 0 rlineto stroke
16 th 7317 799 moveto 4083 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 458 sh
(a) 690 711 sh
(s) 3368 711 sh
(s) 3773 458 sh
(a) 1220 1274 sh
(s) 2156 1527 sh
(s) 2561 1274 sh
(a) 4905 882 sh
(s) 7324 427 sh
(b) 8033 680 sh
(s) 10674 680 sh
(s) 11079 427 sh
(b) 8752 1274 sh
(s) 9337 1527 sh
(s) 10068 1274 sh
(b) 12243 882 sh
320 /Times-Italic f1
(retrieve) 318 249 sh
(sub) 3108 249 sh
(E,) 3072 711 sh
(\251) 3997 458 sh
(sub) 1896 1065 sh
(E,) 1860 1527 sh
(\251) 2785 1274 sh
(retrieve) 7635 218 sh
(sub) 10414 218 sh
(E,) 10378 680 sh
(\251) 11303 427 sh
(sub) 9077 1065 sh
(E,) 9041 1527 sh
(E,) 9772 1274 sh
256 /LicsPlain f1
(\305) 1355 458 sh
(\305) 3646 458 sh
(\305) 2434 1274 sh
(\305) 8672 427 sh
(\305) 10952 427 sh
(\305) 9615 1274 sh
320 ns
(=) 4642 882 sh
(=) 5628 882 sh
(=) 11959 882 sh
320 /Courier-Oblique f1
(A) 1509 458 sh
(A) 2456 458 sh
(B) 2776 458 sh
(B) 1564 1274 sh
(B) 4351 882 sh
(B) 5337 882 sh
(B) 8816 427 sh
(A) 9762 427 sh
(B) 10082 427 sh
(A) 8428 1274 sh
(A) 11667 882 sh
320 /Times-Roman f1
(,) 2656 458 sh
(,) 1444 1274 sh
(,) 9962 427 sh
(,) 8628 1274 sh
320 /Times-Roman f1
( \() 4158 882 sh
(,) 5129 882 sh
( ) 5257 882 sh
(\)) 6478 882 sh
( \() 11464 882 sh
(\)) 12446 882 sh
320 /Courier f1
(Top) 5900 882 sh
end MTsave restore
pse
1 1 pen
510 108 gm
(nc 458 108 510 541 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
510 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
510 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
510 541 gm
0 gr
510 541 lin
psb
currentpoint
pse
458 108 gm
458 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13856 div 1664 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 376 moveto 1038 0 rlineto stroke
2625 376 moveto 1588 0 rlineto stroke
1302 1192 moveto 587 0 rlineto stroke
16 th 0 800 moveto 4685 0 rlineto stroke
8 th 8201 345 moveto 1038 0 rlineto stroke
10544 345 moveto 1588 0 rlineto stroke
9221 1192 moveto 587 0 rlineto stroke
16 th 7908 800 moveto 4696 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 459 sh
(a) 690 712 sh
(a) 3011 712 sh
(s) 3581 712 sh
(s) 4364 459 sh
(a) 699 1275 sh
(s) 1635 1528 sh
(a) 2040 1275 sh
(s) 3143 1275 sh
(a) 3636 1275 sh
(a) 5496 883 sh
(s) 7915 428 sh
(b) 8624 681 sh
(b) 10956 681 sh
(s) 11494 681 sh
(s) 12283 428 sh
(b) 8969 1275 sh
(s) 9554 1528 sh
(b) 9980 1275 sh
(s) 11062 1275 sh
(b) 11576 1275 sh
(b) 13447 883 sh
320 /Times-Italic f1
(retrieve) 318 250 sh
(r) 1500 459 sh
(occurCheck) 2649 250 sh
(,) 3237 712 sh
(r,) 3356 712 sh
(\251) 4588 459 sh
(sub) 1375 1066 sh
(E,) 1339 1528 sh
(,) 2936 1275 sh
(\251) 3367 1275 sh
(,) 5722 883 sh
( ) 5848 883 sh
(retrieve) 8226 219 sh
(r) 9408 428 sh
(occurCheck) 10568 219 sh
(,) 11150 681 sh
(r,) 11269 681 sh
(\251) 12507 428 sh
(sub) 9294 1066 sh
(E,) 9258 1528 sh
(,) 10855 1275 sh
(\251) 11286 1275 sh
256 /LicsPlain f1
(\305) 1355 459 sh
(\305) 4237 459 sh
(\305) 1913 1275 sh
(\305) 9263 428 sh
(\305) 12156 428 sh
(\305) 9832 1275 sh
320 ns
(=) 5233 883 sh
(=) 6219 883 sh
(=) 13163 883 sh
320 /Courier-Oblique f1
(B) 2366 459 sh
(B) 1043 1275 sh
(B) 2735 1275 sh
(B) 4942 883 sh
(B) 5928 883 sh
(A) 10284 428 sh
(A) 8645 1275 sh
(A) 10653 1275 sh
(A) 12871 883 sh
320 /Times-Roman f1
(,) 923 1275 sh
(,) 8845 1275 sh
320 /Symbol f1
(\254) 2346 1275 sh
(\254) 10254 1275 sh
320 /Times-Roman f1
(\() 3047 1275 sh
(\\) 3522 1275 sh
(\)) 3871 1275 sh
( \() 4749 883 sh
(\)) 7069 883 sh
(\() 10966 1275 sh
(\\) 11441 1275 sh
(\)) 11779 1275 sh
( \() 12668 883 sh
(\)) 13650 883 sh
320 /Courier f1
(Top) 6491 883 sh
end MTsave restore
pse
1 1 pen
573 108 gm
(nc 522 108 573 414 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
573 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
573 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
573 414 gm
0 gr
573 414 lin
psb
currentpoint
pse
522 108 gm
522 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9792 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 534 768 moveto 587 0 rlineto stroke
8 th 2538 344 moveto 981 0 rlineto stroke
5223 344 moveto 587 0 rlineto stroke
4025 1160 moveto 587 0 rlineto stroke
16 th 2243 768 moveto 4039 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(n) -11 851 sh
(n) 290 851 sh
(n) 2933 680 sh
(A) 3697 427 sh
(A) 4644 427 sh
(B) 4964 427 sh
(n) 3462 1243 sh
(B) 3766 1243 sh
(B) 6539 851 sh
(B) 7495 851 sh
(n) 8063 851 sh
(B) 8455 851 sh
320 /Times-Roman f1
(,) 173 851 sh
(,) 4844 427 sh
(,) 3646 1243 sh
320 /Times-Italic f1
(sub) 607 642 sh
(E,) 571 1104 sh
(E) 2280 427 sh
(typeIde) 2558 218 sh
(sub) 5296 218 sh
(E,) 5260 680 sh
(\251) 6185 427 sh
(sub) 4098 1034 sh
(E,) 4062 1496 sh
(\251) 4987 1243 sh
(,) 7289 851 sh
( ) 7415 851 sh
(,) 8249 851 sh
( ) 8375 851 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 867 1104 sh
(s) 1272 851 sh
(s) 5556 680 sh
(s) 5961 427 sh
(s) 4358 1496 sh
(s) 4763 1243 sh
(g) 7095 851 sh
256 /LicsPlain f1
(\305) 1145 851 sh
(\305) 3543 427 sh
(\305) 5834 427 sh
(\305) 4636 1243 sh
320 ns
(=) 6830 851 sh
(=) 7786 851 sh
(=) 8746 851 sh
320 /Times-Roman f1
( \() 6346 851 sh
(\)) 9596 851 sh
320 /Courier f1
(Top) 9018 851 sh
end MTsave restore
pse
1 1 pen
636 108 gm
(nc 585 108 636 480 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
636 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
636 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
636 480 gm
0 gr
636 480 lin
psb
currentpoint
pse
585 108 gm
585 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11904 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 807 344 moveto 587 0 rlineto stroke
3297 344 moveto 1492 0 rlineto stroke
3231 1165 moveto 587 0 rlineto stroke
16 th 0 773 moveto 5352 0 rlineto stroke
8 th 6957 344 moveto 587 0 rlineto stroke
9447 344 moveto 1748 0 rlineto stroke
10506 1165 moveto 587 0 rlineto stroke
16 th 6101 773 moveto 5707 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A\251) 34 427 sh
(A) 547 427 sh
(B) 2575 427 sh
(B\251) 2894 427 sh
(A\251) 3790 680 sh
(A) 854 1248 sh
(B) 1585 1248 sh
(A\251) 1914 1248 sh
(B\251) 2828 1248 sh
(A\251) 6184 427 sh
(A) 6697 427 sh
(B) 8725 427 sh
(B\251) 9044 427 sh
(A\251) 10196 680 sh
(q) 6861 1248 sh
(A) 7562 1248 sh
(B) 7863 1248 sh
(q) 8918 1248 sh
(A\251) 9619 1248 sh
(B\251) 10103 1248 sh
320 /Times-Roman f1
(,) 417 427 sh
(,) 2774 427 sh
(,) 1784 1248 sh
(,) 6567 427 sh
(,) 8924 427 sh
(,) 8062 1248 sh
320 /Times-Italic f1
(sub) 880 218 sh
(E,) 844 680 sh
(\251) 1769 427 sh
(sub) 3823 218 sh
(E) 3334 680 sh
(,) 4175 680 sh
(\251) 4500 680 sh
(") 5192 427 sh
(sub) 3304 1039 sh
(E,) 3268 1501 sh
(") 4181 1248 sh
(sub) 7030 218 sh
(E,) 6994 680 sh
(\251) 7919 427 sh
(sub) 10101 218 sh
(E) 9484 680 sh
(,) 10581 680 sh
(\251) 10906 680 sh
(") 11598 427 sh
(sub) 10579 1039 sh
(E,) 10543 1501 sh
(") 11456 1248 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 1140 680 sh
(s) 1545 427 sh
(s) 4276 680 sh
(s) 4980 427 sh
(s) 3564 1501 sh
(s) 3969 1248 sh
(s) 7290 680 sh
(s) 7695 427 sh
(s) 10682 680 sh
(s) 11386 427 sh
(s) 10839 1501 sh
(s) 11244 1248 sh
256 /LicsPlain f1
(\305) 1418 427 sh
(\305) 4813 427 sh
(\305) 3842 1248 sh
(\305) 7568 427 sh
(\305) 11219 427 sh
(\305) 11117 1248 sh
320 ns
(\345) 4597 680 sh
(\344) 4341 1248 sh
(\345) 11003 680 sh
(\344) 11616 1248 sh
320 /Times-Roman f1
(,) 3532 680 sh
(,) 9682 680 sh
320 /Courier f1
(:) 3580 680 sh
(<:) 9794 680 sh
(All\() 6136 1248 sh
(<:) 7160 1248 sh
(\)) 7742 1248 sh
(All\() 8193 1248 sh
(<:) 9217 1248 sh
(\)) 9982 1248 sh
320 /Symbol f1
(-) 1071 1248 sh
(>) 1330 1248 sh
(-) 2314 1248 sh
(>) 2573 1248 sh
end MTsave restore
pse
F T cp
%%Page: ? 43
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(43)show
102 90 gm
2 fs
10 fz
bu fc
2 F /|______Times-Italic fnt
bn
(Type)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( checks that a pretype is well-formed and returns the corresponding type.)show
148 90 gm
(nc 119 90 148 273 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
148 273 gm
0 gr
148 273 lin
psb
currentpoint
pse
119 90 gm
119 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5856 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1994 392 moveto 1835 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5743 0 rlineto stroke
sol 0 832 moveto 5743 0 rlineto stroke
sol 8 0 moveto 0 840 rlineto stroke
sol 5735 0 moveto 0 840 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(pre) 184 475 sh
(:) 668 475 sh
(PreType) 859 475 sh
(type) 2645 266 sh
(env) 2016 728 sh
(:) 2522 728 sh
(Env\(=) 2713 728 sh
(\)) 3706 728 sh
(result) 3998 475 sh
(:) 4797 475 sh
(Type) 4973 475 sh
320 /LicsPlain f1
(\360) 3528 728 sh
256 ns
(\305) 3853 475 sh
end MTsave restore
pse
1 1 pen
213 108 gm
(nc 163 108 213 544 6 rc)kp
F 1 setTxMode
(  )show
213 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
213 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
213 544 gm
0 gr
213 544 lin
psb
currentpoint
pse
163 108 gm
163 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13952 div 1600 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 383 moveto 981 0 rlineto stroke
499 1165 moveto 573 0 rlineto stroke
16 th 0 773 moveto 1682 0 rlineto stroke
3042 773 moveto 573 0 rlineto stroke
8 th 5358 344 moveto 573 0 rlineto stroke
7289 344 moveto 721 0 rlineto stroke
6384 1165 moveto 573 0 rlineto stroke
16 th 5087 773 moveto 3318 0 rlineto stroke
8 th 9982 344 moveto 573 0 rlineto stroke
11913 344 moveto 977 0 rlineto stroke
11136 1165 moveto 573 0 rlineto stroke
16 th 9154 773 moveto 4688 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 466 sh
(typeIde) 315 257 sh
(type) 519 1039 sh
(E) 691 1501 sh
(type) 3062 647 sh
(E) 3234 1109 sh
(type) 5378 218 sh
(E) 5550 680 sh
(type) 7383 218 sh
(E) 7326 680 sh
(type) 6404 1039 sh
(E) 6576 1501 sh
(type) 10002 218 sh
(E) 10174 680 sh
(type) 12135 218 sh
(E) 11950 680 sh
(type) 11156 1039 sh
(E) 11328 1501 sh
320 /Courier-Oblique f1
(n) 690 719 sh
(A) 1454 466 sh
(n) 255 1248 sh
(n) 1237 1248 sh
(S) 5095 427 sh
(A) 6109 427 sh
(T) 7013 427 sh
(A) 7782 680 sh
(B) 8178 427 sh
(S) 5407 1248 sh
(T) 6108 1248 sh
(A) 7135 1248 sh
(B) 7866 1248 sh
(S) 9719 427 sh
(A) 10733 427 sh
(T) 11637 427 sh
(A) 12662 680 sh
(B) 13058 427 sh
(q) 9914 1248 sh
(S) 10589 1248 sh
(T) 10860 1248 sh
(q) 12613 1248 sh
(A) 13314 1248 sh
(B) 13615 1248 sh
256 /LicsPlain f1
(\305) 1300 466 sh
(\305) 1096 1248 sh
(\305) 3639 856 sh
(\305) 5955 427 sh
(\305) 8034 427 sh
(\305) 6981 1248 sh
(\305) 10579 427 sh
(\305) 12914 427 sh
(\305) 11733 1248 sh
320 /Courier f1
(Top) 2415 856 sh
(Top) 3775 856 sh
(:) 7572 680 sh
(<:) 12260 680 sh
(All\() 9189 1248 sh
(<:) 10213 1248 sh
(\)) 10772 1248 sh
(All\() 11888 1248 sh
(<:) 12912 1248 sh
(\)) 13494 1248 sh
320 /Times-Roman f1
(,) 7524 680 sh
(,) 12148 680 sh
320 /Symbol f1
(-) 5627 1248 sh
(>) 5886 1248 sh
(-) 7352 1248 sh
(>) 7611 1248 sh
end MTsave restore
pse
1 1 pen
239 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Term)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( checks that a preterm is well-typed and returns its type.)show
285 90 gm
(nc 256 90 285 405 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
285 405 gm
0 gr
285 405 lin
psb
currentpoint
pse
256 90 gm
256 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10080 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 2050 392 moveto 3917 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 9972 0 rlineto stroke
sol 0 832 moveto 9972 0 rlineto stroke
sol 8 0 moveto 0 840 rlineto stroke
sol 9964 0 moveto 0 840 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(pre) 184 475 sh
(:) 668 475 sh
(PreTerm) 859 475 sh
(term) 3714 266 sh
(env) 2072 728 sh
(:) 2578 728 sh
(Env\(=) 2769 728 sh
(\),) 3762 728 sh
( substIn) 3994 728 sh
(:) 5055 728 sh
(Subst) 5239 728 sh
(type) 6131 475 sh
(:) 6721 475 sh
(Type,) 6897 475 sh
( substOut) 7644 475 sh
(:) 8932 475 sh
(Subst) 9116 475 sh
320 /LicsPlain f1
(\360) 3584 728 sh
256 ns
(\305) 5991 475 sh
end MTsave restore
pse
1 1 pen
351 108 gm
(nc 300 108 351 420 6 rc)kp
F 1 setTxMode
(  )show
351 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
351 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
351 420 gm
0 gr
351 420 lin
psb
currentpoint
pse
300 108 gm
300 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9984 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 344 moveto 1034 0 rlineto stroke
2714 344 moveto 631 0 rlineto stroke
1491 1160 moveto 629 0 rlineto stroke
16 th 0 768 moveto 4330 0 rlineto stroke
8 th 5374 378 moveto 1034 0 rlineto stroke
5428 1160 moveto 629 0 rlineto stroke
16 th 5079 768 moveto 1735 0 rlineto stroke
8183 768 moveto 629 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 427 sh
(termIde) 315 218 sh
(strip) 2741 218 sh
(E,) 2773 680 sh
(,) 3908 427 sh
(\251) 4233 427 sh
(term) 1511 1034 sh
(E,) 1549 1496 sh
(,) 2683 1243 sh
(\251) 3008 1243 sh
(E) 5116 461 sh
(termIde) 5394 252 sh
(term) 5448 1034 sh
(E,) 5486 1496 sh
(,) 6437 1243 sh
(term) 8203 642 sh
(E,) 8241 1104 sh
(,) 9541 851 sh
320 /Courier-Oblique f1
(n) 717 680 sh
(A) 1507 427 sh
(A) 2454 427 sh
(A\251) 3523 427 sh
(n) 1247 1243 sh
(A\251) 2298 1243 sh
(n) 5796 714 sh
(A) 6586 461 sh
(n) 5121 1243 sh
(A) 6235 1243 sh
256 /LicsPlain f1
(\305) 1353 427 sh
(\305) 3369 427 sh
(\305) 2144 1243 sh
(\305) 6432 461 sh
(\305) 6081 1243 sh
(\305) 8836 851 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3069 680 sh
(s) 4009 427 sh
(s) 1845 1496 sh
(s) 2784 1243 sh
(s) 5782 1496 sh
(s) 6538 1243 sh
(s) 8537 1104 sh
(s) 9642 851 sh
320 /Courier f1
(!) 5249 1243 sh
(top) 7556 851 sh
(Top) 8972 851 sh
end MTsave restore
pse
1 1 pen
415 108 gm
(nc 364 108 415 432 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
415 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
415 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
415 432 gm
0 gr
415 432 lin
psb
currentpoint
pse
364 108 gm
364 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10368 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 271 344 moveto 573 0 rlineto stroke
2225 344 moveto 1180 0 rlineto stroke
1685 1165 moveto 629 0 rlineto stroke
16 th 0 773 moveto 4196 0 rlineto stroke
8 th 5652 344 moveto 573 0 rlineto stroke
7606 344 moveto 1436 0 rlineto stroke
6920 1165 moveto 629 0 rlineto stroke
16 th 4945 773 moveto 5325 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(S) 8 427 sh
(A) 1022 427 sh
(b) 1966 427 sh
(A) 2718 680 sh
(B) 3573 427 sh
(S) 1115 1248 sh
(b) 1426 1248 sh
(A) 2492 1248 sh
(B) 3223 1248 sh
(S) 5389 427 sh
(A) 6403 427 sh
(b) 7347 427 sh
(A) 8355 680 sh
(B) 9210 427 sh
(q) 5675 1248 sh
(S) 6350 1248 sh
(b) 6661 1248 sh
(q) 8453 1248 sh
(A) 9154 1248 sh
(B) 9455 1248 sh
320 /Times-Italic f1
(type) 291 218 sh
(E) 463 680 sh
(term) 2521 218 sh
(E) 2262 680 sh
(,) 2920 680 sh
(,) 3774 427 sh
(\251) 4099 427 sh
(term) 1705 1039 sh
(E,) 1743 1501 sh
(,) 3424 1248 sh
(\251) 3749 1248 sh
(type) 5672 218 sh
(E) 5844 680 sh
(term) 8030 218 sh
(E) 7643 680 sh
(,) 8557 680 sh
(,) 9411 427 sh
(\251) 9736 427 sh
(term) 6940 1039 sh
(E,) 6978 1501 sh
(,) 9656 1248 sh
(\251) 9981 1248 sh
256 /LicsPlain f1
(\305) 868 427 sh
(\305) 3429 427 sh
(\305) 2338 1248 sh
(\305) 6249 427 sh
(\305) 9066 427 sh
(\305) 7573 1248 sh
320 ns
(\345) 3213 680 sh
(\344) 3846 1248 sh
(\345) 8850 680 sh
(\344) 10078 1248 sh
320 /Times-Roman f1
(,) 2460 680 sh
(,) 7841 680 sh
320 /Courier f1
(:) 2508 680 sh
(fun\(:) 163 1248 sh
(\)) 1298 1248 sh
(<:) 7953 680 sh
(fun\() 4950 1248 sh
(<:) 5974 1248 sh
(\)) 6533 1248 sh
(All\() 7728 1248 sh
(<:) 8752 1248 sh
(\)) 9334 1248 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3021 680 sh
(s) 3875 427 sh
(s) 2039 1501 sh
(s) 3525 1248 sh
(s) 8658 680 sh
(s) 9512 427 sh
(s) 7274 1501 sh
(s) 9757 1248 sh
320 /Symbol f1
(-) 2709 1248 sh
(>) 2968 1248 sh
end MTsave restore
pse
1 1 pen
480 108 gm
(nc 428 108 480 533 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
480 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
480 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
480 533 gm
0 gr
480 533 lin
psb
currentpoint
pse
428 108 gm
428 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13600 div 1664 3 -1 roll exch div scale
currentpoint translate 64 43 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 290 345 moveto 629 0 rlineto stroke
2664 345 moveto 1735 0 rlineto stroke
7103 345 moveto 705 0 rlineto stroke
9974 345 moveto 566 0 rlineto stroke
11959 345 moveto 1004 0 rlineto stroke
6284 1194 moveto 629 0 rlineto stroke
16 th 0 802 moveto 13502 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(b) 31 428 sh
(C) 1066 428 sh
(C) 2391 428 sh
(A\251) 4577 428 sh
(B) 5491 428 sh
(a) 6859 428 sh
(A) 7986 428 sh
(A) 9241 428 sh
(A\251) 9571 428 sh
(B) 11700 428 sh
(A) 12497 681 sh
(B\251) 13131 428 sh
(b) 5666 1277 sh
(a) 5951 1277 sh
(B\251) 7081 1277 sh
320 /Times-Italic f1
(term) 310 219 sh
(E,) 348 681 sh
(,) 1281 428 sh
(\251) 1606 428 sh
(exposeArrow) 2686 219 sh
(\251) 3598 681 sh
(,) 5692 428 sh
(") 6005 428 sh
(term) 7161 219 sh
(E,) 7140 681 sh
(") 7648 681 sh
(,) 8188 428 sh
(,) 9443 428 sh
(sub) 10037 219 sh
(E,) 10011 681 sh
(\251) 10894 428 sh
(replace) 11984 219 sh
(,) 12369 681 sh
(term) 6304 1068 sh
(E,) 6342 1530 sh
(,) 7466 1277 sh
(\251) 7770 1277 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 644 681 sh
(s) 1382 428 sh
(s) 3374 681 sh
(s) 5793 428 sh
(s) 7436 681 sh
(r) 8314 428 sh
(r) 10332 681 sh
(r) 10716 428 sh
(s) 6638 1530 sh
(r) 7592 1277 sh
256 /LicsPlain f1
(\305) 943 428 sh
(\305) 4423 428 sh
(\305) 7832 428 sh
(\305) 10564 428 sh
(\305) 12987 428 sh
(\305) 6937 1277 sh
320 /Symbol f1
(-) 4977 428 sh
(>) 5236 428 sh
320 /Courier f1
(1) 12201 681 sh
(\() 5798 1277 sh
(\)) 6115 1277 sh
end MTsave restore
pse
1 1 pen
545 108 gm
(nc 493 108 545 533 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
545 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
545 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
545 533 gm
0 gr
545 533 lin
psb
currentpoint
pse
493 108 gm
493 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
13600 div 1664 3 -1 roll exch div scale
currentpoint translate 64 43 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 290 345 moveto 629 0 rlineto stroke
2664 345 moveto 1295 0 rlineto stroke
7539 345 moveto 573 0 rlineto stroke
9970 345 moveto 566 0 rlineto stroke
11955 345 moveto 1004 0 rlineto stroke
6403 1194 moveto 629 0 rlineto stroke
16 th 0 802 moveto 13498 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(b) 31 428 sh
(C) 1066 428 sh
(C) 2391 428 sh
(q) 4863 428 sh
(A\251) 5564 428 sh
(B) 6048 428 sh
(S) 7276 428 sh
(A) 8290 428 sh
(A) 9237 428 sh
(A\251) 9567 428 sh
(B) 11696 428 sh
(A) 12493 681 sh
(B\251) 13127 428 sh
(b) 5543 1277 sh
(S) 6051 1277 sh
(B\251) 7200 1277 sh
320 /Times-Italic f1
(term) 310 219 sh
(E,) 348 681 sh
(,) 1281 428 sh
(\251) 1606 428 sh
(exposeAll) 2686 219 sh
(\251) 3378 681 sh
(,) 6249 428 sh
(type) 7559 219 sh
(E) 7731 681 sh
(,) 9439 428 sh
(sub) 10033 219 sh
(E,) 10007 681 sh
(\251) 10890 428 sh
(replace) 11980 219 sh
(,) 12365 681 sh
(term) 6423 1068 sh
(E,) 6461 1530 sh
(,) 7585 1277 sh
(\251) 7889 1277 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 644 681 sh
(s) 1382 428 sh
(s) 3154 681 sh
(r) 6375 428 sh
(r) 10328 681 sh
(r) 10712 428 sh
(s) 6757 1530 sh
(r) 7711 1277 sh
256 /LicsPlain f1
(\305) 943 428 sh
(\305) 3983 428 sh
(\305) 8136 428 sh
(\305) 10560 428 sh
(\305) 12983 428 sh
(\305) 7056 1277 sh
320 /Courier f1
(All\() 4138 428 sh
(<:) 5162 428 sh
(\)) 5927 428 sh
(1) 12197 681 sh
(\(:) 5675 1277 sh
(\)) 6234 1277 sh
end MTsave restore
pse
F T cp
%%Page: ? 44
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(44)show
117 90 gm
1 fs
12 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Appendix G. Recursion)show
138 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.02304 0. 32 0.00230 0.(As explained in section 7, two recursive types are equal only if the )awidthshow
bu fc
2 F /|______Courier fnt
bn
(Rec)show
bu fc
2 F /|______Times-Roman fnt
bn
0.02380 0. 32 0.00238 0.( bindings occur in the same po-)awidthshow
152 90 gm
0.07766 0. 32 0.00776 0.(sitions. That is, unfolding a recursion does not produce, in general, an identical type. Since variables are re)awidthshow
152 519 gm
(-)show
166 90 gm
(placed by de Bruijn indices, equality of recursive types is then simple identity.)show
180 108 gm
0.61111 0. 32 0.06111 0.(Still, precisely because of de Bruijn indices, the subtyping test for recursive types is not trivial. The)awidthshow
194 90 gm
0.72006 0. 32 0.07200 0.(formal subtyping rule requires that the body of two recursive types be tested for inclusion under the as)awidthshow
194 519 gm
(-)show
208 90 gm
0.12573 0. 32 0.01257 0.(sumption that the corresponding variables are included )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.12802 0. 32 0.01280 0.(in one direction)awidthshow
208 377 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.14816 0. 32 0.01481 0.(. But since the de Bruijn indices are)awidthshow
222 90 gm
1.90826 0. 32 0.19082 0.(identical in both types, they will match in )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
3.52478 0. 32 0.35247 0.(both directions)awidthshow
222 351 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
2.43347 0. 32 0.24334 0.(. For example, )awidthshow
222 422 gm
bu fc
2 F /|______Courier fnt
bn
1.43692 0. 32 0.14369 0.(Rec\(X\)X->Bool <:)awidthshow
236 90 gm
0.11550 0.(Rec\(Y\)Y->Top)ashow
bu fc
2 F /|______Times-Roman fnt
bn
0.25680 0. 32 0.02568 0.( should fail, while the de Bruijn version )awidthshow
236 328 gm
bu fc
2 F /|______Courier fnt
bn
0.30868 0. 32 0.03086 0.(Rec\(\)1->Bool <: Rec\(\)1->Top)awidthshow
bu fc
2 F /|______Times-Roman fnt
bn
0.16799 0. 32 0.01679 0.( would,)awidthshow
250 90 gm
0.75119 0. 32 0.07511 0.(naively, succeed. Hence, before testing the bodies we compute the )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.21539 0.(ties)ashow
250 385 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.72860 0. 32 0.07286 0.( between the recursion variables,)awidthshow
264 90 gm
0.14923 0. 32 0.01492 0.(which can be positive \(covariant\), negative \(contravariant\), or both. If the ties are only positive, we test the)awidthshow
278 90 gm
0.58197 0. 32 0.05819 0.(bodies for inclusion, otherwise we test the bodies for equality \(inclusion in both directions\). The ties are)awidthshow
292 90 gm
(computed by mimicking a subtype test.)show
320 90 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(G.1. Typing Rules)show
348 90 gm
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Contractivity Relation \()show
348 187 gm
bu fc

%%BeginFont: Courier-BoldOblique
%%IncludeFont: Courier-BoldOblique
bn
%%EndFont
bu fc
{}mark T /Courier-BoldOblique /|______Courier-BoldOblique 0 rf
bn
bu fc
2 F /|______Courier-BoldOblique fnt
bn
(A)show
bu fc

%%BeginFont: LicsItalic
%!PS-AdobeFont-1.0
%%CreationDate: Sun, Jul 26, 1992 1:45 PM
%%VMusage: 31104 31104
% Created with FontStudio Copyright © 1990 AB Vista Company. All rights reserved.
11 dict begin
/FontInfo 9 dict dup begin
/version (1.1) readonly def
/Notice (                               ) readonly def
/FullName (Lics Italic) readonly def
/FamilyName (Lics) readonly def
/Weight (Italic) readonly def
/ItalicAngle 9 def
/isFixedPitch false def
/UnderlinePosition -133 def
/UnderlineThickness 20 def
end readonly def
/FontName /LicsItalic def
/Encoding 256 array
0 1 255{1 index exch /.notdef put}for
dup 0 /NUL put
dup 1 /SOH put
dup 2 /STX put
dup 3 /ETX put
dup 4 /EOT put
dup 5 /ENQ put
dup 6 /ACK put
dup 7 /BEL put
dup 9 /HT put
dup 13 /CR put
dup 16 /DLE put
dup 17 /DC1 put
dup 18 /DC2 put
dup 19 /DC3 put
dup 20 /DC4 put
dup 21 /NAK put
dup 22 /SYN put
dup 23 /ETB put
dup 31 /US put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quotesingle put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /grave put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /DEL put
dup 128 /Adieresis put
dup 129 /Aring put
dup 130 /Ccedilla put
dup 131 /Eacute put
dup 132 /Ntilde put
dup 133 /Odieresis put
dup 134 /Udieresis put
dup 135 /aacute put
dup 136 /agrave put
dup 137 /acircumflex put
dup 138 /adieresis put
dup 139 /atilde put
dup 140 /aring put
dup 141 /ccedilla put
dup 142 /eacute put
dup 143 /egrave put
dup 144 /ecircumflex put
dup 145 /edieresis put
dup 146 /iacute put
dup 147 /igrave put
dup 148 /icircumflex put
dup 149 /idieresis put
dup 150 /ntilde put
dup 151 /oacute put
dup 152 /ograve put
dup 153 /ocircumflex put
dup 154 /odieresis put
dup 155 /otilde put
dup 156 /uacute put
dup 157 /ugrave put
dup 158 /ucircumflex put
dup 159 /udieresis put
dup 160 /dagger put
dup 161 /degree put
dup 162 /cent put
dup 163 /sterling put
dup 164 /section put
dup 165 /bullet put
dup 166 /paragraph put
dup 167 /germandbls put
dup 168 /registered put
dup 169 /copyright put
dup 170 /trademark put
dup 171 /acute put
dup 172 /dieresis put
dup 173 /notequal put
dup 174 /AE put
dup 175 /Oslash put
dup 176 /infinity put
dup 177 /plusminus put
dup 178 /lessequal put
dup 179 /greaterequal put
dup 180 /yen put
dup 181 /mu put
dup 182 /partialdiff put
dup 183 /summation put
dup 184 /product put
dup 185 /pi put
dup 186 /integral put
dup 187 /ordfeminine put
dup 188 /ordmasculine put
dup 189 /Omega put
dup 190 /ae put
dup 191 /oslash put
dup 192 /questiondown put
dup 193 /exclamdown put
dup 194 /logicalnot put
dup 195 /radical put
dup 196 /florin put
dup 197 /approxequal put
dup 198 /Delta put
dup 199 /guillemotleft put
dup 200 /guillemotright put
dup 201 /ellipsis put
dup 202 /nbspace put
dup 203 /Agrave put
dup 204 /Atilde put
dup 205 /Otilde put
dup 206 /OE put
dup 207 /oe put
dup 208 /endash put
dup 209 /emdash put
dup 210 /quotedblleft put
dup 211 /quotedblright put
dup 212 /quoteleft put
dup 213 /quoteright put
dup 214 /divide put
dup 215 /lozenge put
dup 216 /ydieresis put
dup 217 /Ydieresis put
dup 218 /fraction put
dup 219 /currency put
dup 220 /guilsinglleft put
dup 221 /guilsinglright put
dup 222 /fi put
dup 223 /fl put
dup 224 /daggerdbl put
dup 225 /periodcentered put
dup 226 /quotesinglbase put
dup 227 /quotedblbase put
dup 228 /perthousand put
dup 229 /Acircumflex put
dup 230 /Ecircumflex put
dup 231 /Aacute put
dup 232 /Edieresis put
dup 233 /Egrave put
dup 234 /Iacute put
dup 235 /Icircumflex put
dup 236 /Idieresis put
dup 237 /Igrave put
dup 238 /Oacute put
dup 239 /Ocircumflex put
dup 240 /apple put
dup 241 /Ograve put
dup 242 /Uacute put
dup 243 /Ucircumflex put
dup 244 /Ugrave put
dup 245 /dotlessi put
dup 246 /circumflex put
dup 247 /tilde put
dup 248 /macron put
dup 249 /breve put
dup 250 /dotaccent put
dup 251 /ring put
dup 252 /cedilla put
dup 253 /hungarumlaut put
dup 254 /ogonek put
dup 255 /caron put
readonly def

/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox{-61 -451 1294 978}readonly def
%/UniqueID 4364291 def
currentdict end
currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
bn
%%EndFont
bu fc
{}mark F /LicsItalic /|______LicsItalic 0 rf
bn
bu fc
2 F /|______LicsItalic mb
bn
(\()show
348 202 gm
bu fc
2 F /|______Courier-BoldOblique fnt
bn
(X)show
bu fc
2 F /|______Times-BoldItalic fnt
bn
(\))show
366 108 gm
(nc 354 108 366 414 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
366 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
366 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
366 414 gm
0 gr
366 414 lin
psb
currentpoint
pse
354 108 gm
354 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9792 div 384 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(Y) -41 224 sh
(X) 410 224 sh
(Y) 1098 224 sh
(X) 1693 224 sh
(X) 3558 224 sh
(A) 4734 224 sh
(B) 5456 224 sh
(X) 5973 224 sh
(Y) 7954 224 sh
(A) 8654 224 sh
(B) 8955 224 sh
(X) 9472 224 sh
320 /LicsPlain f1
(\() 169 224 sh
(=) 1412 224 sh
(\() 3317 224 sh
(\() 5732 224 sh
(\() 9231 224 sh
320 /Symbol f1
(\333) 716 224 sh
320 /Times-Roman f1
( ;) 1885 224 sh
( ;) 3750 224 sh
(  ;) 6165 224 sh
320 /Courier f1
(Top) 2762 224 sh
(\() 4556 224 sh
(-) 4938 224 sh
(>) 5193 224 sh
(\)) 5635 224 sh
(\(All\() 7051 224 sh
(<:) 8252 224 sh
(\)) 8834 224 sh
(\)) 9134 224 sh
end MTsave restore
pse
379 108 gm
(nc 368 108 379 274 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
379 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
379 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
379 274 gm
0 gr
379 274 lin
psb
currentpoint
pse
368 108 gm
368 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5312 div 352 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier f1
(\(Rec\() -87 224 sh
(\)) 1018 224 sh
(\)) 1318 224 sh
320 /Courier-Oblique f1
(Y) 816 224 sh
(B) 1139 224 sh
(X) 1656 224 sh
(B) 2377 224 sh
(X) 2805 224 sh
(B) 3386 224 sh
(Y) 3780 224 sh
(Y) 4328 224 sh
(X) 4923 224 sh
320 /LicsPlain f1
(\() 1415 224 sh
(\() 2564 224 sh
(\() 3573 224 sh
(=) 4642 224 sh
320 /Symbol f1
(\333) 1962 224 sh
(\331) 3112 224 sh
(\331) 4087 224 sh
320 /Times-Roman f1
( ) 5115 224 sh
end MTsave restore
pse
404 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Types)show
449 108 gm
(nc 412 108 449 228 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
449 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
449 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
449 228 gm
0 gr
449 228 lin
psb
currentpoint
pse
412 108 gm
412 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
3840 div 1184 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 682 moveto 2828 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Type ) -13 218 sh
(\)) 1373 218 sh
(E) 37 556 sh
(E) 194 1018 sh
320 /Courier f1
(Rec) 794 218 sh
(<:Top) 654 556 sh
(Rec\() 757 1018 sh
(\)) 1704 1018 sh
320 /Times-Roman f1
(,) 235 556 sh
( ) 1614 556 sh
( ) 1902 556 sh
( type) 2174 556 sh
( ) 389 1018 sh
( ) 677 1018 sh
( type) 2017 1018 sh
(\() 2877 765 sh
(\)) 3651 765 sh
320 /Courier-Oblique f1
(X) 356 556 sh
(B) 1982 556 sh
(X) 1502 1018 sh
(B) 1825 1018 sh
(B) 2990 765 sh
(X) 3418 765 sh
320 /LicsPlain f1
(\272) 1718 556 sh
(\272) 493 1018 sh
(\() 3177 765 sh
end MTsave restore
pse
1 1 pen
475 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Subtypes)show
519 108 gm
(nc 483 108 519 428 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
519 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
519 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
519 428 gm
0 gr
519 428 lin
psb
currentpoint
pse
483 108 gm
483 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10240 div 1152 3 -1 roll exch div scale
currentpoint translate 64 62 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 673 moveto 10139 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Sub ) -13 218 sh
(\)) 1232 218 sh
(E) 37 547 sh
(E) 3236 547 sh
(E) 6380 547 sh
(E) 3229 1009 sh
320 /Courier f1
(Rec) 653 218 sh
(Rec\() 600 547 sh
(\)) 1547 547 sh
(Rec\() 3799 547 sh
(\)) 4712 547 sh
(<:Top) 6963 547 sh
(<:) 8333 547 sh
(<:) 9527 547 sh
(Rec\() 3792 1009 sh
(\)) 4739 1009 sh
(<:) 5212 1009 sh
(Rec\() 5692 1009 sh
(\)) 6605 1009 sh
320 /Times-Roman f1
( ) 232 547 sh
( ) 520 547 sh
( type) 1860 547 sh
( ) 3431 547 sh
( ) 3719 547 sh
( type) 5004 547 sh
(,) 6578 547 sh
(,) 7914 547 sh
( ) 8884 547 sh
( ) 9172 547 sh
( ) 3424 1009 sh
( ) 3712 1009 sh
( ) 5052 1009 sh
( ) 5612 1009 sh
320 /LicsPlain f1
(\272) 336 547 sh
(\272) 3535 547 sh
(\272) 8988 547 sh
(\272) 3528 1009 sh
320 /Courier-Oblique f1
(X) 1345 547 sh
(B) 1668 547 sh
(Y) 4510 547 sh
(C) 4812 547 sh
(Y) 6665 547 sh
(X) 8035 547 sh
(Y) 8692 547 sh
(B) 9252 547 sh
(C) 9898 547 sh
(X) 4537 1009 sh
(B) 4860 1009 sh
(Y) 6403 1009 sh
(C) 6705 1009 sh
end MTsave restore
pse
1 1 pen
545 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Terms)show
589 108 gm
(nc 553 108 589 457 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
589 108 gm
bu fc
2 F /|______Courier fnt
bn
(  )show
589 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
589 457 gm
0 gr
589 457 lin
psb
currentpoint
pse
553 108 gm
553 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11168 div 1152 3 -1 roll exch div scale
currentpoint translate 64 59 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 676 moveto 5325 0 rlineto stroke
6074 673 moveto 4979 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term ) -13 221 sh
(\)) 1633 221 sh
(E) 1003 550 sh
(E) 37 1012 sh
(\(Term ) 6061 218 sh
(\)) 8091 218 sh
(E) 7454 547 sh
(E) 6111 1009 sh
320 /Courier f1
(fold) 847 221 sh
(:) 1762 550 sh
(Rec\() 2966 550 sh
(\)) 3913 550 sh
(fold\(:) 600 1012 sh
(Rec\() 1761 1012 sh
(\)) 2708 1012 sh
(\)\() 3008 1012 sh
(\)) 3517 1012 sh
(:) 3742 1012 sh
(Rec\() 4030 1012 sh
(\)) 4977 1012 sh
(unfold) 6921 218 sh
(:) 8213 547 sh
(Rec\() 8414 547 sh
(\)) 9361 547 sh
(unfold\() 6674 1009 sh
(\)) 8143 1009 sh
(:) 8368 1009 sh
(Rec\() 9660 1009 sh
(\)) 10607 1009 sh
320 /Times-Roman f1
( ) 1198 550 sh
( ) 1486 550 sh
({) 2146 550 sh
(}) 4209 550 sh
( ) 232 1012 sh
( ) 520 1012 sh
( ) 3646 1012 sh
( ) 3950 1012 sh
( ) 7649 547 sh
( ) 7937 547 sh
( ) 6306 1009 sh
( ) 6594 1009 sh
( ) 8272 1009 sh
( ) 8576 1009 sh
({) 8840 1009 sh
(}) 10903 1009 sh
320 /LicsPlain f1
(\272) 1302 550 sh
(\272) 336 1012 sh
(\272) 7753 547 sh
(\272) 6410 1009 sh
320 /Courier-Oblique f1
(a) 1566 550 sh
(B) 1962 550 sh
(X) 2272 550 sh
(X) 3711 550 sh
(B) 4034 550 sh
(X) 2506 1012 sh
(B) 2829 1012 sh
(a) 3353 1012 sh
(X) 4775 1012 sh
(B) 5098 1012 sh
(a) 8017 547 sh
(X) 9159 547 sh
(B) 9482 547 sh
(a) 7979 1009 sh
(B) 8656 1009 sh
(X) 8966 1009 sh
(X) 10405 1009 sh
(B) 10728 1009 sh
320 /Symbol f1
(\254) 2576 550 sh
(\254) 9270 1009 sh
end MTsave restore
pse
1 1 pen
631 108 gm
(nc 595 108 631 201 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
631 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
631 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
631 201 gm
0 gr
631 201 lin
psb
currentpoint
pse
595 108 gm
595 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
2976 div 1152 3 -1 roll exch div scale
currentpoint translate 64 62 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 673 moveto 2859 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term ) -13 218 sh
(\)) 1426 218 sh
(E) 479 547 sh
(E) 37 1009 sh
320 /Courier f1
(rec) 847 218 sh
(:) 1012 547 sh
(:) 1978 547 sh
(rec\() 600 1009 sh
(:) 1559 1009 sh
(\)) 1949 1009 sh
(:) 2343 1009 sh
320 /Times-Roman f1
(,) 677 547 sh
( ) 1414 547 sh
( ) 1702 547 sh
( ) 232 1009 sh
( ) 520 1009 sh
( ) 2247 1009 sh
( ) 2551 1009 sh
320 /Courier-Oblique f1
(x) 794 547 sh
(A) 1222 547 sh
(a) 1782 547 sh
(A) 2188 547 sh
(x) 1341 1009 sh
(A) 1769 1009 sh
(a) 2055 1009 sh
(A) 2631 1009 sh
320 /LicsPlain f1
(\272) 1518 547 sh
(\272) 336 1009 sh
end MTsave restore
pse
1 1 pen
643 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______Times-Roman fnt
bn
(\312)show
F T cp
%%Page: ? 45
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(45)show
116 90 gm
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
(This is now the de Bruijn-index version.)show
148 108 gm
(nc 134 108 148 219 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
148 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
148 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
148 219 gm
0 gr
148 219 lin
psb
currentpoint
pse
134 108 gm
134 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
3552 div 448 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier f1
(\(Rec\(\)) -87 288 sh
(\)) 1173 288 sh
(Rec\(\)) 1891 288 sh
192 ns
(+) 3225 146 sh
(1) 3345 146 sh
320 /Courier-Oblique f1
(B) 994 288 sh
(B) 2780 288 sh
320 /LicsPlain f1
(\246) 1238 288 sh
(\246) 2935 288 sh
192 /Times-Italic f1
(i) 1463 368 sh
(j) 1450 146 sh
(i) 3160 368 sh
(j) 3147 146 sh
320 /Times-Roman f1
(=) 1632 288 sh
end MTsave restore
pse
147 270 gm
(nc 136 270 147 433 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
147 270 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
147 433 gm
0 gr
147 433 lin
psb
currentpoint
pse
136 270 gm
136 270 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5216 div 352 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier f1
(\(Rec\(\)) -87 218 sh
(\)) 1173 218 sh
(Rec\(\)) 2578 218 sh
(+) 3935 218 sh
(1) 4177 218 sh
320 /Courier-Oblique f1
(B) 994 218 sh
(C) 1925 218 sh
(B) 3467 218 sh
(C) 4793 218 sh
320 /Times-Roman f1
({) 1267 218 sh
(}) 2114 218 sh
(=) 2319 218 sh
({) 3651 218 sh
(}) 4982 218 sh
320 /Times-Italic f1
(i) 1387 218 sh
(i) 3771 218 sh
320 /Symbol f1
(\254) 1557 218 sh
(\254) 4425 218 sh
end MTsave restore
pse
167 108 gm
(nc 155 108 167 478 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
167 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
167 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
167 478 gm
0 gr
167 478 lin
psb
currentpoint
pse
155 108 gm
155 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11840 div 384 3 -1 roll exch div scale
currentpoint translate 64 32 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 224 sh
(A) 855 224 sh
(n) 2330 224 sh
(m) 2751 224 sh
(n) 3449 224 sh
(m) 4014 224 sh
(n) 5875 224 sh
(A) 7051 224 sh
(B) 7782 224 sh
(n) 8295 224 sh
(A) 10735 224 sh
(B) 11036 224 sh
(n) 11549 224 sh
320 /LicsPlain f1
(\() 190 224 sh
(\() 1043 224 sh
(\() 2502 224 sh
(=) 3725 224 sh
(\() 5638 224 sh
(\() 8058 224 sh
(\() 11312 224 sh
320 /Symbol f1
(\333) 430 224 sh
(\333) 3037 224 sh
(-) 7268 224 sh
(>) 7527 224 sh
320 /Courier f1
(1) 1262 224 sh
(Top) 5083 224 sh
(\() 6873 224 sh
(\)) 7961 224 sh
(\(All\(<:) 9373 224 sh
(\)) 10915 224 sh
(\)) 11215 224 sh
320 /Times-Roman f1
( ;) 1448 224 sh
( ;) 4206 224 sh
( ;) 6067 224 sh
(  ;) 8487 224 sh
end MTsave restore
pse
180 108 gm
(nc 169 108 180 243 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
180 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
180 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
180 243 gm
0 gr
180 243 lin
psb
currentpoint
pse
169 108 gm
169 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
4320 div 352 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier f1
(\(Rec\(\)) -87 218 sh
(\)) 1173 218 sh
(+) 2874 218 sh
(1) 3116 218 sh
(1) 4047 218 sh
320 /Courier-Oblique f1
(B) 994 218 sh
(n) 1507 218 sh
(B) 2190 218 sh
(n) 2614 218 sh
(B) 3641 218 sh
320 /LicsPlain f1
(\() 1270 218 sh
(\() 2377 218 sh
(\() 3828 218 sh
320 /Symbol f1
(\333) 1775 218 sh
(\331) 3367 218 sh
end MTsave restore
pse
205 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Types)show
250 108 gm
(nc 213 108 250 211 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
250 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
250 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
250 211 gm
0 gr
250 211 lin
psb
currentpoint
pse
213 108 gm
213 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
3296 div 1184 3 -1 roll exch div scale
currentpoint translate 64 46 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 682 moveto 2521 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Type ) -13 218 sh
(\)) 1373 218 sh
(E) 37 556 sh
(E) 130 1018 sh
320 /Courier f1
(Rec) 794 218 sh
(<:Top) 347 556 sh
(Rec\(\)) 693 1018 sh
320 /Times-Roman f1
(,) 235 556 sh
( ) 1307 556 sh
( ) 1595 556 sh
( type) 1867 556 sh
( ) 325 1018 sh
( ) 613 1018 sh
( type) 1774 1018 sh
(\() 2570 765 sh
(\)) 3109 765 sh
320 /LicsPlain f1
(\272) 1411 556 sh
(\272) 429 1018 sh
(\() 2870 765 sh
320 /Courier-Oblique f1
(B) 1675 556 sh
(B) 1582 1018 sh
(B) 2683 765 sh
end MTsave restore
pse
1 1 pen
276 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Subtypes)show
322 108 gm
(nc 284 108 322 267 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
322 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
322 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
322 267 gm
0 gr
322 267 lin
psb
currentpoint
pse
284 108 gm
284 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5088 div 1216 3 -1 roll exch div scale
currentpoint translate 64 61 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 739 moveto 3780 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Sub ) -13 218 sh
(\)) 1232 218 sh
(E) 37 611 sh
(E) 212 1075 sh
320 /Courier f1
(Rec) 653 218 sh
(<:Top) 347 611 sh
(<:) 1410 611 sh
(1) 1781 611 sh
(<:) 2889 611 sh
(Rec\(\)) 775 1075 sh
(<:) 2016 1075 sh
(Rec\(\)) 2496 1075 sh
320 /Times-Roman f1
(,) 235 611 sh
(,) 1298 611 sh
( ) 1967 611 sh
( ) 2255 611 sh
( ) 407 1075 sh
( ) 695 1075 sh
( ) 1856 1075 sh
( ) 2416 1075 sh
(\() 3829 822 sh
(,) 4357 822 sh
(\)) 4896 822 sh
192 ns
(1) 2702 691 sh
(1) 2661 469 sh
(1) 3641 691 sh
(0) 3617 469 sh
320 /LicsPlain f1
(\272) 2071 611 sh
(\246) 2490 611 sh
(\246) 3429 611 sh
(\272) 511 1075 sh
(\() 4129 822 sh
(\() 4657 822 sh
320 /Courier-Oblique f1
(B) 2335 611 sh
(C) 3260 611 sh
(B) 1664 1075 sh
(C) 3364 1075 sh
(B) 3942 822 sh
(C) 4456 822 sh
end MTsave restore
pse
1 1 pen
348 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
3 fs
bu fc
2 F /|______Times-BoldItalic fnt
bn
(Terms)show
392 108 gm
(nc 356 108 392 438 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
392 108 gm
bu fc
2 F /|______Courier fnt
bn
(  )show
392 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
392 438 gm
0 gr
392 438 lin
psb
currentpoint
pse
356 108 gm
356 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10560 div 1152 3 -1 roll exch div scale
currentpoint translate 64 59 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 676 moveto 4967 0 rlineto stroke
5716 673 moveto 4722 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term ) -13 221 sh
(\)) 1633 221 sh
(E) 952 550 sh
(E) 37 1012 sh
(\(Term ) 5703 218 sh
(\)) 7733 218 sh
(E) 7058 547 sh
(E) 5753 1009 sh
320 /Courier f1
(fold) 847 221 sh
(:) 1711 550 sh
(1) 2199 550 sh
(Rec\(\)) 2837 550 sh
(fold\(:) 600 1012 sh
(Rec\(\)) 1761 1012 sh
(\)\() 2829 1012 sh
(\)) 3338 1012 sh
(:) 3563 1012 sh
(Rec\(\)) 3851 1012 sh
(unfold) 6563 218 sh
(:) 7817 547 sh
(Rec\(\)) 8018 547 sh
(unfold\() 6316 1009 sh
(\)) 7785 1009 sh
(:) 8010 1009 sh
(1) 8586 1009 sh
(Rec\(\)) 9224 1009 sh
320 /Times-Roman f1
( ) 1147 550 sh
( ) 1435 550 sh
({) 2095 550 sh
(}) 3901 550 sh
( ) 232 1012 sh
( ) 520 1012 sh
( ) 3467 1012 sh
( ) 3771 1012 sh
( ) 7253 547 sh
( ) 7541 547 sh
( ) 5948 1009 sh
( ) 6236 1009 sh
( ) 7914 1009 sh
( ) 8218 1009 sh
({) 8482 1009 sh
(}) 10288 1009 sh
320 /LicsPlain f1
(\272) 1251 550 sh
(\272) 336 1012 sh
(\272) 7357 547 sh
(\272) 6052 1009 sh
320 /Courier-Oblique f1
(a) 1515 550 sh
(B) 1911 550 sh
(B) 3726 550 sh
(B) 2650 1012 sh
(a) 3174 1012 sh
(B) 4740 1012 sh
(a) 7621 547 sh
(B) 8907 547 sh
(a) 7621 1009 sh
(B) 8298 1009 sh
(B) 10113 1009 sh
320 /Symbol f1
(\254) 2447 550 sh
(\254) 8834 1009 sh
end MTsave restore
pse
1 1 pen
436 108 gm
(nc 398 108 436 195 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
436 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
436 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
436 195 gm
0 gr
436 195 lin
psb
currentpoint
pse
398 108 gm
398 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
2784 div 1216 3 -1 roll exch div scale
currentpoint translate 64 61 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 0 739 moveto 2668 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(\(Term ) -13 218 sh
(\)) 1426 218 sh
(E) 388 611 sh
(E) 37 1075 sh
320 /Courier f1
(rec) 847 218 sh
(:) 634 611 sh
(:) 1600 611 sh
(rec\(:) 600 1075 sh
(\)) 1758 1075 sh
(:) 2152 1075 sh
320 /Times-Roman f1
(,) 586 611 sh
( ) 1036 611 sh
( ) 1324 611 sh
( ) 232 1075 sh
( ) 520 1075 sh
( ) 2056 1075 sh
( ) 2360 1075 sh
192 ns
(1) 2178 691 sh
320 /Courier-Oblique f1
(A) 844 611 sh
(a) 1404 611 sh
(A) 1810 611 sh
(A) 1578 1075 sh
(a) 1864 1075 sh
(A) 2440 1075 sh
320 /LicsPlain f1
(\272) 1140 611 sh
(\246) 1966 611 sh
(\272) 336 1075 sh
end MTsave restore
pse
F T cp
%%Page: ? 46
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(46)show
102 90 gm
1 fs
10 fz
bu fc
2 F /|______Times-Bold fnt
bn
(G.2. Typing algorithm)show
130 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(PreType)show
144 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S,T)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(...)show
144 194 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
( | Rec\(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(T)show
163 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(PreTerm)show
177 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a,b)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(...)show
177 194 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
( | fold\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(T)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\)\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\) | unfold\()show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(a)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\) | rec\(:)show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(S)show
0 fs
bu fc
2 F /|______Courier fnt
bn
(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(b)show
196 126 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(Type)show
210 144 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(A,B)show
0 fs
bu fc
2 F /|______Courier fnt
bn
( =  )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(...)show
210 194 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
( | Rec\(\))show
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(B)show
280 108 gm
(nc 227 108 280 510 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
280 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
280 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
280 510 gm
0 gr
280 510 lin
psb
currentpoint
pse
227 108 gm
227 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12864 div 1696 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 959 347 moveto 834 0 rlineto stroke
1173 1190 moveto 407 0 rlineto stroke
16 th 0 797 moveto 3009 0 rlineto stroke
8 th 4662 373 moveto 1542 0 rlineto stroke
4931 1190 moveto 1004 0 rlineto stroke
16 th 3758 797 moveto 3606 0 rlineto stroke
8 th 8380 344 moveto 1253 0 rlineto stroke
10996 344 moveto 1235 0 rlineto stroke
10081 1189 moveto 573 0 rlineto stroke
16 th 8113 797 moveto 4637 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 700 430 sh
(B\251) 1961 430 sh
(B) 914 1273 sh
(B\251) 2638 1273 sh
(B) 4403 456 sh
(C) 5312 709 sh
(B\251) 6372 456 sh
(B) 4672 1273 sh
(C) 5311 1526 sh
(B\251) 6993 1273 sh
(T) 8104 427 sh
(B) 9801 427 sh
(B) 10737 427 sh
(T) 9805 1272 sh
(B) 11712 1272 sh
320 /Times-Italic f1
(lift) 1192 221 sh
(i,) 978 683 sh
(j) 1226 683 sh
(lift) 1192 1064 sh
(i,) 1200 1526 sh
(j) 1448 1526 sh
(replace) 4956 247 sh
(i) 4681 709 sh
(,) 5215 709 sh
(,) 5527 709 sh
(l) 5640 709 sh
(replace) 4956 1064 sh
(i,) 5126 1526 sh
(,) 5526 1526 sh
(l) 5639 1526 sh
(type) 8740 218 sh
(E) 8417 680 sh
(contracts) 11018 218 sh
(type) 10101 1063 sh
(E) 10273 1525 sh
320 /Times-Roman f1
(+) 1404 683 sh
(1) 1635 683 sh
(+) 4852 709 sh
(1) 5083 709 sh
(+) 5815 709 sh
(1) 6046 709 sh
256 /LicsPlain f1
(\305) 1817 430 sh
(\305) 1604 1273 sh
(\305) 6228 456 sh
(\305) 5959 1273 sh
(\305) 9657 427 sh
(\305) 12255 427 sh
(\305) 10678 1272 sh
320 /Courier f1
(Rec\(\)) 25 1273 sh
(Rec\(\)) 1749 1273 sh
(Rec\(\)) 3783 1273 sh
(Rec\(\)) 6104 1273 sh
(:Top) 8846 680 sh
(Rec\(\)) 8949 1272 sh
(Rec\(\)) 10823 1272 sh
320 /Times-Roman f1
(,) 8615 680 sh
320 /Symbol f1
(<) 8735 680 sh
320 /Times-Roman f1
(ok) 12398 427 sh
end MTsave restore
pse
1 1 pen
346 108 gm
(nc 295 108 346 313 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
346 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
346 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
346 313 gm
0 gr
346 313 lin
psb
currentpoint
pse
295 108 gm
295 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6560 div 1632 3 -1 roll exch div scale
currentpoint translate 64 51 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 595 344 moveto 1253 0 rlineto stroke
3061 344 moveto 1253 0 rlineto stroke
3097 1186 moveto 495 0 rlineto stroke
16 th 0 794 moveto 4833 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 427 sh
(C) 322 427 sh
(B) 2490 427 sh
(C) 2788 427 sh
(B) 1636 1269 sh
(C) 2824 1269 sh
320 /Times-Roman f1
(,) 223 427 sh
(,) 2689 427 sh
(,) 1835 1269 sh
320 /Times-Italic f1
(ties) 998 218 sh
(E) 632 680 sh
(sub) 3467 218 sh
(E) 3098 680 sh
(sub) 3124 1060 sh
(E) 3250 1522 sh
320 /Times-Roman f1
(,) 830 680 sh
(,) 3296 680 sh
320 /Symbol f1
(<) 950 680 sh
(<) 3416 680 sh
320 /Courier f1
(:Top) 1061 680 sh
(:Top) 3527 680 sh
(Rec\(\)) 747 1269 sh
(Rec\(\)) 1956 1269 sh
256 /LicsPlain f1
(\305) 1872 427 sh
(\305) 4338 427 sh
(\305) 3616 1269 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 1992 427 sh
(z) 5066 877 sh
320 /Times-Roman f1
(ok) 4481 427 sh
(ok) 3759 1269 sh
( \() 4897 877 sh
({pos}\)) 5618 877 sh
320 /Symbol f1
(\315) 5337 877 sh
end MTsave restore
pse
1 1 pen
412 108 gm
(nc 361 108 412 390 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
412 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
412 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
412 390 gm
0 gr
412 390 lin
psb
currentpoint
pse
361 108 gm
361 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9024 div 1632 3 -1 roll exch div scale
currentpoint translate 64 51 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 595 344 moveto 1253 0 rlineto stroke
3061 344 moveto 1253 0 rlineto stroke
5684 344 moveto 1253 0 rlineto stroke
4409 1186 moveto 495 0 rlineto stroke
16 th 0 794 moveto 7456 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 427 sh
(C) 322 427 sh
(B) 2490 427 sh
(C) 2788 427 sh
(C) 5092 427 sh
(B) 5425 427 sh
(B) 2948 1269 sh
(C) 4136 1269 sh
320 /Times-Roman f1
(,) 223 427 sh
(,) 2689 427 sh
(,) 5305 427 sh
(,) 3147 1269 sh
320 /Times-Italic f1
(ties) 998 218 sh
(E) 632 680 sh
(sub) 3467 218 sh
(E) 3098 680 sh
(sub) 6090 218 sh
(E) 5721 680 sh
(sub) 4436 1060 sh
(E) 4562 1522 sh
320 /Times-Roman f1
(,) 830 680 sh
(,) 3296 680 sh
(,) 5919 680 sh
320 /Symbol f1
(<) 950 680 sh
(<) 3416 680 sh
(<) 6039 680 sh
320 /Courier f1
(:Top) 1061 680 sh
(:Top) 3527 680 sh
(:Top) 6150 680 sh
(Rec\(\)) 2059 1269 sh
(Rec\(\)) 3268 1269 sh
256 /LicsPlain f1
(\305) 1872 427 sh
(\305) 4338 427 sh
(\305) 6961 427 sh
(\305) 4928 1269 sh
320 ns
(V) 7847 877 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 1992 427 sh
(z) 7689 877 sh
320 /Times-Roman f1
(ok) 4481 427 sh
(ok) 7104 427 sh
(ok) 5071 1269 sh
( \() 7520 877 sh
({pos}\)) 8060 877 sh
end MTsave restore
pse
1 1 pen
477 108 gm
(nc 427 108 477 367 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
477 108 gm
bu fc
2 F /|______Courier fnt
bn
(  )show
477 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
477 367 gm
0 gr
477 367 lin
psb
currentpoint
pse
427 108 gm
427 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8288 div 1600 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 267 345 moveto 573 0 rlineto stroke
2634 345 moveto 629 0 rlineto stroke
4208 345 moveto 1406 0 rlineto stroke
7166 345 moveto 495 0 rlineto stroke
4136 1167 moveto 629 0 rlineto stroke
16 th 0 775 moveto 8180 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(T) -9 428 sh
(B) 1898 428 sh
(a) 2390 428 sh
(A) 3441 428 sh
(B) 3949 428 sh
(B) 5387 681 sh
(B\251) 5782 428 sh
(A) 6443 428 sh
(B\251) 6763 428 sh
(T) 3262 1250 sh
(a) 3803 1250 sh
(B) 5823 1250 sh
320 /Times-Italic f1
(type) 287 219 sh
(E) 459 681 sh
(term) 2654 219 sh
(E) 2854 681 sh
(replace) 4434 219 sh
(,) 4379 681 sh
(,) 6645 428 sh
(sub) 7193 219 sh
(E) 7319 681 sh
(term) 4156 1041 sh
(E) 4356 1503 sh
256 /LicsPlain f1
(\305) 864 428 sh
(\305) 3287 428 sh
(\305) 5638 428 sh
(\305) 7685 428 sh
(\305) 4789 1250 sh
320 /Courier f1
(Rec\(\)) 1009 428 sh
(1) 4211 681 sh
(Rec\(\)) 4498 681 sh
(fold\(:) 2135 1250 sh
(\)\() 3458 1250 sh
(\)) 3967 1250 sh
(Rec\(\)) 4934 1250 sh
320 /Times-Roman f1
(ok) 7828 428 sh
end MTsave restore
pse
1 1 pen
542 108 gm
(nc 492 108 542 330 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
542 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
542 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
542 330 gm
0 gr
542 330 lin
psb
currentpoint
pse
492 108 gm
492 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7104 div 1600 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 253 345 moveto 629 0 rlineto stroke
1838 345 moveto 1395 0 rlineto stroke
5057 345 moveto 1406 0 rlineto stroke
3749 1167 moveto 629 0 rlineto stroke
16 th 0 775 moveto 7002 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(a) 9 428 sh
(A) 1060 428 sh
(A) 1578 428 sh
(B) 4291 428 sh
(B) 4798 428 sh
(B) 6236 681 sh
(B\251) 6631 428 sh
(a) 3416 1250 sh
(B\251) 4546 1250 sh
320 /Times-Italic f1
(term) 273 219 sh
(E) 473 681 sh
(exposeRec) 1860 219 sh
(E) 2441 681 sh
(replace) 5283 219 sh
(,) 5228 681 sh
(term) 3769 1041 sh
(E) 3969 1503 sh
256 /LicsPlain f1
(\305) 906 428 sh
(\305) 3257 428 sh
(\305) 6487 428 sh
(\305) 4402 1250 sh
320 /Courier f1
(Rec\(\)) 3402 428 sh
(1) 5060 681 sh
(Rec\(\)) 5347 681 sh
(unfold\() 2111 1250 sh
(\)) 3580 1250 sh
end MTsave restore
pse
1 1 pen
520 330 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
12 fz
bu fc
2 F /|______Times-Roman fnt
bn
(       )show
542 351 gm
(nc 492 351 542 562 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
542 351 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
542 351 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
542 562 gm
0 gr
542 562 lin
psb
currentpoint
pse
492 351 gm
492 351 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6752 div 1600 3 -1 roll exch div scale
currentpoint translate 64 39 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 271 345 moveto 573 0 rlineto stroke
1759 345 moveto 721 0 rlineto stroke
3436 345 moveto 407 0 rlineto stroke
5404 345 moveto 721 0 rlineto stroke
3717 1166 moveto 629 0 rlineto stroke
16 th 0 774 moveto 6644 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(S) 8 428 sh
(A) 1022 428 sh
(a) 1515 428 sh
(A) 2252 681 sh
(A) 2658 428 sh
(A) 3176 428 sh
(A\251) 4021 428 sh
(B) 4672 428 sh
(A\251) 5001 428 sh
(A) 5897 681 sh
(S) 2856 1249 sh
(a) 3384 1249 sh
(A) 4524 1249 sh
320 /Times-Italic f1
(type) 291 219 sh
(E) 463 681 sh
(term) 1825 219 sh
(E) 1796 681 sh
(lift) 3455 219 sh
(,) 4873 428 sh
(sub) 5544 219 sh
(E) 5441 681 sh
(term) 3737 1040 sh
(E) 3937 1502 sh
256 /LicsPlain f1
(\305) 868 428 sh
(\305) 2504 428 sh
(\305) 3867 428 sh
(\305) 6149 428 sh
(\305) 4370 1249 sh
320 /Times-Roman f1
(,) 1994 681 sh
(,) 5639 681 sh
(ok) 6292 428 sh
320 /Courier f1
(:) 2042 681 sh
(1) 3544 681 sh
(:) 5687 681 sh
(rec\(:) 1904 1249 sh
(\)\() 3039 1249 sh
(\)) 3548 1249 sh
end MTsave restore
pse
1 1 pen
568 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Contracts)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( tests whether a type is formally contractive in a variable.)show
614 90 gm
(nc 585 90 614 264 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
614 264 gm
0 gr
614 264 lin
psb
currentpoint
pse
585 90 gm
585 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5568 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 392 moveto 1994 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5452 0 rlineto stroke
sol 0 825 moveto 5452 0 rlineto stroke
sol 8 0 moveto 0 833 rlineto stroke
sol 5444 0 moveto 0 833 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 475 sh
(:) 738 475 sh
(Type) 914 475 sh
(contracts) 1990 266 sh
(index) 1607 728 sh
(:) 2370 728 sh
(Int\(=) 2564 728 sh
(1\)) 3299 728 sh
(result) 3751 475 sh
(:) 4550 475 sh
256 /LicsPlain f1
(\305) 3606 475 sh
320 /Times-Roman f1
({ok}) 4701 475 sh
end MTsave restore
pse
1 1 pen
653 108 gm
(nc 629 108 653 502 6 rc)kp
F 1 setTxMode
(  )show
653 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
653 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
653 502 gm
0 gr
653 502 lin
psb
currentpoint
pse
629 108 gm
629 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12608 div 768 3 -1 roll exch div scale
currentpoint translate 64 53 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 233 344 moveto 1235 0 rlineto stroke
3965 344 moveto 1235 0 rlineto stroke
6990 344 moveto 1235 0 rlineto stroke
10781 344 moveto 1235 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(n) -11 427 sh
(n) 2145 427 sh
(A) 6009 427 sh
(B) 6731 427 sh
(A) 10205 427 sh
(B) 10522 427 sh
320 /Times-Italic f1
(contracts) 255 218 sh
(m) 737 680 sh
(m) 2706 427 sh
(contracts) 3987 218 sh
(m) 4469 680 sh
(contracts) 7012 218 sh
(m) 7494 680 sh
(contracts) 10803 218 sh
(m) 11285 680 sh
256 /LicsPlain f1
(\305) 1492 427 sh
(\305) 5224 427 sh
(\305) 8249 427 sh
(\305) 12040 427 sh
320 ns
(=) 2421 427 sh
320 /Times-Roman f1
(ok \() 1635 427 sh
(\)) 2944 427 sh
(ok) 5367 427 sh
(ok) 8392 427 sh
(ok) 12183 427 sh
320 /Courier f1
(Top) 3338 427 sh
(-) 6213 427 sh
(All\(<:) 9035 427 sh
320 /Symbol f1
(>) 6476 427 sh
320 /Times-Roman f1
(\)) 10416 427 sh
end MTsave restore
pse
F T cp
%%Page: ? 47
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(47)show
140 108 gm
(nc 91 108 140 260 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
140 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
140 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
140 260 gm
0 gr
140 260 lin
psb
currentpoint
pse
91 108 gm
91 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
4864 div 1568 3 -1 roll exch div scale
currentpoint translate 64 50 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 283 344 moveto 1235 0 rlineto stroke
3005 344 moveto 1235 0 rlineto stroke
2089 1123 moveto 1235 0 rlineto stroke
16 th 0 731 moveto 4759 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 427 sh
(B) 2746 427 sh
(B) 1830 1206 sh
320 /Times-Italic f1
(contracts) 305 218 sh
(contracts) 3027 218 sh
(m) 3287 680 sh
(contracts) 2111 997 sh
(m) 2593 1459 sh
320 /Times-Roman f1
(1) 820 680 sh
(+) 3597 680 sh
(1) 3828 680 sh
256 /LicsPlain f1
(\305) 1542 427 sh
(\305) 4264 427 sh
(\305) 3348 1206 sh
320 /Times-Roman f1
(ok) 1685 427 sh
(ok) 4407 427 sh
(ok) 3491 1206 sh
320 /Courier f1
(Rec\(\)) 941 1206 sh
end MTsave restore
pse
1 1 pen
166 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(ExposeRec)show
166 134 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( strips type variables until it finds a recursive type.)show
210 90 gm
(nc 183 90 210 255 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
210 255 gm
0 gr
210 255 lin
psb
currentpoint
pse
183 90 gm
183 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5280 div 864 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 392 moveto 1395 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 5184 0 rlineto stroke
sol 0 772 moveto 5184 0 rlineto stroke
sol 8 0 moveto 0 780 rlineto stroke
sol 5176 0 moveto 0 780 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 475 sh
(:) 738 475 sh
(Type) 914 475 sh
(exposeRec) 1610 266 sh
(env) 1687 728 sh
(:) 2193 728 sh
(Env) 2384 728 sh
(outType) 3151 475 sh
(:) 4238 475 sh
(Type) 4414 475 sh
256 /LicsPlain f1
(\305) 3007 475 sh
end MTsave restore
pse
1 1 pen
274 108 gm
(nc 225 108 274 397 6 rc)kp
F 1 setTxMode
(  )show
274 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
274 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
274 397 gm
0 gr
274 397 lin
psb
currentpoint
pse
225 108 gm
225 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9248 div 1568 3 -1 roll exch div scale
currentpoint translate 64 47 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 344 moveto 981 0 rlineto stroke
2661 344 moveto 1395 0 rlineto stroke
1463 1126 moveto 1395 0 rlineto stroke
16 th 0 734 moveto 4605 0 rlineto stroke
6495 734 moveto 1395 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 427 sh
(typeIde) 315 218 sh
(exposeRec) 2683 218 sh
(E) 3264 680 sh
(exposeRec) 1485 1000 sh
(E) 2066 1462 sh
(exposeRec) 6517 608 sh
(E) 7098 1070 sh
320 /Courier-Oblique f1
(n) 690 680 sh
(A) 1454 427 sh
(A) 2401 427 sh
(A\251) 4234 427 sh
(n) 1219 1209 sh
(A\251) 3036 1209 sh
(B) 6236 817 sh
(B) 8948 817 sh
256 /LicsPlain f1
(\305) 1300 427 sh
(\305) 4080 427 sh
(\305) 2882 1209 sh
(\305) 7914 817 sh
320 /Courier f1
(Rec\(\)) 5347 817 sh
(Rec\(\)) 8059 817 sh
end MTsave restore
pse
1 1 pen
300 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Ties)show
300 107 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( computes the subtyping constraints between two recursive variables, by mimicking )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(sub)show
300 458 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
346 90 gm
(nc 317 90 346 478 6 rc)kp
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
346 90 gm
bu fc

%%BeginFont: ZapfChancery-MediumItalic
%%IncludeFont: ZapfChancery-MediumItalic
bn
%%EndFont
bu fc
{}mark T /ZapfChancery-MediumItalic /|______ZapfChancery-MediumItalic 0 rf
bn
bu fc
2 F /|______ZapfChancery-MediumItalic fnt
bn
(  )show
0 0 pen
346 478 gm
0 gr
346 478 lin
psb
currentpoint
pse
317 90 gm
317 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12416 div 928 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 2282 392 moveto 7189 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 12310 0 rlineto stroke
sol 0 837 moveto 12310 0 rlineto stroke
sol 8 0 moveto 0 845 rlineto stroke
sol 12302 0 moveto 0 845 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(small,) 155 475 sh
(big) 965 475 sh
(:) 1432 475 sh
(Type) 1608 475 sh
(ties) 5653 266 sh
(env) 2304 728 sh
(:) 2810 728 sh
(Env,) 3001 728 sh
( index) 3624 728 sh
(:) 4467 728 sh
(Int\(=) 4661 728 sh
(1\),) 5396 728 sh
( variance) 5788 728 sh
(:) 7044 728 sh
(\(=) 8509 728 sh
(\)) 9348 728 sh
(result) 9640 475 sh
(:) 10439 475 sh
320 /Times-Roman f1
({pos,) 7195 728 sh
(neg}) 7918 728 sh
(pos) 8899 728 sh
({pos,) 10847 475 sh
(neg}) 11570 475 sh
256 /LicsPlain f1
(\305) 9495 475 sh
384 /ZapfChancery-MediumItalic f1
(P) 10611 475 sh
end MTsave restore
pse
1 1 pen
412 108 gm
(nc 361 108 412 550 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
412 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
412 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
412 550 gm
0 gr
412 550 lin
psb
currentpoint
pse
361 108 gm
361 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
14144 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 941 773 moveto 726 0 rlineto stroke
2933 773 moveto 798 0 rlineto stroke
5085 773 moveto 726 0 rlineto stroke
8 th 7803 344 moveto 981 0 rlineto stroke
10488 344 moveto 726 0 rlineto stroke
9290 1165 moveto 726 0 rlineto stroke
16 th 7508 773 moveto 4068 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A) 2 856 sh
(n) 2388 856 sh
(n) 2689 856 sh
(n) 4540 856 sh
(n) 4841 856 sh
(n) 6903 856 sh
(n) 8198 680 sh
(A) 8962 427 sh
(A) 9909 427 sh
(B) 10229 427 sh
(n) 8727 1248 sh
(B) 9031 1248 sh
(B) 11833 856 sh
(n) 12401 856 sh
(B) 12793 856 sh
320 /Times-Roman f1
(,) 202 856 sh
(,) 1176 1109 sh
(,) 1379 1109 sh
(,) 2572 856 sh
(,) 3168 1109 sh
(,) 3443 1109 sh
(,) 4724 856 sh
(,) 5320 1109 sh
(,) 5523 1109 sh
(,) 10109 427 sh
(,) 10723 680 sh
(,) 10926 680 sh
(,) 8911 1248 sh
(,) 9525 1501 sh
(,) 9728 1501 sh
320 /Courier f1
(Top) 314 856 sh
(Top) 13356 856 sh
320 /Times-Italic f1
(ties) 1081 647 sh
(E) 978 1109 sh
(i) 1291 1109 sh
(v) 1500 1109 sh
(ties) 3109 647 sh
(E) 2970 1109 sh
(n) 3289 1109 sh
(v) 3564 1109 sh
(v) 3998 856 sh
(ties) 5225 647 sh
(E) 5122 1109 sh
(i) 5435 1109 sh
(v) 5644 1109 sh
(i) 6446 856 sh
(E) 7545 427 sh
(typeIde) 7823 218 sh
(ties) 10628 218 sh
(E) 10525 680 sh
(i) 10838 680 sh
(v) 11047 680 sh
(ties) 9430 1039 sh
(E) 9327 1501 sh
(i) 9640 1501 sh
(v) 9849 1501 sh
256 /LicsPlain f1
(\305) 1691 856 sh
(\305) 3755 856 sh
(\305) 5835 856 sh
(\305) 8808 427 sh
(\305) 11238 427 sh
(\305) 10040 1248 sh
320 ns
(=) 6626 856 sh
(=) 12124 856 sh
(=) 13084 856 sh
320 /Times-Roman f1
({}) 1808 856 sh
({) 3872 856 sh
(}) 4113 856 sh
({} \() 5952 856 sh
(\)) 7098 856 sh
( \() 11640 856 sh
(,) 12585 856 sh
( ) 12713 856 sh
(\)) 13934 856 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 11358 427 sh
(z) 10160 1248 sh
end MTsave restore
pse
1 1 pen
476 108 gm
(nc 425 108 476 506 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
476 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
476 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
476 506 gm
0 gr
476 506 lin
psb
currentpoint
pse
425 108 gm
425 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12736 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 807 344 moveto 957 0 rlineto stroke
3557 344 moveto 1811 0 rlineto stroke
3243 1165 moveto 726 0 rlineto stroke
16 th 0 773 moveto 5802 0 rlineto stroke
8 th 7358 344 moveto 957 0 rlineto stroke
10108 344 moveto 2067 0 rlineto stroke
10663 1165 moveto 726 0 rlineto stroke
16 th 6551 773 moveto 6058 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(A\251) 34 427 sh
(A) 547 427 sh
(B) 2835 427 sh
(B\251) 3154 427 sh
(A\251) 4050 680 sh
(A) 866 1248 sh
(B) 1597 1248 sh
(A\251) 1926 1248 sh
(B\251) 2840 1248 sh
(A\251) 6585 427 sh
(A) 7098 427 sh
(B) 9386 427 sh
(B\251) 9705 427 sh
(A\251) 10857 680 sh
(A) 7975 1248 sh
(B) 8276 1248 sh
(A\251) 9776 1248 sh
(B\251) 10260 1248 sh
320 /Times-Roman f1
(,) 417 427 sh
(,) 1042 680 sh
(,) 1245 680 sh
(,) 3034 427 sh
(,) 4433 680 sh
(,) 5080 680 sh
(,) 1796 1248 sh
(,) 3478 1501 sh
(,) 3681 1501 sh
(,) 6968 427 sh
(,) 7593 680 sh
(,) 7796 680 sh
(,) 9585 427 sh
(,) 11240 680 sh
(,) 11887 680 sh
(,) 8475 1248 sh
(,) 10898 1501 sh
(,) 11101 1501 sh
320 /Times-Italic f1
(ties) 1062 218 sh
(E) 844 680 sh
(i) 1157 680 sh
(v) 1597 680 sh
(ties) 4239 218 sh
(E) 3594 680 sh
(i) 4548 680 sh
(v) 5201 680 sh
(') 5691 427 sh
(ties) 3383 1039 sh
(E) 3280 1501 sh
(i) 3593 1501 sh
(v) 3802 1501 sh
(') 4860 1248 sh
(ties) 7613 218 sh
(E) 7395 680 sh
(i) 7708 680 sh
(v) 8148 680 sh
(ties) 10918 218 sh
(E) 10145 680 sh
(i) 11355 680 sh
(v) 12008 680 sh
(') 12498 427 sh
(ties) 10803 1039 sh
(E) 10700 1501 sh
(i) 11013 1501 sh
(v) 11222 1501 sh
(') 12280 1248 sh
320 /Symbol f1
(\330) 1369 680 sh
(-) 1083 1248 sh
(>) 1342 1248 sh
(-) 2326 1248 sh
(>) 2585 1248 sh
(\310) 4383 1248 sh
(\330) 7920 680 sh
(\310) 11803 1248 sh
256 /LicsPlain f1
(\305) 1788 427 sh
(\305) 5392 427 sh
(\305) 3993 1248 sh
(\305) 8339 427 sh
(\305) 12199 427 sh
(\305) 11413 1248 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 1908 427 sh
(z) 5512 427 sh
(z) 4113 1248 sh
(z) 4681 1248 sh
(z) 8459 427 sh
(z) 12319 427 sh
(z) 11533 1248 sh
(z) 12101 1248 sh
320 /Times-Roman f1
(,) 3792 680 sh
(+) 4719 680 sh
(1) 4950 680 sh
(,) 10343 680 sh
(+) 11526 680 sh
(1) 11757 680 sh
320 /Courier f1
(:) 3840 680 sh
(<:) 10455 680 sh
(All\(<:) 6805 1248 sh
(\)) 8155 1248 sh
(All\(<:) 8606 1248 sh
(\)) 10139 1248 sh
end MTsave restore
pse
1 1 pen
543 108 gm
(nc 491 108 543 347 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
543 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
543 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
543 347 gm
0 gr
543 347 lin
psb
currentpoint
pse
491 108 gm
491 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7648 div 1664 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 746 344 moveto 1049 0 rlineto stroke
3159 344 moveto 2233 0 rlineto stroke
3596 1189 moveto 726 0 rlineto stroke
16 th 0 797 moveto 5826 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 427 sh
(B\251) 343 427 sh
(B) 2437 427 sh
(B\251) 2756 427 sh
(B) 1984 1272 sh
(B\251) 3193 1272 sh
320 /Times-Roman f1
(,) 223 427 sh
(,) 981 680 sh
(,) 1204 680 sh
(,) 2636 427 sh
(,) 4457 680 sh
(,) 5104 680 sh
(,) 2183 1272 sh
(,) 3831 1525 sh
(,) 4034 1525 sh
320 /Times-Italic f1
(ties) 1047 218 sh
(E) 783 680 sh
(ties) 4052 218 sh
(E) 3196 680 sh
(i) 4572 680 sh
(v) 5225 680 sh
(') 5715 427 sh
(ties) 3736 1063 sh
(E) 3633 1525 sh
(i) 3946 1525 sh
(v) 4155 1525 sh
(') 4645 1272 sh
(') 6706 1062 sh
320 /Times-Roman f1
(1) 1074 680 sh
(pos) 1332 680 sh
(,) 3394 680 sh
(+) 4743 680 sh
(1) 4974 680 sh
( ) 5890 880 sh
({pos}) 6665 701 sh
({}) 7030 1062 sh
256 /LicsPlain f1
(\305) 1819 427 sh
(\305) 5416 427 sh
(\305) 4346 1272 sh
320 ns
(6) 6849 1062 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 1939 427 sh
(z) 5536 427 sh
(z) 4466 1272 sh
(z) 6113 701 sh
(z) 6527 1062 sh
320 /Courier f1
(<:Top) 3506 680 sh
(Rec\(\)) 1095 1272 sh
(Rec\(\)) 2304 1272 sh
320 /Symbol f1
(\315) 6384 701 sh
(\332) 6215 1062 sh
(  ) 6399 1062 sh
320 /Symbol f1
(\346) 5982 724 sh
(\350) 5982 1073 sh
(\366) 7387 724 sh
(\370) 7387 1073 sh
end MTsave restore
pse
1 1 pen
610 108 gm
(nc 558 108 610 344 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
610 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
610 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
610 344 gm
0 gr
610 344 lin
psb
currentpoint
pse
558 108 gm
558 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7552 div 1664 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 746 344 moveto 1049 0 rlineto stroke
3159 344 moveto 2233 0 rlineto stroke
3075 1189 moveto 726 0 rlineto stroke
16 th 0 797 moveto 5826 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 427 sh
(B\251) 343 427 sh
(B) 2437 427 sh
(B\251) 2756 427 sh
(B) 1463 1272 sh
(B\251) 2672 1272 sh
320 /Times-Roman f1
(,) 223 427 sh
(,) 981 680 sh
(,) 1204 680 sh
(,) 2636 427 sh
(,) 4457 680 sh
(,) 5104 680 sh
(,) 1662 1272 sh
(,) 3310 1525 sh
(,) 3513 1525 sh
320 /Times-Italic f1
(ties) 1047 218 sh
(E) 783 680 sh
(ties) 4052 218 sh
(E) 3196 680 sh
(i) 4572 680 sh
(v) 5225 680 sh
(') 5715 427 sh
(ties) 3215 1063 sh
(E) 3112 1525 sh
(i) 3425 1525 sh
(v) 3634 1525 sh
(') 6631 1062 sh
320 /Times-Roman f1
(1) 1074 680 sh
(pos) 1332 680 sh
(,) 3394 680 sh
(+) 4743 680 sh
(1) 4974 680 sh
({pos,) 3942 1272 sh
(neg}) 4665 1272 sh
( ) 5890 880 sh
({pos}) 6533 701 sh
({}) 7027 1062 sh
256 /LicsPlain f1
(\305) 1819 427 sh
(\305) 5416 427 sh
(\305) 3825 1272 sh
320 ns
(V) 6320 701 sh
(=) 6774 1062 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 1939 427 sh
(z) 5536 427 sh
(z) 6162 701 sh
(z) 6452 1062 sh
320 /Courier f1
(<:Top) 3506 680 sh
(Rec\(\)) 574 1272 sh
(Rec\(\)) 1783 1272 sh
320 /Symbol f1
(\331) 6138 1062 sh
(  ) 6324 1062 sh
320 /Symbol f1
(\346) 5982 724 sh
(\350) 5982 1073 sh
(\366) 7305 724 sh
(\370) 7305 1073 sh
end MTsave restore
pse
F T cp
%%Page: ? 48
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(48)show
102 90 gm
1 fs
10 fz
bu fc
2 F /|______Times-Bold fnt
bn
(G.3. Typing algorithm with argument synthesis)show
143 108 gm
(nc 119 108 143 300 6 rc)kp
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
143 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
143 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
143 300 gm
0 gr
143 300 lin
psb
currentpoint
pse
119 108 gm
119 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
6144 div 768 3 -1 roll exch div scale
currentpoint translate 64 53 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 259 344 moveto 1235 0 rlineto stroke
4306 344 moveto 1235 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 427 sh
320 /Times-Italic f1
(contracts) 281 218 sh
(m) 763 680 sh
(contracts) 4328 218 sh
(m) 4810 680 sh
256 /LicsPlain f1
(\305) 1518 427 sh
(\305) 5565 427 sh
320 /Times-Roman f1
(ok) 1661 427 sh
(ok) 5708 427 sh
320 /Courier f1
(All\() 2304 427 sh
(<:) 3328 427 sh
320 /Courier-Oblique f1
(q) 3029 427 sh
(A) 3730 427 sh
(B) 4047 427 sh
320 /Times-Roman f1
(\)) 3941 427 sh
end MTsave restore
pse
1 1 pen
209 108 gm
(nc 158 108 209 491 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
209 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
209 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
209 491 gm
0 gr
209 491 lin
psb
currentpoint
pse
158 108 gm
158 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
12256 div 1632 3 -1 roll exch div scale
currentpoint translate 64 40 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 578 773 moveto 726 0 rlineto stroke
3043 773 moveto 726 0 rlineto stroke
8 th 6862 344 moveto 957 0 rlineto stroke
9612 344 moveto 2067 0 rlineto stroke
10423 1165 moveto 726 0 rlineto stroke
16 th 6018 773 moveto 6133 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) -25 856 sh
(b) 2791 856 sh
(g) 4976 856 sh
(z) 7963 427 sh
(z) 11823 427 sh
(z) 11293 1248 sh
(z) 11861 1248 sh
320 /Times-Roman f1
(,) 199 856 sh
(,) 813 1109 sh
(,) 1016 1109 sh
(,) 2667 856 sh
(,) 3278 1109 sh
(,) 3481 1109 sh
(,) 6472 427 sh
(,) 7097 680 sh
(,) 7300 680 sh
(,) 9089 427 sh
(,) 10744 680 sh
(,) 11391 680 sh
(,) 7979 1248 sh
(,) 10658 1501 sh
(,) 10861 1501 sh
320 /Courier-Oblique f1
(B) 319 856 sh
(A) 2467 856 sh
(A) 4419 856 sh
(A\251) 6089 427 sh
(A) 6602 427 sh
(B) 8890 427 sh
(B\251) 9209 427 sh
(A\251) 10361 680 sh
(q) 6778 1248 sh
(A) 7479 1248 sh
(B) 7780 1248 sh
(q) 8835 1248 sh
(A\251) 9536 1248 sh
(B\251) 10020 1248 sh
320 /Times-Italic f1
(ties) 718 647 sh
(E) 615 1109 sh
(i) 928 1109 sh
(v) 1137 1109 sh
(ties) 3183 647 sh
(E) 3080 1109 sh
(i) 3393 1109 sh
(v) 3602 1109 sh
(ties) 7117 218 sh
(E) 6899 680 sh
(i) 7212 680 sh
(v) 7652 680 sh
(ties) 10422 218 sh
(E) 9649 680 sh
(i) 10859 680 sh
(v) 11512 680 sh
(') 12002 427 sh
(ties) 10563 1039 sh
(E) 10460 1501 sh
(i) 10773 1501 sh
(v) 10982 1501 sh
(') 12040 1248 sh
256 /LicsPlain f1
(\305) 1328 856 sh
(\305) 3793 856 sh
(\305) 7843 427 sh
(\305) 11703 427 sh
(\305) 11173 1248 sh
320 ns
(=) 4711 856 sh
320 /Times-Roman f1
({}) 1445 856 sh
({} \() 3910 856 sh
(\)) 5179 856 sh
(,) 9847 680 sh
(+) 11030 680 sh
(1) 11261 680 sh
320 /Symbol f1
(\330) 7424 680 sh
(\310) 11563 1248 sh
320 /Courier f1
(<:) 9959 680 sh
(All\() 6053 1248 sh
(<:) 7077 1248 sh
(\)) 7659 1248 sh
(All\() 8110 1248 sh
(<:) 9134 1248 sh
(\)) 9899 1248 sh
end MTsave restore
pse
1 1 pen
277 108 gm
(nc 224 108 277 472 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
277 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
277 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
277 472 gm
0 gr
277 472 lin
psb
currentpoint
pse
224 108 gm
224 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11648 div 1696 3 -1 roll exch div scale
currentpoint translate 64 50 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 959 345 moveto 834 0 rlineto stroke
1173 1188 moveto 407 0 rlineto stroke
16 th 0 795 moveto 3009 0 rlineto stroke
8 th 4931 371 moveto 1004 0 rlineto stroke
4931 1188 moveto 1004 0 rlineto stroke
16 th 3758 795 moveto 3606 0 rlineto stroke
8 th 8701 371 moveto 2059 0 rlineto stroke
9286 1188 moveto 1588 0 rlineto stroke
16 th 8113 795 moveto 3425 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 700 428 sh
(B\251) 1961 428 sh
(B) 914 1271 sh
(B\251) 2638 1271 sh
(B) 4672 454 sh
(C) 5638 707 sh
(B\251) 6103 454 sh
(B) 4672 1271 sh
(C) 5415 1524 sh
(B\251) 6993 1271 sh
(B) 8442 454 sh
(B) 9027 1271 sh
320 /Times-Italic f1
(lift) 1192 219 sh
(i,) 978 681 sh
(j) 1226 681 sh
(lift) 1192 1062 sh
(i,) 1200 1524 sh
(j) 1448 1524 sh
(replace) 4956 245 sh
(i) 5007 707 sh
(,) 5541 707 sh
(replace) 4956 1062 sh
(i,) 5230 1524 sh
(occurCheck) 8960 245 sh
(,) 8934 707 sh
(r) 9053 707 sh
(,) 9628 707 sh
(,) 10087 707 sh
(i) 10200 707 sh
(\251) 11135 454 sh
(occurCheck) 9310 1062 sh
(,) 9796 1524 sh
(r,) 9915 1524 sh
(,) 10368 1524 sh
(i) 10481 1524 sh
(\251) 11249 1271 sh
320 /Times-Roman f1
(+) 1404 681 sh
(1) 1635 681 sh
(+) 5178 707 sh
(1) 5409 707 sh
256 /LicsPlain f1
(\305) 1817 428 sh
(\305) 1604 1271 sh
(\305) 5959 454 sh
(\305) 5959 1271 sh
(\305) 10784 454 sh
(\305) 10898 1271 sh
320 ns
(\345) 9921 707 sh
(\344) 11346 1271 sh
320 /Courier f1
(Rec\(\)) 25 1271 sh
(Rec\(\)) 1749 1271 sh
(Rec\(\)) 3783 1271 sh
(Rec\(\)) 6104 1271 sh
(Rec\(\)) 8138 1271 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(a) 8708 707 sh
(s) 9729 707 sh
(s) 10911 454 sh
(a) 9570 1524 sh
(s) 10140 1524 sh
(s) 11025 1271 sh
320 /Times-Roman f1
(+) 9265 707 sh
(1) 9496 707 sh
(+) 10371 707 sh
(1) 10602 707 sh
end MTsave restore
pse
1 1 pen
344 108 gm
(nc 292 108 344 481 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
344 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
344 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
344 481 gm
0 gr
344 481 lin
psb
currentpoint
pse
292 108 gm
292 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
11936 div 1664 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 267 344 moveto 1253 0 rlineto stroke
2454 344 moveto 1235 0 rlineto stroke
1754 1189 moveto 573 0 rlineto stroke
16 th 0 797 moveto 4208 0 rlineto stroke
8 th 5552 347 moveto 1253 0 rlineto stroke
8018 347 moveto 1712 0 rlineto stroke
8141 1189 moveto 587 0 rlineto stroke
16 th 4957 797 moveto 5245 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(T) -9 427 sh
(B) 1688 427 sh
(B) 2195 427 sh
(T) 1478 1272 sh
(B) 3385 1272 sh
(B) 4981 430 sh
(C) 5279 430 sh
(B) 7447 430 sh
(C) 7745 430 sh
(B) 6680 1272 sh
(C) 7868 1272 sh
320 /Times-Italic f1
(type) 627 218 sh
(E) 304 680 sh
(contracts) 2476 218 sh
(type) 1774 1063 sh
(E) 1946 1525 sh
(ties) 5955 221 sh
(E) 5589 683 sh
(sub) 8654 221 sh
(E) 8055 683 sh
(,) 9245 683 sh
(\251) 10105 430 sh
(sub) 8214 1063 sh
(E,) 8178 1525 sh
(\251) 9103 1272 sh
320 /Times-Roman f1
(,) 502 680 sh
(,) 5787 683 sh
(,) 8253 683 sh
320 /Symbol f1
(<) 622 680 sh
(<) 5907 683 sh
(<) 8373 683 sh
320 /Courier f1
(:Top) 733 680 sh
(Rec\(\)) 622 1272 sh
(Rec\(\)) 2496 1272 sh
(:Top) 6018 683 sh
(:Top) 8484 683 sh
(Rec\(\)) 5791 1272 sh
(Rec\(\)) 7000 1272 sh
256 /LicsPlain f1
(\305) 1544 427 sh
(\305) 3713 427 sh
(\305) 2351 1272 sh
(\305) 6829 430 sh
(\305) 9754 430 sh
(\305) 8752 1272 sh
320 ns
(\345) 9538 683 sh
(\344) 9200 1272 sh
320 /Times-Roman f1
(ok) 3856 427 sh
( \() 10266 880 sh
({pos}\)) 10987 880 sh
320 /Times-Roman f1
(,) 5180 430 sh
(,) 7646 430 sh
(,) 6879 1272 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 6949 430 sh
(s) 9346 683 sh
(s) 9881 430 sh
(s) 8474 1525 sh
(s) 8879 1272 sh
(z) 10435 880 sh
320 /Symbol f1
(\315) 10706 880 sh
end MTsave restore
pse
1 1 pen
410 108 gm
(nc 359 108 410 415 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
410 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
410 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
410 415 gm
0 gr
410 415 lin
psb
currentpoint
pse
359 108 gm
359 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9824 div 1632 3 -1 roll exch div scale
currentpoint translate 64 51 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 595 344 moveto 1253 0 rlineto stroke
3061 344 moveto 1712 0 rlineto stroke
6096 344 moveto 1649 0 rlineto stroke
4717 1186 moveto 495 0 rlineto stroke
16 th 0 794 moveto 8268 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(B) 24 427 sh
(C) 322 427 sh
(B) 2490 427 sh
(C) 2788 427 sh
(C) 5504 427 sh
(B) 5837 427 sh
(B) 3256 1269 sh
(C) 4444 1269 sh
320 /Times-Roman f1
(,) 223 427 sh
(,) 2689 427 sh
(,) 5717 427 sh
(,) 3455 1269 sh
320 /Times-Italic f1
(ties) 998 218 sh
(E) 632 680 sh
(sub) 3697 218 sh
(E) 3098 680 sh
(,) 4288 680 sh
(\251) 5148 427 sh
(sub) 6700 218 sh
(E) 6133 680 sh
(,) 7323 680 sh
(\251) 7648 680 sh
(") 8108 427 sh
(sub) 4744 1060 sh
(E) 4870 1522 sh
(") 5575 1269 sh
320 /Times-Roman f1
(,) 830 680 sh
(,) 3296 680 sh
(,) 6331 680 sh
320 /Symbol f1
(<) 950 680 sh
(<) 3416 680 sh
(<) 6451 680 sh
320 /Courier f1
(:Top) 1061 680 sh
(:Top) 3527 680 sh
(:Top) 6562 680 sh
(Rec\(\)) 2367 1269 sh
(Rec\(\)) 3576 1269 sh
256 /LicsPlain f1
(\305) 1872 427 sh
(\305) 4797 427 sh
(\305) 7769 427 sh
(\305) 5236 1269 sh
320 ns
(\345) 4581 680 sh
(\344) 5735 1269 sh
(V) 8659 877 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(z) 1992 427 sh
(s) 4389 680 sh
(s) 4924 427 sh
(s) 7424 680 sh
(s) 7896 427 sh
(s) 5363 1269 sh
(z) 8501 877 sh
320 /Times-Roman f1
( \() 8332 877 sh
({pos}\)) 8872 877 sh
end MTsave restore
pse
1 1 pen
475 108 gm
(nc 425 108 475 387 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
475 108 gm
bu fc
2 F /|______Courier fnt
bn
(  )show
475 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
475 387 gm
0 gr
475 387 lin
psb
currentpoint
pse
425 108 gm
425 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8928 div 1600 3 -1 roll exch div scale
currentpoint translate 64 62 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 267 337 moveto 573 0 rlineto stroke
2650 337 moveto 629 0 rlineto stroke
4636 337 moveto 1406 0 rlineto stroke
7610 337 moveto 654 0 rlineto stroke
4216 1127 moveto 629 0 rlineto stroke
16 th 0 751 moveto 8803 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(T) -9 420 sh
(B) 1914 420 sh
(a) 2406 420 sh
(A) 3473 420 sh
(B) 4377 420 sh
(B) 5815 665 sh
(B\251) 6226 420 sh
(A) 6887 420 sh
(B\251) 7207 420 sh
(T) 3342 1210 sh
(a) 3883 1210 sh
(B) 5919 1210 sh
320 /Times-Italic f1
(type) 287 219 sh
(E) 459 665 sh
(term) 2670 219 sh
(E,) 2708 665 sh
(,) 3675 420 sh
(\251) 4000 420 sh
(replace) 4862 219 sh
(,) 4807 665 sh
(,) 7089 420 sh
(sub) 7717 219 sh
(E,) 7647 665 sh
(\251) 8167 665 sh
(") 8643 420 sh
(term) 4236 1009 sh
(E,) 4274 1455 sh
(,) 6120 1210 sh
(") 6433 1210 sh
256 /LicsPlain f1
(\305) 848 420 sh
(\305) 3287 420 sh
(\305) 6050 420 sh
(\305) 8272 420 sh
(\305) 4853 1210 sh
320 /Courier f1
(Rec\(\)) 1025 420 sh
(1) 4639 665 sh
(Rec\(\)) 4926 665 sh
(fold\(:) 2215 1210 sh
(\)\() 3538 1210 sh
(\)) 4047 1210 sh
(Rec\(\)) 5030 1210 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3004 665 sh
(s) 3776 420 sh
(s) 7943 665 sh
(s) 8431 420 sh
(s) 4570 1455 sh
(s) 6221 1210 sh
end MTsave restore
pse
1 1 pen
541 108 gm
(nc 490 108 541 357 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
541 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
541 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
541 357 gm
0 gr
541 357 lin
psb
currentpoint
pse
490 108 gm
490 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
7968 div 1632 3 -1 roll exch div scale
currentpoint translate 64 38 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 253 345 moveto 629 0 rlineto stroke
2234 345 moveto 1395 0 rlineto stroke
5900 345 moveto 1406 0 rlineto stroke
3926 1167 moveto 629 0 rlineto stroke
16 th 0 775 moveto 7845 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(a) 9 428 sh
(A) 1060 428 sh
(A) 1974 428 sh
(B) 4687 428 sh
(B) 5641 428 sh
(B) 7079 681 sh
(B\251) 7474 428 sh
(a) 3593 1250 sh
(B\251) 4723 1250 sh
320 /Times-Italic f1
(term) 273 219 sh
(E,) 311 681 sh
(,) 1262 428 sh
(\251) 1587 428 sh
(exposeRec) 2256 219 sh
(E,) 2641 681 sh
(\251) 3161 681 sh
(,) 4888 428 sh
(") 5201 428 sh
(replace) 6126 219 sh
(,) 6071 681 sh
(term) 3946 1041 sh
(E,) 3984 1503 sh
(,) 5108 1250 sh
(") 5421 1250 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 607 681 sh
(s) 1363 428 sh
(s) 2937 681 sh
(s) 4989 428 sh
(s) 4280 1503 sh
(s) 5209 1250 sh
256 /LicsPlain f1
(\305) 906 428 sh
(\305) 3653 428 sh
(\305) 7330 428 sh
(\305) 4579 1250 sh
320 /Courier f1
(Rec\(\)) 3798 428 sh
(1) 5903 681 sh
(Rec\(\)) 6190 681 sh
(unfold\() 2288 1250 sh
(\)) 3757 1250 sh
end MTsave restore
pse
1 1 pen
607 108 gm
(nc 556 108 607 358 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
607 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
607 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
607 358 gm
0 gr
607 358 lin
psb
currentpoint
pse
556 108 gm
556 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
8000 div 1632 3 -1 roll exch div scale
currentpoint translate 64 39 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 271 345 moveto 573 0 rlineto stroke
1759 345 moveto 1180 0 rlineto stroke
4280 345 moveto 407 0 rlineto stroke
6248 345 moveto 1117 0 rlineto stroke
4020 1166 moveto 629 0 rlineto stroke
16 th 0 774 moveto 7888 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Courier-Oblique f1
(S) 8 428 sh
(A) 1022 428 sh
(a) 1515 428 sh
(A) 2252 681 sh
(B) 3107 428 sh
(A) 4020 428 sh
(A\251) 4865 428 sh
(B) 5516 428 sh
(A\251) 5845 428 sh
(A) 6741 681 sh
(S) 3159 1249 sh
(a) 3687 1249 sh
(A) 4827 1249 sh
320 /Times-Italic f1
(type) 291 219 sh
(E) 463 681 sh
(term) 2055 219 sh
(E) 1796 681 sh
(,) 2454 681 sh
(,) 3308 428 sh
(\251) 3633 428 sh
(lift) 4299 219 sh
(,) 5717 428 sh
(sub) 6586 219 sh
(E) 6285 681 sh
(,) 6943 681 sh
(\251) 7268 681 sh
(") 7728 428 sh
(term) 4040 1040 sh
(E,) 4078 1502 sh
(,) 5029 1249 sh
(") 5342 1249 sh
256 /LicsPlain f1
(\305) 868 428 sh
(\305) 2963 428 sh
(\305) 4711 428 sh
(\305) 7389 428 sh
(\305) 4673 1249 sh
320 ns
(\345) 2747 681 sh
(\344) 5502 1249 sh
320 /Times-Roman f1
(,) 1994 681 sh
(,) 6483 681 sh
320 /Courier f1
(:) 2042 681 sh
(1) 4388 681 sh
(:) 6531 681 sh
(rec\(:) 2207 1249 sh
(\)\() 3342 1249 sh
(\)) 3851 1249 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 2555 681 sh
(s) 3409 428 sh
(s) 7044 681 sh
(s) 7516 428 sh
(s) 4374 1502 sh
(s) 5130 1249 sh
end MTsave restore
pse
F T cp
%%Page: ? 49
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(49)show
119 90 gm
(nc 91 90 119 379 6 rc)kp
10 fz
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
0 0 pen
119 379 gm
0 gr
119 379 lin
psb
currentpoint
pse
91 90 gm
91 90 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9248 div 896 3 -1 roll exch div scale
currentpoint translate 64 37 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
16 th 1588 392 moveto 3063 0 rlineto stroke
/sol { [] 0 setdash } def
/dsh { [ exch 3 div dup .6 mul ] 0 setdash } def
/dot { [ thick 3 -1 roll 5 div ] 0 setdash } def
sol 0 8 moveto 9122 0 rlineto stroke
sol 0 808 moveto 9122 0 rlineto stroke
sol 8 0 moveto 0 816 rlineto stroke
sol 9114 0 moveto 0 816 rlineto stroke
sol /fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(type) 148 475 sh
(:) 738 475 sh
(Type) 914 475 sh
(exposeRec) 2444 266 sh
(env) 1610 728 sh
(:) 2116 728 sh
(Env,) 2307 728 sh
( subst) 2930 728 sh
(:) 3739 728 sh
(Subst) 3923 728 sh
(outType) 4819 475 sh
(:) 5906 475 sh
(Type,) 6082 475 sh
( outSubst) 6829 475 sh
(:) 8082 475 sh
(Subst) 8266 475 sh
256 /LicsPlain f1
(\305) 4675 475 sh
end MTsave restore
pse
1 1 pen
185 108 gm
(nc 134 108 185 421 6 rc)kp
F 1 setTxMode
(  )show
185 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
185 108 gm
0 fs
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
185 421 gm
0 gr
185 421 lin
psb
currentpoint
pse
134 108 gm
134 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
10016 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 295 344 moveto 981 0 rlineto stroke
2661 344 moveto 1395 0 rlineto stroke
1463 1160 moveto 1395 0 rlineto stroke
16 th 0 768 moveto 5041 0 rlineto stroke
6931 768 moveto 1395 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
320 /Times-Italic f1
(E) 37 427 sh
(typeIde) 315 218 sh
(exposeRec) 2683 218 sh
(E,) 3102 680 sh
(,) 4619 427 sh
(\251) 4944 427 sh
(exposeRec) 1485 1034 sh
(E,) 1904 1496 sh
(,) 3421 1243 sh
(\251) 3746 1243 sh
(exposeRec) 6953 642 sh
(E,) 7372 1104 sh
(,) 9585 851 sh
320 /Courier-Oblique f1
(n) 690 680 sh
(A) 1454 427 sh
(A) 2401 427 sh
(A\251) 4234 427 sh
(n) 1219 1243 sh
(A\251) 3036 1243 sh
(B) 6672 851 sh
(B) 9384 851 sh
256 /LicsPlain f1
(\305) 1300 427 sh
(\305) 4080 427 sh
(\305) 2882 1243 sh
(\305) 8350 851 sh
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 3398 680 sh
(s) 4720 427 sh
(s) 2200 1496 sh
(s) 3522 1243 sh
(s) 7668 1104 sh
(s) 9686 851 sh
320 /Courier f1
(Rec\(\)) 5783 851 sh
(Rec\(\)) 8495 851 sh
end MTsave restore
pse
1 1 pen
251 108 gm
(nc 200 108 251 271 6 rc)kp
F 1 setTxMode
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
251 108 gm
2 fs
bu fc
2 F /|______Courier-Oblique fnt
bn
(  )show
0 0 pen
251 271 gm
0 gr
251 271 lin
psb
currentpoint
pse
200 108 gm
200 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
5216 div 1632 3 -1 roll exch div scale
currentpoint translate 64 45 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 293 344 moveto 1038 0 rlineto stroke
2716 344 moveto 1395 0 rlineto stroke
1504 1160 moveto 1395 0 rlineto stroke
16 th 0 768 moveto 5096 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 7 427 sh
(a) 690 680 sh
(s) 3453 680 sh
(s) 4775 427 sh
(a) 1220 1243 sh
(s) 2241 1496 sh
(s) 3563 1243 sh
320 /Times-Italic f1
(retrieve) 318 218 sh
(exposeRec) 2738 218 sh
(E,) 3157 680 sh
(,) 4674 427 sh
(\251) 4999 427 sh
(exposeRec) 1526 1034 sh
(E,) 1945 1496 sh
(,) 3462 1243 sh
(\251) 3787 1243 sh
256 /LicsPlain f1
(\305) 1355 427 sh
(\305) 4135 427 sh
(\305) 2923 1243 sh
320 /Courier-Oblique f1
(A) 1509 427 sh
(A) 2456 427 sh
(A\251) 4289 427 sh
(A\251) 3077 1243 sh
end MTsave restore
pse
1 1 pen
314 108 gm
(nc 264 108 314 401 6 rc)kp
F 1 setTxMode
0 fs
bu fc
2 F /|______LicsPlain fnt
bn
(  )show
314 108 gm
bu fc
2 F /|______Courier fnt
bn
(  )show
0 0 pen
314 401 gm
0 gr
314 401 lin
psb
currentpoint
pse
264 108 gm
264 108 lin
psb
/MTsave save def 30 dict begin
currentpoint 3 -1 roll sub neg 3 1 roll sub
9376 div 1600 3 -1 roll exch div scale
currentpoint translate 64 48 translate
/thick 0 def
/th { dup setlinewidth /thick exch def } def
8 th 3130 344 moveto 1038 0 rlineto stroke
291 1125 moveto 1395 0 rlineto stroke
16 th 0 733 moveto 7331 0 rlineto stroke
/fs 0 def
/sf {exch dup /fs exch def dup neg matrix scale makefont setfont} def
/f1 {findfont dup /cf exch def sf} def
/ns {cf sf} def
/sh {moveto show} def
/f2 {findfont matrix dup 2 .22 put makefont dup /cf exch def sf} def
320 /Symbol f2
(s) 2844 427 sh
(a) 3527 680 sh
(a) 7 1208 sh
(s) 1028 1461 sh
(a) 2833 1208 sh
(a) 3478 1208 sh
(a) 5152 1208 sh
(a) 5691 1208 sh
(s) 6338 1208 sh
(a) 6868 1208 sh
(a) 7571 816 sh
(s) 8943 816 sh
320 /Times-Italic f1
(retrieve) 3155 218 sh
(r) 4337 427 sh
(exposeRec) 313 999 sh
(E,) 732 1461 sh
(\251) 3055 1208 sh
(,) 3271 1208 sh
(\251) 5374 1208 sh
(,) 5590 1208 sh
(\251) 5913 1208 sh
(,) 6131 1208 sh
(\251) 7793 816 sh
192 ns
(r) 5978 1288 sh
256 /LicsPlain f1
(\305) 4192 427 sh
(\305) 1710 1208 sh
320 /Times-Roman f1
(\() 1847 1208 sh
(\)) 3175 1208 sh
(\() 3382 1208 sh
(\() 4166 1208 sh
(\)) 5494 1208 sh
(\() 6242 1208 sh
(\\) 6682 1208 sh
(\)\)) 7103 1208 sh
( \() 7395 816 sh
( new in ) 7922 816 sh
(\)) 9180 816 sh
320 /Courier f1
(Rec\(\)) 1961 1208 sh
(Rec\(\)) 4280 1208 sh
320 /Symbol f1
(\254) 3784 1208 sh
end MTsave restore
pse
F T cp
%%Page: ? 50
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 90 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 108 gm
(50)show
134 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(Acknowledgments)show
155 108 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.41091 0. 32 0.04109 0.(I would like to thank Mario Coppo, Mariangiola Dezani, and Georges Gonthier for pointing out mis)awidthshow
155 518 gm
(-)show
169 90 gm
0.27770 0. 32 0.02777 0.(takes in early versions of this paper. I would also like to thank Mart\222n Abadi for discussions on pattern in)awidthshow
169 519 gm
(-)show
183 90 gm
0.47515 0. 32 0.04751 0.(stantiation, and Florian Matthes for discovering a problem with variables that are free in actions. Finally,)awidthshow
197 90 gm
1.74362 0. 32 0.17436 0.(Alain Knaff designed and implemented certain generalizations of the syntax exten)awidthshow
197 450 gm
1.30050 0. 32 0.13005 0.(sions mechanism)awidthshow
211 90 gm
0.84274 0. 32 0.08427 0.(described here, and demonstrated that the syntax extension code can be reused for a different language)awidthshow
225 90 gm
(\(Prolog\).)show
F T cp
%%Page: ? 51
op
31 30 761 582 fr
0 0 xl
1 1 pen
0 0 gm
(nc 0 0 0 0 6 rc)kp
717 496 gm
(nc 31 30 761 582 6 rc)kp
F 1 setTxMode
0 fs
8 fz
bu fc
2 F /|______Times-Roman fnt
bn
(Page )show
717 514 gm
(51)show
120 90 gm
1 fs
14 fz
bu fc
2 F /|______Times-Bold fnt
bn
(References)show
143 90 gm
0 fs
10 fz
bu fc
2 F /|______Times-Roman fnt
bn
0.70709 0. 32 0.07070 0.([Amadio, Cardelli 1991] R.M. Amadio and L. Cardelli. )awidthshow
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
1.05407 0. 32 0.10540 0.(Subtyping recursive types)awidthshow
143 439 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.22338 0. 32 0.02233 0.(. )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
1.09588 0. 32 0.10958 0.(Proc. 18th Annual)awidthshow
155 108 gm
(ACM Symposium on Principles of Programming Languages)show
155 349 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
171 90 gm
0.26809 0. 32 0.02680 0.([Bove, Arbilla 1992] A. Bove and L. Arbilla. )awidthshow
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.35369 0. 32 0.03536 0.(A confluent calculus of macro expansion and evaluation)awidthshow
171 519 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
183 108 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Proc. 1992 ACM Conference on Lisp and Functional Programming)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
199 90 gm
([Cardelli FTP] L. Cardelli, )show
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(F-sub)show
199 224 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(.)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( Anonymous FTP from gatekeeper.pa.dec.com.)show
215 90 gm
0.55389 0. 32 0.05538 0.([Cardelli, )awidthshow
215 132 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.59539 0. 32 0.05953 0.(et al.)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.67749 0. 32 0.06774 0.( 1991] L. Cardelli, J.C. Mitchell, S. Martini, and A. Scedrov. )awidthshow
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.80215 0. 32 0.08021 0.(An extension of system F)awidthshow
227 108 gm
1.21459 0. 32 0.12145 0.(with subtyping)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.20828 0. 32 0.02082 0.(. )awidthshow
227 180 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.97640 0. 32 0.09764 0.(Proc. Theoretical Aspects of Computer Software)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.77392 0. 32 0.07739 0.(. Sendai, Japan. Lecture Notes in)awidthshow
239 108 gm
(Computer Science 526. Springer-Verlag.)show
255 90 gm
1.18026 0. 32 0.11802 0.([Cardelli, Wegner 1985] L. Cardelli and P. Wegner, )awidthshow
255 316 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
1.03118 0. 32 0.10311 0.(On understanding types, data abstraction and)awidthshow
267 108 gm
(polymorphism)show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(.)show
267 173 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( Computing Surveys )show
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(17)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(\(4\), 471-522.)show
283 90 gm
1.82083 0. 32 0.18208 0.([Curien, Ghelli 1991] P.-L. Curien and G. Ghelli. )awidthshow
283 314 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
1.61331 0. 32 0.16133 0.(Subtyping + extensionality: confluence of )awidthshow
283 507 gm
bu fc
2 F /|______Symbol fnt
bn
(bh)show
bu fc
2 F /|______Times-Bold fnt
bn
(-)show
295 108 gm
0.71212 0. 32 0.07121 0.(reductions in F)awidthshow
0 4 rm
bu fc
2 F /|______Symbol fnt
bn
0.21229 0.(\243)ashow
0 -4 rm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.17578 0. 32 0.01757 0.(. )awidthshow
295 185 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.60012 0. 32 0.06001 0.(Proc. Theoretical Aspects of Computer Software)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.47561 0. 32 0.04756 0.(. Sendai, Japan. Lecture Notes in)awidthshow
307 108 gm
(Computer Science 526. Springer-Verlag.)show
323 90 gm
0.10391 0. 32 0.01039 0.([Griffin 1988] T.G. Griffin. )awidthshow
323 204 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.10498 0. 32 0.01049 0.(Notational definition - a formal account)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.11322 0. 32 0.01132 0.(Proc. 3rd Annual IEEE Symposium)awidthshow
335 108 gm
(on Logic in Computer Science)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
351 90 gm
([Kalsow, Muller FTP] B. Kalsow and E. Muller, )show
351 287 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(Modula-3)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. Anonymous FTP from gatekeeper.pa.dec.com.)show
367 90 gm
0.78353 0. 32 0.07835 0.([Kohlbecker, )awidthshow
367 147 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.90728 0. 32 0.09072 0.(et al.)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
1.11175 0. 32 0.11117 0.( 1986] E. Kohlbecker, D.P. Friedman, M. Felleisen, and B. Duba. )awidthshow
367 452 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.74935 0. 32 0.07493 0.(Hygienic macro)awidthshow
379 108 gm
(expansion)show
379 151 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Proc. 1986 ACM Conference on Lisp and Functional Programming)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
395 90 gm
0.19760 0. 32 0.01976 0.([Mauny, Rauglaudre 1992] M. Mauny and D.d. Rauglaudre. )awidthshow
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.21102 0. 32 0.02110 0.(Parsers in ML)awidthshow
395 399 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.04577 0. 32 0.00457 0.(. )awidthshow
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.23727 0. 32 0.02372 0.(Proc. 1992 ACM Conference)awidthshow
407 108 gm
(on Lisp and Functional Programming)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
423 90 gm
([Miller \(to appear\)] D. Miller, )show
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(Unification under a mixed prefix)show
423 352 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(.)show
423 355 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
( Journal of Symbolic Computation.)show
439 90 gm
([Nelson 1991] G. Nelson, ed. )show
439 210 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(Systems Programming with Modula-3)show
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. Prentice Hall.)show
455 90 gm
0.10345 0. 32 0.01034 0.([Pfenning 1989] F. Pfenning. )awidthshow
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.11657 0. 32 0.01165 0.(Elf: a language for logic definition and verified metaprogramming)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. )show
455 500 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Proc.)show
467 108 gm
(4th Annual IEEE Symposium on Logic in Computer Science)show
467 348 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
483 90 gm
0.48599 0. 32 0.04859 0.([Pierce 1992] B.C. Pierce. )awidthshow
483 201 gm
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.46432 0. 32 0.04643 0.(Bounded quantification is undecidable)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.08621 0. 32 0.00862 0.(. )awidthshow
483 373 gm
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
0.45822 0. 32 0.04582 0.(Proc. 19th Annual ACM Symposium)awidthshow
495 108 gm
(on Principles of Programming Languages)show
495 277 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
511 90 gm
0.60531 0. 32 0.06053 0.([Plotkin 1981] G.D. Plotkin. )awidthshow
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
0.75469 0. 32 0.07546 0.(A structural approach to operational semantics)awidthshow
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
0.67840 0. 32 0.06784 0.(. Internal Report DAIMI)awidthshow
523 108 gm
(FN-19. Computer Science Department, Aarhus University.)show
539 90 gm
([Pollack 1990] R. Pollack. )show
1 fs
bu fc
2 F /|______Times-Bold fnt
bn
(Implicit syntax \(draft\))show
539 293 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(. )show
2 fs
bu fc
2 F /|______Times-Italic fnt
bn
(Proc. First Workshop on Logical Frameworks)show
539 484 gm
0 fs
bu fc
2 F /|______Times-Roman fnt
bn
(.)show
F T cp
%%Trailer
cd
end
%%Pages: 51 0
%%EOF
